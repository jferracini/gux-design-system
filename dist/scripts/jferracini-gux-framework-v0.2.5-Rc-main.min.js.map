{"version":3,"sources":["jferracini-gux-framework-v0.2.5-Rc-main.js"],"names":["angular","module","directive","$animate","link","$scope","$element","$attrs","$watch","$eval","setNgAnimate","valnew","valold","enabled","$timeout","restrict","scope","el","attr","next","_window","$","window","_mb","wrap","backdrop","on","e","trigger","_this","this","parent","siblings","toggleClass","is","preventDefault","width","removeClass","remove","length","top","target","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","$document","magic","_class","patt","RegExp","replace","split","join","cn","className","test","trim","classes","uiToggleClass","targets","Array","key","forEach","indexOf","$location","$anchorScroll","hash","uiScrollTo","timeout","parse","GXTooltipLink","element","attributes","controller","$observe","title","tooltip","placement","gxTooltipPlacement","gxTooltip","GXSidenavController","template","transclude","controllerAs","GXPanelHeaderController","bindToController","GXFieldsetController","undefined","collapsed","collapsible","GXCockpitController","ngFormControllerNotLoaded","message","isForce","gxformController","result","gxForce","isNgFormControllerPristine","ngFormController","$pristine","isNgFormControllerValid","$valid","$invalid","gxFormService","getController","formName","self","formControllersMap","getGxFormController","gxFormController","service","ERROR_FEEDBACK_TYPE","WARNING_FEEDBACK_TYPE","SUCCESS_FEEDBACK_TYPE","INFO_FEEDBACK_TYPE","DEFAULT_FEEDBACK_TYPE","setGxFormController","getNgFormController","setNgFormController","isPristine","setPristine","$setPristine","isValidable","ngModelController","gxSubmissionAttemptCount","$name","$dirty","resetValidators","gxWarning","gxSuccess","gxInfo","isValid","feedbackType","validatorKey","source","feedback","isEmptyObject","ngModelControllers","i","setValidatorInvalid","push","setValidatorValid","splice","resetFormController","gxFormErrorException","type","validate","attribute","Object","$validate","submit","$parse","$ctrl","gxName","gxSubmit","$parent","then","Error","append","html","gxFormDependencies","gxFormComponent","bindings","factory","component","validatorDefinition","modelValue","viewValue","force","error","getMessage","getTimeout","getFeedbackMessages","validatorsDefinitions","feedbackMessages","text","invalidValidators","validatorFunction","nameNotFoundException","parentElement","childElement","ngModelControllerNotFoundException","gxFormGroupController","$log","validator","me","func","inputElementName","name","elementIndex","elementName","stereotype","isInputNumber","isCurrency","isInput","isTextarea","isCalendar","isSelect","isDropdown","isAutocomplete","isSwitch","isEquation","isCustom","hasError","hasWarning","hasSuccess","number","url","email","date","radio","checkbox","required","pattern","minlength","maxlength","max","registerValidator","forceValidation","validatorMessage","validatorTimeout","setModel","model","$apply","getBadgeValue","item","badgePathArray","modelOptionAttributeBadge","elements","find","currentElement","currentElementName","errorValidatorsDefinitions","errorValidatorKey","errorValidatorDefinition","val","$validators","gxFormGroup","feedbakType","$modelValue","$viewValue","feedbackMessage","index","warn","gxFormGroupRun","uiMaskConfig","clearOnBlur","gxFormGroupDependencies","gxFormGroupComponent","gxFormGroupValidator","require","label","offLabel","onLabel","description","example","mask","gxModelOptions","modelOffValue","modelOnValue","modelOptions","modelOptionAttributeKey","modelOptionAttributeValue","gxRows","gxCols","gxMinlength","gxMaxlength","gxMin","gxMax","gxPattern","gxTabindex","readonly","disabled","gxIgnoreTimezone","gxCalPlacement","gxOnSearch","gxOnCreate","gxOnUpdate","gxOnDelete","gxAttributeValueMatch","run","gxFormGroupValidatorController","$onInit","gxType","toUpperCase","gxKey","gxFunction","gxMessage","gxTimeout","gxFormGroupValidatorDependencies","gxFormGroupValidatorComponent","gxFormGroupTextareaController","gxFormGroupTextareaDependencies","gxFormGroupTextareaComponent","gxFormGroupSwitchController","isOn","gxFormGroupSwitchDependencies","gxFormGroupSwitchComponent","gxFormGroupSelectController","gxFormGroupSelectDependencies","gxFormGroupSelectComponent","gxFormGroupInputController","gxFormGroupInputDependencies","gxFormGroupInputComponent","gxFormGroupInputNumberController","gxFormGroupInputNumberDependencies","gxFormGroupInputNumberComponent","gxFormGroupInputCurrencyController","console","log","gxFormGroupInputCurrencyDependencies","gxFormGroupInputCurrencyComponent","MathQuill","gxFormGroupEquationController","mathFieldElement","MQ","getInterface","mathField","MathField","spaceBehavesLikeTab","handlers","edit","latex","gxFormGroupEquationDependencies","gxFormGroupEquationComponent","gxFormGroupDropdownController","showBadge","gxFormGroupDropdownDependencies","gxFormGroupDropdownComponent","moment","jstz","gxFormGroupCalendarController","GX_FORM_GROUP_CONFIG","ignoreTimezone","datepickerElement","viewMode","format","language","navigator","userLanguage","formattedDate","value","utc","isSame","toISOString","datepicker","datetimepicker","locale","useStrict","useCurrent","allowInputToggle","showTodayButton","showClear","icons","clear","close","down","previous","time","today","up","tooltips","selectMonth","prevMonth","nextMonth","selectYear","prevYear","nextYear","selectDecade","prevDecade","nextDecade","prevCentury","nextCentury","data","parseInputDate","event","gxFormGroupCalendarDependencies","gxFormGroupCalendarComponent","_","hideDropdownMenu","setViewMode","editMode","setEditMode","refresh","newValue","isSearchable","modelFilteredOptions","slice","fullMatch","initialMatch","parcialMatch","modelOption","modelOptionString","String","modelAutocompleteString","modelAutocomplete","concat","noDataFound","itemFound","itemFoundArray","filter","syncModelAutocomplete","handleCreateSuccess","createdObject","handleCreateError","handleUpdateSucess","updatedObject","handleUpdateError","oldValue","handleDeleteSuccess","deletedObject","handleDeleteError","gxFormGroupAutocompleteController","defaultGxModelOptions","updateOn","debounce","default","blur","searchableGxModelOptions","inputElement","isCreatable","isUpdateable","isDeletable","isLoading","selectOption","dropdown","keyCode","focus","contains","relatedTarget","create","catch","isEditDisabled","isUpdateDisabled","update","cancel","delete","selectedOption","showBeginSerach","showNoDataFound","isMessage","gxFormGroupAutocompleteDependencies","gxFormGroupAutocompleteComponent","gxFormButtonController","$state","gxAppService","buttonClass","iconClass","show","exception","constructor","lastState","getLastState","click","go","onClick","gxFormButtonDependencies","gxFormButtonComponent","showMessage","$broadcast","showInfo","body","showSuccess","showWarning","showError","gxAppConfig","$provide","cfpLoadingBarProvider","locationProvider","GX_STATE_CONFIG","stateHelperProvider","$mdThemingProvider","isIE","userAgent","match","html5Mode","state","includeSpinner","spinnerTemplate","decorator","$injector","$delegate","cause","$rootScope","get","theme","primaryPalette","hue-1","hue-2","hue-3","accentPalette","initState","abstract","expanded","includes","getLink","tab","menu","isToDisplayMenu","display","getMenuIconClass","getMenuTitle","masthead","getMenuDescription","onMenuClick","isToDisplayMasthead","current","setStateRoute","stateRoute","getBreadcrumbItems","breadcrumbItems","states","reverse","actions","getMastheadTitle","getMastheadDescription","getMastheadActions","mastheadActions","hasOwnProperty","getTabs","tabs","children","brother","id","isTabDisabled","tabId","tabDisabedArray","disableTab","enableTab","resetTabs","isTabActive","wait","context","timer","args","prototype","call","arguments","apply","buildDelayedToggler","navID","$mdSidenav","toggle","debug","buildToggler","gxAppController","rootScope","$http","toaster","smoothScroll","toggleLeft","toggleRight","isOpenRight","isOpen","config","asideFolded","showNav","headerFixed","asideFixed","asideDock","container","rootState","intro","mastheadTitle","mastheadDescription","CurrentDate","Date","$on","toState","toParams","fromState","fromParams","session","response","introJs","introOptions","nextLabel","prevLabel","skipLabel","doneLabel","setOptions","startIntro","start","aside","displayAside","footer","displayFooter","navbar","displayNavbar","cockpit","displayCockpit","toaterMessage","pop","gxAppRun","stateParams","gxAppDependencies","gxAppComponent","navbarRight","gxVersion","showAside","showFooter","showHeader","guxToolboxDependencies"],"mappings":"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","file":"jferracini-gux-framework-v0.2.5-Rc-main.min.js","sourcesContent":["(function(angular) {\n    'use strict';\n\n    angular.module('gux.flatfull', [])\n        .directive('setNgAnimate', ['$animate', function($animate) {\n            return {\n                link: function($scope, $element, $attrs) {\n                    $scope.$watch(function() {\n                        return $scope.$eval($attrs.setNgAnimate, $scope);\n                    }, function(valnew, valold) {\n                        $animate.enabled(!!valnew, $element);\n                    });\n                }\n            };\n        }])\n        .directive('uiNav', ['$timeout', function($timeout) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    var _window = $(window),\n                        _mb = 768,\n                        wrap = $('.app-aside'),\n                        next,\n                        backdrop = '.dropdown-backdrop';\n                    // unfolded\n                    el.on('click', 'a', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        var _this = $(this);\n                        _this.parent().siblings(\".active\").toggleClass('active');\n                        _this.next().is('ul') && _this.parent().toggleClass('active') && e.preventDefault();\n                        // mobile\n                        _this.next().is('ul') || ((_window.width() < _mb) && $('.app-aside').removeClass('show off-screen'));\n                    });\n\n                    // folded & fixed\n                    el.on('mouseenter', 'a', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        $('> .nav', wrap).remove();\n                        if (!$('.app-aside-fixed.app-aside-folded').length || (_window.width() < _mb) || $('.app-aside-dock').length) return;\n                        var _this = $(e.target),\n                            top, w_h = $(window).height(),\n                            offset = 50,\n                            min = 150;\n\n                        !_this.is('a') && (_this = _this.closest('a'));\n                        if (_this.next().is('ul')) {\n                            next = _this.next();\n                        } else {\n                            return;\n                        }\n\n                        _this.parent().addClass('active');\n                        top = _this.parent().position().top + offset;\n                        next.css('top', top);\n                        if (top + next.height() > w_h) {\n                            next.css('bottom', 0);\n                        }\n                        if (top + min > w_h) {\n                            next.css('bottom', w_h - top - offset).css('top', 'auto');\n                        }\n                        next.appendTo(wrap);\n\n                        next.on('mouseleave.nav', function(e) {\n                            $(backdrop).remove();\n                            next.appendTo(_this.parent());\n                            next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                            _this.parent().removeClass('active');\n                        });\n\n                        $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next) {\n                            next && next.trigger('mouseleave.nav');\n                        });\n\n                    });\n\n                    wrap.on('mouseleave', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        $('> .nav', wrap).remove();\n                    });\n                }\n            };\n        }])\n        .directive('uiToggleClass', ['$timeout', '$document', function($timeout, $document) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    el.on('click', function(e) {\n                        e.preventDefault();\n                        var classes = attr.uiToggleClass.split(','),\n                            targets = (attr.target && attr.target.split(',')) || Array(el),\n                            key = 0;\n                        angular.forEach(classes, function(_class) {\n                            var target = targets[(targets.length && key)];\n                            (_class.indexOf('*') !== -1) && magic(_class, target);\n                            $(target).toggleClass(_class);\n                            key++;\n                        });\n                        $(el).toggleClass('active');\n\n                        function magic(_class, target) {\n                            var patt = new RegExp('\\\\s' +\n                                _class.replace(/\\*/g, '[A-Za-z0-9-_]+').split(' ').join('\\\\s|\\\\s') +\n                                '\\\\s', 'g');\n                            var cn = ' ' + $(target)[0].className + ' ';\n                            while (patt.test(cn)) {\n                                cn = cn.replace(patt, ' ');\n                            }\n                            $(target)[0].className = $.trim(cn);\n                        }\n                    });\n                }\n            };\n        }])\n        .directive('uiScrollTo', ['$location', '$anchorScroll', function($location, $anchorScroll) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    el.on('click', function(e) {\n                        $location.hash(attr.uiScrollTo);\n                        $anchorScroll();\n                    });\n                }\n            };\n        }]);\n\n}(window.angular));\n(function (angular, $) {\n\t'use strict';\n\n\tangular.module('gux.tooltip', [])\n\t\t.directive('gxTooltip', ['$timeout',\n\t\t\tfunction (timeout, parse) {\n\n\t\t\t\tfunction GXTooltipLink(scope, element, attributes, controller) {\n\t\t\t\t\tattributes.$observe('gxTooltip', function (title) {\n\t\t\t\t\t\ttimeout(function () {\n\t\t\t\t\t\t\t$(element)\n\t\t\t\t\t\t\t\t.tooltip({\n\t\t\t\t\t\t\t\t\t'placement': attributes.gxTooltipPlacement ? attributes.gxTooltipPlacement : 'top'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.attr('data-original-title', attributes.gxTooltip);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'A',\n\t\t\t\t\tlink: GXTooltipLink\n\t\t\t\t};\n\n\t\t\t}]);\n\n} (window.angular, window.$));\n\n(function(angular, $) {\n    'use strict';\n\n    angular.module('gux.sidenav', [])\n        .directive('gxSidenav', [\n            function() {\n\n                function GXSidenavController() {\n\n                }\n\n                return {\n                    restrict: 'E',\n                    replace: true,\n                    template:'<section><md-sidenav class=\"md-sidenav-left bg-black-opacity\" md-component-id=\"left\" md-disable-backdrop md-whiteframe=\"4\"><div class=\"md-navbar bg-black md-whiteframe-z1 gx-cockpit-nav\"><ul class=\"nav navbar-nav w-full\"><li class=\"pull-left m-l\"><h3>Menu de contexto</h3></li><li class=\"pull-right\"><a href ng-click=\"$ctrl.close()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></a></li></ul></div><md-content><div flex class=\"aside-wrap\"><div class=\"navi-wrap\"><div ng-cloak><md-content><md-tabs class=\"blue-grey-50\" md-no-select-click md-dynamic-height md-center-tabs md-swipe-content md-align-tabs=\"top\" md-stretch-tabs=\"always\"><md-tab label=\"Por assunto\"><md-content class=\"bg-black-opacity\"><h1>Assuntos</h1></md-content></md-tab><md-tab label=\"Por sistema\"><md-content class=\"bg-black-opacity\"><h1>Sistemas</h1></md-content></md-tab></md-tabs></md-content></div></div></div></md-content></md-sidenav></section>', // dentro dele o sidenav app\n                    transclude: true,\n                    controller: GXSidenavController,\n                    controllerAs: 'controller',\n                    scope: false\n                };\n            }\n        ]);\n\n}(window.angular, window.$));\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panel', ['gux.panelHeader', 'gux.panelBody', 'gux.panelFooter'])\n\t\t.directive('gxPanel', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div><div ng-transclude ngsf-fullscreen class=\"panel panel-default no-border\"></div></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelHeader', ['angularScreenfull'])\n\t\t.directive('gxPanelHeader', [\n\t\t\tfunction () {\n\n\t\t\t\tfunction GXPanelHeaderController() {\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div class=\"panel-heading font-bold\"><a ngsf-toggle-fullscreen class=\"text-muted text-lg pull-right\"><i class=\"fa fa-expand\"></i></a> <span class=\"h4\">{{controller.title}}</span></div>',\n\t\t\t\t\tscope: false,\n\t\t\t\t\tcontroller: GXPanelHeaderController,\n\t\t\t\t\tcontrollerAs: 'controller',\n\t\t\t\t\tbindToController: {\n\t\t\t\t\t\ttitle: '@',\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelFooter', [])\n\t\t.directive('gxPanelFooter', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div ng-transclude class=\"panel-footer text-right bg-light lter\"></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelBody', [])\n\t\t.directive('gxPanelBody', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div ng-transclude class=\"panel-body\"></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.fieldset', [])\n\t\t.directive('gxFieldset', [\n\t\t\tfunction () {\n\n\t\t\t\tfunction GXFieldsetController($scope) {\n\n\t\t\t\t\tif ($scope.controller.collapsed == undefined) {\n\n\t\t\t\t\t\t$scope.controller.collapsible = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$scope.controller.collapsible = true;\n\n\t\t\t\t\t\tif ($scope.controller.collapsed === null\n\t\t\t\t\t\t\t|| $scope.controller.collapsed === 'false'\n\t\t\t\t\t\t\t|| $scope.controller.collapsed === false) {\n\t\t\t\t\t\t\t$scope.controller.collapsed = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.controller.collapsed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<fieldset><legend><span ng-if=\"controller.collapsible\" ng-click=\"controller.collapsed = !controller.collapsed\"><i ng-class=\"{\\'fa-chevron-right\\': controller.collapsed, \\'fa-chevron-down\\': !controller.collapsed}\" class=\"fa fa-fw\" style=\"font-size: 0.6em; vertical-align: middle;\"></i></span> {{controller.title}}</legend><span ng-transclude ng-class=\"{\\'collapse\\': controller.collapsible && controller.collapsed === true}\"></span></fieldset>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: true,\n\t\t\t\t\tcontroller: ['$scope', GXFieldsetController],\n\t\t\t\t\tcontrollerAs: 'controller',\n\t\t\t\t\tbindToController: {\n\t\t\t\t\t\ttitle: '@',\n\t\t\t\t\t\tcollapsed: '='\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function(angular, $) {\n    'use strict';\n\n    angular.module('gux.cockpit', [])\n        .directive('gxCockpit', [\n            function() {\n\n                function GXCockpitController() {\n\n                }\n\n                return {\n                    restrict: 'E',\n                    replace: true,\n                    template:'<div class=\"md-navbar blue-900 md-whiteframe-z1 gx-cockpit-nav header-fixed\" ng-cloak><ul class=\"nav navbar-nav navbar-left\"><li class><a href ng-click=\"$ctrl.toggleLeft(\\'cockpit-menu\\')\" class=\"pull-left\"><i class=\"ion ion-grid text-white m-l-xs font-bold\" style=\"font-size: 22px;\"></i></a> <span class=\"pull-right m-r-n-xxl hidden-lg hidden-md hidden-sm\"><a class=\"gx-cockpit-brand no-padder\" href=\"/\"><img src=\"images/logo-app-cockpit.png\"></a></span></li><li class=\"hide-xs hide-sm m-l-xs\"><a class=\"gx-cockpit-brand no-padder\" href=\"/\"><img src=\"images/logo-app-cockpit.png\"></a></li><li class=\"dropdown m-l-sm pos-stc\" dropdown><a href class=\"dropdown-toggle dker hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-bookmark fa-fw text-warning\"></i> <span class=\"text-white\">apps favoritos</span></a><div class=\"dropdown-menu w-full bg-white animated fadeIn\"><div class=\"panel\"><div class=\"panel-heading b-light bg-light\"><strong>Favoritos</strong></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Olá!</strong><br><span>Estes são seus favoritos. Tenha sempre acesso rápido!</span></span></span> <span class=\"row list-group-item blue-grey-300\"><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">CliqCCEE <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema de contabilização e Liquidação</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">SigaCCEE <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema integrado de gestão de ativos</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">S.C.D.E. <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema de coleta de dados de energia</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div></span> <a href class=\"list-group-item blue-grey-50 clear\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger font-bold\">fechar</span></a></div></div></div></li></ul><ul class=\"nav navbar-nav navbar-right m-r-xs gx-cockpit-link hidden-xs\"><li class=\"dropdown\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-user fa-fw text-white\"></i> <span class=\"text-white\">Julio Ferracini</span></a><div class=\"dropdown-menu w-xl animated fadeIn\"><div class=\"panel bg-white\"><div class=\"panel-heading b-light bg-light\"><strong>Seu cadastro</strong></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Julio</strong><br><span>Por aqui você administra seu cadastro.</span></span></span> <a ui-sref=\"home.prototipos.profile-mockup\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-user fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Configurações da sua conta<br><small class=\"text-muted\">Dados cadastrais do usuário ativo, troca de senha e configuração do perfil (notificações e preferências gerais).</small></span></a> <a ui-sref=\"home.gus.minha-conta\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-key fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Troca de senha e e-mail pessoal<br><small class=\"text-muted\">Alterar dados de acesso como senha e e-mail pessoal.</small></span></a> <a ui-sref=\"home.prototipos.profile-mockup\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-lock fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Atribuições e permissões de acesso<br><small class=\"text-muted\">Visualizar e gerenciar preferências de acesso a sistemas na CCEE.</small></span></a> <a href class=\"list-group-item text-warning\"><span class=\"pull-left m-r text-warning\"><i class=\"fa fa-gear fa-2x text-warning\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Administração do sistema de cadastro<br><small class=\"text-muted\">Gerenciar preferências globais do sistema de cadastro.</small></span></a> <a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-sign-out text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger font-bold\">Sair do ambiente CCEE</span></a></div></div></div></li><li class=\"dropdown\" dropdown gx-tooltip=\"Notificações gerais\" gx-tooltip-placement=\"bottom\"><a href class=\"dropdown-toggle hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-bell fa-fw text-white\"></i> <span class=\"badge badge-sm up bg-danger dk pull-right-xs md-whiteframe-z2\">30</span></a><div class=\"dropdown-menu w-xl animated fadeIn\"><div class=\"panel bg-white\"><div class=\"panel-heading b-light bg-light\"><strong>Você possui <span>30</span> notificações</strong></div><div class=\"list-group\"><span href class=\"list-group-item bg-light dk\"><span class=\"pull-left m-r thumb-sm\"><img src=\"images/profile.jpg\" alt=\"...\" class=\"img-circle\"></span> <span class=\"clear block m-b-none text-light\"><i class=\"fa fa-user\"></i> <strong>Julio Ferracini</strong><br><small class=\"text-muted\">notificações referentes a este perfil</small></span></span> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-check text-info\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Cadastro <span class=\"badge blue-grey-200\">20120</span> aprovado para sua avaliação.<br><small class=\"text-muted\">1 hora atrás referente à</small> <small class=\"text-info\">Renato Tegão</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-file-pdf-o text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Envio de documentos pendentes para o cadastro <span class=\"badge blue-grey-200\">20120</span><br><small class=\"text-muted\">2 hora atrás referente à</small> <small class=\"text-info\">COMERCIAL XPT</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa fa-refresh fa-spin text-light\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Julio, sua empresa possui solicitações de cadastro estão em análise. Fique atento às notificações.<br><small class=\"text-muted\">2 hora atrás enviado pela</small> <small class=\"text-warning\">CCEE</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa fa-bullhorn text-warning\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\"><span class=\"badge amber\">28</span> Novos comunicados recebidos.<br><small class=\"text-muted\">4 hora atrás enviado pela</small> <small class=\"text-warning\">CCEE</small></span></a></div><div class=\"panel-footer text-sm\"><a href class=\"pull-right\"><i class=\"fa fa-bell\"></i></a> <a href=\"#notes\" data-toggle=\"class:show animated fadeInRight\">Todas as notificações do perfil ativo</a></div></div></div></li><li class=\"dropdown pos-stc\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-right\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-tasks fa-fw text-white\"></i> <span class=\"text-white hidden-sm hiddem-xs\">Tarefas</span></a><div class=\"dropdown-menu bg-white animated fadeInRight md-whiteframe-z4\"><div class=\"panel bg-white\"><div class=\"panel-heading blue-grey-100 no-border\"><h4 class=\"font-thin\">Tarefas</h4></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Julio</strong><br><span>Estas são atividades vinculadas ao seu perfil.</span></span></span><div class=\"list-group-item\"><div class=\"row\"><div class=\"col-md-12\"><div class=\"center text-center\"><i class=\"ion-coffee fa-5x fa-fw text-muted\"></i><p>Você não possui nenhuma tarefa para realizar no momento.</p></div><div class=\"panel panel-default hide\"><div class=\"panel-heading\"><span class=\"label label-default pull-right m-t-sm wrapper-xs\">4 recebidas hoje</span><h4 class=\"font-thin m-t-sm m-b text-muted\"><i class=\"fa fa-tasks m-r\" aria-hidden=\"true\"></i> Tarefas</h4></div><div class=\"wrapper\">Tarefas gerais do usuário.</div><ul><li>Links de atividades rotineiras</li><li>• Declaração de Sobras e Deficits (MCSD)</li><li>• Registro de contratos</li><li>• Etc.</li></ul></div></div></div></div><a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger\">fechar painel</span></a></div></div></div></li><li class=\"dropdown pos-stc\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-right\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-calendar fa-fw text-white\"></i> <span class=\"text-white hidden-sm hiddem-xs\"></span></a><div class=\"dropdown-menu w-xxl bg-white animated fadeInRight b-l\"><div class=\"panel bg-white\"><div class=\"panel-heading blue-grey-100 no-border\"><h4 class=\"font-thin\">Calendário de operações</h4></div><div class=\"list-group\"><span class=\"list-group-item bg-light\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><span class=\"pull-left\"><strong>Julio</strong><br><span>Fique atento a estes prazos. Eles são importantes para a operação do Mercado e pode afetar o seu dia-a-dia.</span></span> <span class=\"pull-left\"><span class=\"font-thin text-muted\">Hoje</span> <small class=\"text-primary\">{{CurrentDate | date: \\'dd/MM/yyyy\\'}}</small> <small class=\"text-muted\">às</small> <small class=\"text-primary\">{{CurrentDate | date: \\'hh:mm\\'}}</small></span></span></span><div class=\"list-group-item bg-light lter\"><md-datepicker class=\"w-full\" ng-model=\"valorDataDes\" md-placeholder=\"Data\"></md-datepicker></div><div class=\"list-group-item\" style=\"overflow:auto; height:500px;\"><div class=\"row\"><div class=\"list-item col-md-12 no-border-xs\"><a href class=\"text-muted pull-right text-lg\"><i class=\"icon-arrow-right\"></i></a><div class=\"panel-body no-padder\"><div class=\"md-list md-whiteframe-z0 bg-white m-b\"><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para Registro e Validação dos montantes de Cessão de Energia de Reserva para usinas de fonte eólica - 1° quadriênio correspondente ao 2° LER</h3><small class=\"font-thin\">X+5du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle blue-grey\"><span class=\"text-lg\"><i class=\"fa fa-line-chart text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Divulgação dos resultados da liquidação financeira do MCSD - set/16</h3><small class=\"font-thin\">X+2du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para disponibilizar os Relatórios do Processamento da Contabilização - jul/16</h3><small class=\"font-thin\">MS+21du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para divulgar os relatórios de pré-liquidação de penalidades - ago/16</h3><small class=\"font-thin\">MS+22du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para disponibilizar os Relatórios do Processamento da Contabilização - jul/16</h3><small class=\"font-thin\">MS+21du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para divulgar os relatórios de pré-liquidação de penalidades - ago/16</h3><small class=\"font-thin\">MS+22du</small></div></div></div></div></div></div></div><a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger\">fechar painel</span></a></div></div></div></li><li><a ng-click=\"startIntro()\" gx-tooltip=\"Tour guiado\" gx-tooltip-placement=\"bottom\" class=\"hvr-underline-from-center\"><i class=\"fa fa-question-circle fa-fw text-white\"></i></a></li><li><a ngsf-toggle-fullscreen gx-tooltip=\"Tela cheia\" gx-tooltip-placement=\"bottom\"><i class=\"fa fa-expand fa-fw text-white\"></i> <i class=\"fa fa-compress fa-fw text-active\"></i></a></li></ul></div>',\n                    transclude: true,\n                    controller: GXCockpitController,\n                    controllerAs: 'controller',\n                    scope: false,\n                    link: function(scope, element, attributes) {\n                        element.addClass('customClass');\n                    }\n                };\n            }\n        ]);\n\n}(window.angular, window.$));\n(function($, angular) {\n\n    'use strict';\n\n    function ngFormControllerNotLoaded() {\n        this.message = \"Angular FormController has not been loaded yet\";\n    }\n\n    function isForce(gxformController) {\n        var result = false;\n        if (!!gxformController.gxForce &&\n            (gxformController.gxForce === true ||\n                gxformController.gxForce === \"true\")) {\n            result = true;\n        }\n        return result;\n    }\n\n    function isNgFormControllerPristine(ngFormController) {\n        return ngFormController.$pristine;\n    }\n\n    function isNgFormControllerValid(ngFormController) {\n        return ngFormController.$valid || !ngFormController.$invalid;\n    }\n\n    function isGxFormControllerWarning(gxformController) {\n        return !!gxformController.gxWarning || gxformController.gxSubmissionWarningCont <= 1;\n    }\n\n    function gxFormService() {\n\n        var service = {};\n        service.ERROR_FEEDBACK_TYPE = '$error';\n        service.WARNING_FEEDBACK_TYPE = 'gxWarning';\n        service.SUCCESS_FEEDBACK_TYPE = 'gxSuccess';\n        service.INFO_FEEDBACK_TYPE = 'gxInfo';\n        service.DEFAULT_FEEDBACK_TYPE = 'gxDefault';\n\n        var self = this;\n        self.formControllersMap = {};\n\n        function getController(formName) {\n            var controller = self.formControllersMap[formName];\n            if (!controller) {\n                self.formControllersMap[formName] = {};\n                controller = self.formControllersMap[formName];\n            }\n            return controller;\n        }\n\n        function getGxFormController(formName) {\n            return getController(formName).gxFormController;\n        }\n\n        service.setGxFormController = function(formName, gxFormController) {\n            getController(formName).gxFormController = gxFormController;\n        };\n\n        service.getNgFormController = function(formName) {\n            var ngFormController = getController(formName).ngFormController;\n            if (!ngFormController) {\n                throw new ngFormControllerNotLoaded();\n            }\n            return ngFormController;\n        };\n\n        service.setNgFormController = function(formName, ngFormController) {\n            getController(formName).ngFormController = ngFormController;\n        };\n\n        service.isPristine = function(formName) {\n            return isNgFormControllerPristine(service.getNgFormController(formName));\n        };\n\n        service.setPristine = function(formName) {\n            return service.getNgFormController(formName).$setPristine();\n        };\n\n        service.isValidable = function(formName, ngModelController) {\n            var result = false;\n            var ngFormController = service.getNgFormController(formName);\n            var gxFormController = getGxFormController(formName);\n            result = gxFormController.gxSubmissionAttemptCount > 0 ||\n                ngFormController[ngModelController.$name].$dirty;\n            return result;\n        };\n\n        service.resetValidators = function(formName) {\n            var gxFormController = getGxFormController(formName);\n            gxFormController.gxWarning = {};\n            gxFormController.gxSuccess = {};\n            gxFormController.gxInfo = {};\n        };\n\n        service.isForce = function(formName) {\n            var gxFormController = getGxFormController(formName);\n            return isForce(gxFormController);\n        };\n\n        service.isValid = function(formName, feedbackType, validatorKey, ngModelController) {\n\n            var ngFormController = service.getNgFormController(formName);\n\n            if (!feedbackType) {\n                return isNgFormControllerValid(ngFormController);\n            }\n\n            var result = true;\n            var source = null;\n            if (feedbackType === service.ERROR_FEEDBACK_TYPE) {\n                source = ngFormController;\n            } else {\n                source = getGxFormController(formName);\n            }\n\n            var feedback = source[feedbackType];\n            if (!validatorKey) {\n                return !feedback || $.isEmptyObject(feedback);\n            } else {\n                var ngModelControllers = feedback[validatorKey];\n                if (!!ngModelControllers) {\n                    for (var i = 0; ngModelControllers.length > i; i++) {\n                        if (ngModelController.$name === ngModelControllers[i].$name) {\n                            result = false;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return result;\n        };\n\n        service.setValidatorInvalid = function(formName, feedbackType, validatorKey, ngModelController) {\n            if (feedbackType != service.ERROR_FEEDBACK_TYPE) {\n                if (!!ngModelController) {\n                    var gxFormController = getGxFormController(formName);\n                    if (!gxFormController[feedbackType][validatorKey]) {\n                        gxFormController[feedbackType][validatorKey] = [];\n                    }\n                    gxFormController[feedbackType][validatorKey].push(ngModelController);\n                }\n            }\n        };\n\n        service.setValidatorValid = function(formName, feedbackType, validatorKey, ngModelController) {\n            if (feedbackType != service.ERROR_FEEDBACK_TYPE) {\n                if (!!ngModelController) {\n                    var gxFormController = getGxFormController(formName);\n                    var ngModelControllers = gxFormController[feedbackType][validatorKey];\n                    if (!ngModelControllers) {\n                        return;\n                    }\n                    for (var i = ngModelControllers.length - 1; i >= 0; i--) {\n                        if (ngModelController.$name === ngModelControllers[i].$name) {\n                            ngModelControllers.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        };\n\n        service.resetFormController = function(formName) {\n            getGxFormController(formName).gxSubmissionAttemptCount = 0;\n            service.getNgFormController(formName).$setPristine();\n        }\n\n        return service;\n    }\n\n    function gxFormErrorException(message, title) {\n        this.title = title;\n        this.message = message;\n        this.type = 'error';\n    }\n\n    function gxFormWarningException(message, title) {\n        this.title = title;\n        this.message = message;\n        this.type = 'warning';\n    }\n\n    function validateFormGroups(ngFormController) {\n        angular.forEach(ngFormController, function(value, key) {\n            if (!!value && !!value.gxValidate) {\n                value.gxValidate(null, null, function() {});\n            }\n        });\n    }\n\n    function validate($scope, ngFormController) {\n        angular.forEach(ngFormController, function(attribute) {\n            if (!!attribute && attribute instanceof Object && !!attribute.$validate) {\n                attribute.$validate();\n            }\n        });\n    }\n\n    function submit($scope, $parse, gxFormService) {\n\n        var gxFormController = $scope.$ctrl;\n        var ngFormController = gxFormService.getNgFormController(gxFormController.gxName);\n        $scope.$ctrl.gxSubmissionAttemptCount++;\n\n        validate($scope, ngFormController);\n\n        if (!isForce(gxFormController) && !isNgFormControllerValid(ngFormController)) {\n            var message = 'Alguns campos do formulário requerem sua atenção, você deve obrigatoriamente corrigi-los antes de submeter o formulário';\n            throw new gxFormErrorException(message, 'Ops!');\n        }\n\n        var result = $parse(gxFormController.gxSubmit)($scope.$parent);\n\n        if (!!result && !!result.then) {\n            result\n                .then(function() {\n                    gxFormService.resetFormController(gxFormController.gxName);\n                });\n        } else if (!!result) {\n            gxFormService.resetFormController(gxFormController.gxName);\n        }\n\n        return result;\n    }\n\n    function gxFormController($parse, $element, $scope, gxFormService) {\n\n        var self = this;\n\n        if (!self.gxSubmit) {\n            throw new Error('You must define gx-submit attribute for element ' + $('<span>').append($element).html());\n        }\n\n        self.gxSubmissionAttemptCount = 0;\n        //self.gxSubmissionWarningCont = 0;\n        //self.gxSubmissionErrorCont = 0;\n\n        self.submit = function() {\n            submit($scope, $parse, gxFormService);\n        }\n\n        gxFormService.setNgFormController(self.gxName, null);\n        gxFormService.setGxFormController(self.gxName, self);\n\n        $scope.$watch(self.gxName, function(ngFormController) {\n            gxFormService.setNgFormController(self.gxName, ngFormController);\n        });\n    }\n\n    var gxFormDependencies = [];\n\n    var gxFormComponent = {\n        template:'<form name=\"{{$ctrl.gxName}}\" ng-submit=\"$ctrl.submit()\" ng-transclude novalidate></form>',\n        transclude: true,\n        bindings: {\n            gxName: '@',\n            gxSubmit: '@',\n            gxForce: '@'\n        },\n        controller: [\n            '$parse',\n            '$element',\n            '$scope',\n            'gxFormService',\n            gxFormController\n        ]\n    };\n\n    angular\n        .module('gux.form', gxFormDependencies)\n        .factory('gxFormService', gxFormService)\n        .component('gxForm', gxFormComponent);\n\n}(window.$, window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    var elementIndex = 1;\n\n    function isForce($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = false;\n        if (!!validatorDefinition.force) {\n            if (validatorDefinition.force === 'false' || validatorDefinition.force === false) {\n                result = false;\n            } else if (validatorDefinition.force === 'true' || validatorDefinition.force === true) {\n                result = true;\n            } else {\n                try {\n                    result = $parse(validatorDefinition.force)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n                } catch (error) {\n                    throw new Error(\"Unable to parse gx-form-group-validator gx-force function: \" + validatorDefinition.force);\n                }\n            }\n        }\n        return result;\n    }\n\n    function getMessage($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = undefined;\n        if (!!validatorDefinition.message) {\n            try {\n                result = $parse(validatorDefinition.message)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n            } catch (error) {\n                result = validatorDefinition.message;\n            }\n            if (!result) {\n                result = 'Menssagem de feedback não definida para o validador: ' + key;\n            }\n        }\n        return result;\n    }\n\n    function getTimeout($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = undefined;\n        if (!!validatorDefinition.timeout) {\n            try {\n                result = $parse(validatorDefinition.timeout)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n            } catch (error) {\n                result = validatorDefinition.timeout;\n            }\n        }\n        return result;\n    }\n\n    function getFeedbackMessages($parse, $scope, validatorsDefinitions, modelValue, viewValue) {\n        var feedbackMessages = [];\n        for (var i = 0; validatorsDefinitions.length > i; i++) {\n            var validatorDefinition = $scope.$ctrl.validatorsDefinitions[validatorsDefinitions[i].type][validatorsDefinitions[i].key];\n            feedbackMessages.push({\n                text: getMessage($parse, $scope, validatorDefinition, modelValue, viewValue),\n                timeout: getTimeout($parse, $scope, validatorDefinition, modelValue, viewValue)\n            });\n        }\n        return feedbackMessages;\n    }\n\n    // TRUE it is valid\n    // FALSE it is invalid\n    function validate($parse, $scope, gxFormService, feedbackType, ngModelController, modelValue, viewValue) {\n        var result = true;\n        var invalidValidators = [];\n        gxFormService.resetValidators($scope.$ctrl.formName);\n        for (var validatorKey in $scope.$ctrl.validatorsDefinitions[feedbackType]) {\n            var validatorDefinition = $scope.$ctrl.validatorsDefinitions[feedbackType][validatorKey];\n            if (isForce($parse, $scope, validatorDefinition, modelValue, viewValue) || gxFormService.isValidable($scope.$ctrl.formName, ngModelController)) {\n                if (feedbackType != gxFormService.ERROR_FEEDBACK_TYPE &&\n                    !!validatorDefinition.validatorFunction &&\n                    !$parse(validatorDefinition.validatorFunction)($scope.$parent, { modelValue: modelValue, viewValue: viewValue })) {\n                    gxFormService.setValidatorInvalid($scope.$ctrl.formName, feedbackType, validatorKey, ngModelController, validatorDefinition.timeout);\n                }\n                if (!gxFormService.isValid($scope.$ctrl.formName, feedbackType, validatorKey, ngModelController)) {\n                    invalidValidators.push(validatorDefinition);\n                }\n            }\n        }\n        if (!!invalidValidators && invalidValidators.length > 0) {\n            $scope.$ctrl.feedbackType = feedbackType;\n            $scope.$ctrl.feedbackMessages = getFeedbackMessages($parse, $scope, invalidValidators, modelValue, viewValue);\n            result = false;\n        } else {\n            $scope.$ctrl.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n        }\n        return result;\n    };\n\n    function nameNotFoundException(parentElement, childElement) {\n        this.message = 'Element name not found';\n        this.parentElement = parentElement.html();\n        this.childElement = childElement.html();\n    }\n\n    function ngModelControllerNotFoundException(parentElement, childElement) {\n        this.message = 'ngModelController not found';\n        this.parentElement = parentElement.html();\n        this.childElement = childElement.html();\n    }\n\n    function gxFormGroupController($timeout, $parse, $element, $scope, gxFormService, $log) {\n\n        var self = this;\n\n        var inputElementName = null;\n        if (!!self.name) {\n            inputElementName = self.name;\n        } else {\n            inputElementName = 'gx-form-group-' + elementIndex++;\n        }\n        self.elementName = inputElementName;\n\n        if (self.stereotype === 'number') {\n            self.isInputNumber = true;\n        } else if (self.stereotype === 'currency') {\n            self.isCurrency = true;\n        } else if (self.stereotype === 'text' ||\n            self.stereotype === 'email' ||\n            self.stereotype === 'password' ||\n            self.stereotype === 'url') {\n            self.isInput = true;\n        } else if (self.stereotype === 'textarea') {\n            self.isTextarea = true;\n        } else if (self.stereotype === 'date-time' ||\n            self.stereotype === 'date' ||\n            self.stereotype === 'date-month' ||\n            self.stereotype === 'date-year') {\n            self.isCalendar = true;\n        } else if (self.stereotype === 'select') {\n            self.isSelect = true;\n        } else if (self.stereotype === 'dropdown') {\n            self.isDropdown = true;\n        } else if (self.stereotype === 'autocomplete') {\n            self.isAutocomplete = true;\n        } else if (self.stereotype === 'switch') {\n            self.isSwitch = true;\n        } else if (self.stereotype === 'equation') {\n            self.isEquation = true;\n        } else if (!self.stereotype) {\n            self.isCustom = true;\n        }\n\n        self.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n\n        self.hasError = function() {\n            return self.feedbackType === gxFormService.ERROR_FEEDBACK_TYPE;\n        };\n\n        self.hasWarning = function() {\n            return self.feedbackType === gxFormService.WARNING_FEEDBACK_TYPE;\n        };\n\n        self.hasSuccess = function() {\n            return self.feedbackType === gxFormService.SUCCESS_FEEDBACK_TYPE;\n        };\n\n        self.feedbackMessages = [];\n\n        self.validatorsDefinitions = {}\n        self.validatorsDefinitions[gxFormService.ERROR_FEEDBACK_TYPE] = {\n            text: { type: \"$error\", key: \"text\", message: \"Texto inválido\" },\n            number: { type: \"$error\", key: \"number\", message: \"Numero inválido\" },\n            url: { type: \"$error\", key: \"url\", message: \"URL Inválida\" },\n            email: { type: \"$error\", key: \"email\", message: \"Email inválido\" },\n            date: { type: \"$error\", key: \"date\", message: \"Data inválida\" },\n            radio: { type: \"$error\", key: \"radio\", message: \"Radio inválido\" },\n            checkbox: { type: \"$error\", key: \"checkbox\", message: \"Checkbox inválido\" },\n            required: { type: \"$error\", key: \"required\", message: \"Campo obrigatório\" },\n            pattern: { type: \"$error\", key: \"pattern\", message: \"O texto não segue o padrão definido\" },\n            minlength: { type: \"$error\", key: \"minlength\", message: \"O texto não possui o tamanho mínimo de caracteres\" },\n            maxlength: { type: \"$error\", key: \"maxlength\", message: \"O texto ultrapassa o tamanho máximo de caracteres\" },\n            min: { type: \"$error\", key: \"min\", message: \"Numero inferior ao valor mínimo requerido\" },\n            max: { type: \"$error\", key: \"max\", message: \"Numero superior ao valor mínimo requerido\" }\n        };\n        self.validatorsDefinitions[gxFormService.WARNING_FEEDBACK_TYPE] = {};\n        self.validatorsDefinitions[gxFormService.SUCCESS_FEEDBACK_TYPE] = {};\n        self.validatorsDefinitions[gxFormService.INFO_FEEDBACK_TYPE] = {};\n\n        self.registerValidator = function(feedbackType, validatorKey, forceValidation, validatorFunction, validatorMessage, validatorTimeout) {\n            var validatorDefinition = {\n                type: feedbackType,\n                key: validatorKey,\n                validatorFunction: validatorFunction,\n                force: forceValidation,\n                message: validatorMessage,\n                timeout: validatorTimeout\n            }\n            self.validatorsDefinitions[feedbackType][validatorKey] = validatorDefinition;\n        };\n\n        self.setModel = function(model, force) {\n            //var modelGetter = $parse($element.attr('model'));\n            //var modelSetter = modelGetter.assign;\n            //modelSetter($scope.$parent, model);\n            self.model = model;\n            if (!!force && force === true) {\n                $scope.$apply();\n            }\n        };\n\n        self.getBadgeValue = function(item) {\n            var badgePathArray = self.modelOptionAttributeBadge.split('.');\n            var result = item;\n            for (var i = 0; i < badgePathArray.length; i++) {\n                result = result[badgePathArray[i]];\n            }\n            return result;\n        };\n\n        function validator(ngModelController, validatorDefinition) {\n            var me = this;\n            me.ngModelController = ngModelController;\n            me.validatorDefinition = validatorDefinition;\n            me.validate = function(modelValue, viewValue) {\n                var func = $parse(me.validatorDefinition.validatorFunction);\n                return func($scope.$parent, { modelValue: modelValue, viewValue: viewValue, ngModelController: me.ngModelController });\n            }\n        }\n\n        $timeout(function() {\n\n            self.formName = $element.closest('form').attr('name');\n            var ngFormController = gxFormService.getNgFormController(self.formName);\n\n            var elements = $element.find('[ng-model]');\n\n            if (elements.length > 0) {\n\n                for (var i = 0; i < elements.length; i++) {\n\n                    var currentElement = $(elements[i]);\n                    var currentElementName = currentElement.attr(\"name\");\n\n                    if (!currentElementName) {\n                        throw new nameNotFoundException($element, currentElement);\n                    }\n\n                    var ngModelController = ngFormController[currentElementName];\n\n                    if (!ngModelController) {\n                        throw new ngModelControllerNotFoundException($element, currentElement);\n                    }\n\n                    var errorValidatorsDefinitions = self.validatorsDefinitions[gxFormService.ERROR_FEEDBACK_TYPE];\n                    for (var errorValidatorKey in errorValidatorsDefinitions) {\n                        var errorValidatorDefinition = errorValidatorsDefinitions[errorValidatorKey];\n                        if (!!errorValidatorDefinition.validatorFunction) {\n                            var val = new validator(ngModelController, errorValidatorDefinition);\n                            ngModelController.$validators[errorValidatorKey] = val.validate;\n                        }\n                    }\n\n                    ngModelController.$validators.gxFormGroup = function(modelValue, viewValue) {\n                        self.feedbackMessages = [];\n                        var result = validate($parse, $scope, gxFormService, gxFormService.ERROR_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.WARNING_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.SUCCESS_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.INFO_FEEDBACK_TYPE, ngModelController, modelValue, viewValue);\n                        return true;\n                    };\n\n                    for (var feedbakType in self.validatorsDefinitions) {\n                        for (var validatorKey in self.validatorsDefinitions[feedbakType]) {\n                            var validatorDefinition = self.validatorsDefinitions[feedbakType][validatorKey];\n                            if (isForce($parse, $scope, validatorDefinition, ngModelController.$modelValue, ngModelController.$viewValue)) {\n                                validate($parse, $scope, gxFormService, gxFormService.WARNING_FEEDBACK_TYPE, ngModelController, ngModelController.$modelValue, ngModelController.$viewValue)\n                            }\n                        }\n                    }\n\n                    currentElement.on('blur', function() {\n                        for (var i = 0; i < self.feedbackMessages.length; i++) {\n                            var feedbackMessage = self.feedbackMessages[i];\n                            if (!!feedbackMessage.timeout) {\n                                $timeout(function() {\n                                    var index = self.feedbackMessages.indexOf(feedbackMessage); // <-- Not supported in <IE9\n                                    if (index !== -1) {\n                                        self.feedbackMessages.splice(index, 1);\n                                    }\n                                    if (self.feedbackMessages.length == 0) {\n                                        self.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n                                    }\n                                }, feedbackMessage.timeout);\n                            }\n                        }\n                    });\n                }\n\n            } else {\n                $log.warn(\"No ng-model found for element: \" + $element.html());\n            }\n        });\n    };\n\n    var gxFormGroupDependencies = [\n        'gux.tooltip',\n        'ui.select',\n        'ui.mask',\n        'gux.formGroupInput',\n        'gux.FormGroupInputNumber',\n        'gux.FormGroupInputCurrency',\n        'gux.formGroupTextarea',\n        'gux.formGroupCalendar',\n        'gux.formGroupSelect',\n        'gux.formGroupDropdown',\n        'gux.formGroupAutocomplete',\n        'gux.formGroupSwitch',\n        'gux.formGroupEquation',\n        'gux.formGroupValidator'\n    ];\n\n    var gxFormGroupComponent = {\n        template:'<div class=\"form-group gx-form-group\" ng-class=\"{\\'has-success\\': $ctrl.hasSuccess(), \\'has-warning\\': $ctrl.hasWarning(), \\'has-error\\': $ctrl.hasError()}\"><div><label ng-if=\"::$ctrl.label\" ng-attr-gx-tooltip=\"{{$ctrl.description}}\" class=\"control-label\">{{::$ctrl.label}} <span ng-if=\"$ctrl.required\" class=\"required\">*</span> <small ng-if=\"$ctrl.description\">&nbsp;<i class=\"fa fa-info-circle\"></i></small></label></div><gx-form-group-input-number ng-if=\"::$ctrl.isInputNumber\"></gx-form-group-input-number><gx-form-group-input-currency ng-if=\"::$ctrl.isCurrency\"></gx-form-group-input-currency><gx-form-group-input ng-if=\"::$ctrl.isInput\"></gx-form-group-input><gx-form-group-textarea ng-if=\"::$ctrl.isTextarea\"></gx-form-group-textarea><gx-form-group-calendar ng-if=\"::$ctrl.isCalendar\"></gx-form-group-calendar><gx-form-group-select ng-if=\"::$ctrl.isSelect\"></gx-form-group-select><gx-form-group-dropdown ng-if=\"::$ctrl.isDropdown\"></gx-form-group-dropdown><gx-form-group-autocomplete ng-if=\"::$ctrl.isAutocomplete\"></gx-form-group-autocomplete><gx-form-group-switch ng-if=\"::$ctrl.isSwitch\"></gx-form-group-switch><gx-form-group-equation ng-if=\"::$ctrl.isEquation\"></gx-form-group-equation><div ng-if=\"::$ctrl.isCustom\"><ng-transclude></ng-transclude></div><span ng-repeat=\"feedbackMessage in $ctrl.feedbackMessages\" class=\"help-block\"><span>{{feedbackMessage.text}}</span></span><ng-transclude ng-transclude-slot=\"gxFormGroupValidator\" class=\"hide\"></ng-transclude></div>',\n        transclude: {\n            'gxFormGroupValidator': '?gxFormGroupValidator'\n        },\n        require: {\n            gxFormController: '^gxForm'\n        },\n        bindings: {\n            name: '@', // change to gxName\n            stereotype: '@', // change to gxStereotype\n            label: '@', // change to gxLabel\n            offLabel: '@', // change to gxFalseLabel\n            onLabel: '@', // change to gxTrueLabel\n            description: '@', // change to gxDescription\n            example: '@', // change to gxExample\n            mask: '@', // change to gxMask\n            model: '=', // change to gxModel\n            gxModelOptions: '=',\n            modelOffValue: '@', // change to gxFalseValue\n            modelOnValue: '@', // change to gxTrueValue\n            modelOptions: '=', // change to gxOptions\n            modelOptionAttributeKey: '@', // change to gxOptionKey\n            modelOptionAttributeValue: '@', // change to gxOptionValue\n            modelOptionAttributeBadge: '@', // change to gxOptionBadge\n            gxRows: '@',\n            gxCols: '@',\n            gxMinlength: '@',\n            gxMaxlength: '@',\n            gxMin: '@',\n            gxMax: '@',\n            gxPattern: '@',\n            gxTabindex: '@',\n            required: '=',\n            readonly: '@',\n            disabled: '=',\n            gxIgnoreTimezone: '@',\n            gxCalPlacement: '@',\n            gxOnSearch: '&',\n            gxOnCreate: '&',\n            gxOnUpdate: '&',\n            gxOnDelete: '&',\n            gxAttributeValueMatch: '@'\n        },\n        controller: [\n            '$timeout',\n            '$parse',\n            '$element',\n            '$scope',\n            'gxFormService',\n            '$log',\n            gxFormGroupController\n        ]\n    };\n\n    function gxFormGroupRun(uiMaskConfig) {\n        uiMaskConfig.clearOnBlur = false;\n    }\n\n    angular\n        .module('gux.formGroup', gxFormGroupDependencies)\n        .component('gxFormGroup', gxFormGroupComponent)\n        .run(['uiMaskConfig', gxFormGroupRun]);\n\n}(window.$, window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    function gxFormGroupValidatorController($element, gxFormService) {\n\n        var self = this;\n\n        self.$onInit = function() {\n\n            var feedbackType = !!self.gxType ? self.gxType : 'error';\n            if (feedbackType.toUpperCase().indexOf('ERROR') > -1) {\n                feedbackType = gxFormService.ERROR_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('WARNING') > -1) {\n                feedbackType = gxFormService.WARNING_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('SUCCESS') > -1) {\n                feedbackType = gxFormService.SUCCESS_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('INFO') > -1) {\n                feedbackType = gxFormService.INFO_FEEDBACK_TYPE;\n            }\n\n            var validatorKey = !!self.gxKey ? self.gxKey : 'default';\n\n            if (feedbackType != gxFormService.ERROR_FEEDBACK_TYPE && !self.gxFunction) {\n                throw new Error('You must define gx-function attribute for element ' + $('<span>').append($element).html());\n            }\n\n            if (!self.gxMessage) {\n                throw new Error('You must define gx-message attribute for element ' + $('<span>').append($element).html());\n            }\n\n            self.gxFormGroupController.registerValidator(feedbackType, validatorKey, self.gxForce, self.gxFunction, self.gxMessage, self.gxTimeout);\n        }\n    }\n\n    var gxFormGroupValidatorDependencies = [];\n\n    var gxFormGroupValidatorComponent = {\n        require: {\n            gxFormGroupController: '^gxFormGroup'\n        },\n        bindings: {\n            gxType: '@',\n            gxKey: '@',\n            gxForce: '@',\n            gxFunction: '@',\n            gxMessage: '@',\n            gxTimeout: '@'\n        },\n        controller: [\n            '$element',\n            'gxFormService',\n            gxFormGroupValidatorController\n        ]\n    };\n    angular\n        .module('gux.formGroupValidator', gxFormGroupValidatorDependencies)\n        .component('gxFormGroupValidator', gxFormGroupValidatorComponent);\n\n}(window.$, window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupTextareaController() {\n\n    }\n\n    var gxFormGroupTextareaDependencies = [];\n\n    var gxFormGroupTextareaComponent = {\n        template:'<textarea name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-rows=\"{{::$ctrl.parent.gxRows}}\" ng-attr-cols=\"{{::$ctrl.parent.gxCols}}\" ng-maxlength=\"::$ctrl.parent.gxMaxlength\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">\\n</textarea>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            gxFormGroupTextareaController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupTextarea', gxFormGroupTextareaDependencies)\n        .component('gxFormGroupTextarea', gxFormGroupTextareaComponent);\n\n}(window.angular));\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupSwitchController() {\n\n\t\tvar self = this;\n\n\t\tself.$onInit = function () {\n\n\t\t\tself.isOn = function () {\n\t\t\t\treturn !!self.parent\n\t\t\t\t\t&& !!self.parent.model\n\t\t\t\t\t&& (self.parent.model === true\n\t\t\t\t\t\t|| (!!self.parent.modelOnValue\n\t\t\t\t\t\t\t&& self.parent.model.toUpperCase() === self.parent.modelOnValue.toUpperCase()));\n\t\t\t}\n\t\t};\n\t}\n\n\tvar gxFormGroupSwitchDependencies = [\n\t];\n\n\tvar gxFormGroupSwitchComponent = {\n\t\ttemplate:'<div class=\"input-group gx-form-group-switch\"><label ng-if=\"!!$ctrl.parent.offLabel\">{{$ctrl.parent.offLabel}}</label> <label><input type=\"checkbox\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-true-value=\"\\'{{::$ctrl.parent.modelOnValue}}\\'\" ng-attr-ng-false-value=\"\\'{{::$ctrl.parent.modelOffValue}}\\'\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" ng-class=\"{\\'gx-form-group-switch-on\\': $ctrl.isOn()}\" autocomplete=\"off\"> <span></span></label> <label ng-if=\"!!$ctrl.parent.onLabel\">{{$ctrl.parent.onLabel}}</label></div>',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupSwitchController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.formGroupSwitch', gxFormGroupSwitchDependencies)\n\t\t.component('gxFormGroupSwitch', gxFormGroupSwitchComponent);\n\n} (window.angular));\n\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupSelectController($scope) {\n\n    }\n\n    var gxFormGroupSelectDependencies = [];\n\n    var gxFormGroupSelectComponent = {\n        template:'<select name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-options=\"modelOption[$ctrl.parent.modelOptionAttributeValue] for modelOption in $ctrl.parent.modelOptions track by modelOption[$ctrl.parent.modelOptionAttributeKey]\" ng-model=\"$ctrl.parent.model\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\"><option value>Selecione...</option></select>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            gxFormGroupSelectController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupSelect', gxFormGroupSelectDependencies)\n        .component('gxFormGroupSelect', gxFormGroupSelectComponent);\n\n}(window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupInputController() {\n\n    }\n\n    var gxFormGroupInputDependencies = [];\n\n    var gxFormGroupInputComponent = {\n        template:'<input type=\"{{::$ctrl.parent.stereotype}}\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-minlength=\"::$ctrl.parent.gxMinlength\" ng-maxlength=\"::$ctrl.parent.gxMaxlength\" ng-pattern=\"::$ctrl.parent.gxPattern\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            gxFormGroupInputController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupInput', gxFormGroupInputDependencies)\n        .component('gxFormGroupInput', gxFormGroupInputComponent);\n\n}(window.angular));\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupInputNumberController() {\n\n\t}\n\n\tvar gxFormGroupInputNumberDependencies = [\n\t];\n\n\tvar gxFormGroupInputNumberComponent = {\n\t\ttemplate:'<input type=\"{{::$ctrl.parent.stereotype}}\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupInputNumberController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.FormGroupInputNumber', gxFormGroupInputNumberDependencies)\n\t\t.component('gxFormGroupInputNumber', gxFormGroupInputNumberComponent);\n\n} (window.angular));\n\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupInputCurrencyController(parent, ngModelController) {\n\t\tconsole.log(ngModelController);\n\t}\n\n\tvar gxFormGroupInputCurrencyDependencies = [\n\t];\n\n\tvar gxFormGroupInputCurrencyComponent = {\n\t\ttemplate:'<input type=\"number\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup',\n\t\t\tngModelController: '?ngModel'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupInputCurrencyController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.FormGroupInputCurrency', gxFormGroupInputCurrencyDependencies)\n\t\t.component('gxFormGroupInputCurrency', gxFormGroupInputCurrencyComponent);\n\n} (window.angular));\n\n(function (MathQuill, angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupEquationController($element, $attrs, $parse, $scope) {\n\t\t\n\t\tvar self = this;\n\n\t\tself.$onInit = function() {\n\t\t\tvar mathFieldElement = $($element).find('.form-control')[0];\n\t\t\tvar MQ = MathQuill.getInterface(2);\n\t\t\tvar mathField = MQ.MathField(mathFieldElement, {\n\t\t\t\tspaceBehavesLikeTab: true,\n\t\t\t\thandlers: {\n\t\t\t\t\tedit: function () {\n\t\t\t\t\t\tself.parent.setModel(mathField.latex());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!!self.parent.model) {\n\t\t\t\tmathField.latex(self.parent.model);\n\t\t\t}\n\t\t};\n\t}\n\n\tvar gxFormGroupEquationDependencies = [];\n\n\tvar gxFormGroupEquationComponent = {\n\t\ttemplate:'<div><input type=\"hidden\" name=\"{{::$ctrl.parent.elementName}}\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-required=\"$ctrl.parent.required\"><div class=\"form-control\"></div></div>',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\t'$element',\n\t\t\t'$attrs',\n\t\t\t'$parse',\n\t\t\t'$scope',\n\t\t\tgxFormGroupEquationController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.formGroupEquation', gxFormGroupEquationDependencies)\n\t\t.component('gxFormGroupEquation', gxFormGroupEquationComponent);\n\n} (window.MathQuill, window.angular));\n\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupDropdownController($scope, $element) {\n\n        var self = this;\n\n        self.showBadge = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge;\n        };\n    }\n\n    var gxFormGroupDropdownDependencies = [];\n\n    var gxFormGroupDropdownComponent = {\n        template:'<div class=\"dropdown gx-form-group-dropdown\"><input type=\"hidden\" name=\"{{::$ctrl.parent.elementName}}\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-required=\"$ctrl.parent.required\"> <button type=\"button\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" data-toggle=\"dropdown\" class=\"btn btn-default dropdown-toggle form-control\" ng-class=\"{\\'disabled\\': $ctrl.parent.disabled}\">{{$ctrl.parent.model[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"$ctrl.showBadge()\" class=\"badge input-badge\">{{$ctrl.parent.getBadgeValue($ctrl.parent.model)}}</span></button> <span class=\"form-control-feedback\"><i class=\"fa fa-caret-down fa-lg\"></i></span><ul ng-if=\"::!$ctrl.parent.readonly\" class=\"form-control dropdown-menu\"><li ng-repeat=\"modelOption in $ctrl.parent.modelOptions track by $index\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.parent.setModel(modelOption)\">{{modelOption[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"::!!$ctrl.parent.modelOptionAttributeBadge\" class=\"badge pull-right m-r-xs\" style=\"margin-top: 1px\">{{$ctrl.parent.getBadgeValue(modelOption)}}</span></a></li></ul></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            gxFormGroupDropdownController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupDropdown', gxFormGroupDropdownDependencies)\n        .component('gxFormGroupDropdown', gxFormGroupDropdownComponent);\n\n}(window.angular));\n(function(moment, jstz, angular) {\n\n    'use strict';\n\n    function gxFormGroupCalendarController($element, $scope, GX_FORM_GROUP_CONFIG) {\n\n        var self = this;\n\n        var ignoreTimezone = !!GX_FORM_GROUP_CONFIG.date.ignoreTimezone;\n\n        self.$onInit = function() {\n\n            var datepickerElement = $element.find('.input-group.date');\n            var viewMode = null;\n            var format = null;\n            var language = navigator.language || navigator.userLanguage;\n\n            if (self.parent.stereotype === 'date-time') {\n                viewMode = 'days';\n                self.parent.mask = '?99/99/9999 99:99';\n                format = 'DD/MM/YYYY HH:mm';\n            } else if (self.parent.stereotype === 'date') {\n                viewMode = 'days';\n                self.parent.mask = '?99/99/9999';\n                format = 'DD/MM/YYYY';\n            } else if (self.parent.stereotype === 'date-month') {\n                viewMode = 'months';\n                self.parent.mask = '?99/9999';\n                format = 'MM/YYYY';\n            } else if (self.parent.stereotype === 'date-year') {\n                viewMode = 'years';\n                self.parent.mask = '?9999';\n                format = 'YYYY';\n            }\n\n            self.formattedDate = null;\n\n            $scope.$watch('$ctrl.parent.model', function(value) {\n                if (!!value) {\n                    var modelValue = null;\n                    var viewValue = null;\n                    if (ignoreTimezone) {\n                        modelValue = moment.utc(value);\n                        viewValue = moment.utc(self.formattedDate, format);\n                    } else {\n                        modelValue = moment(value);\n                        viewValue = moment(self.formattedDate, format);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        self.formattedDate = modelValue.format(format);\n                    }\n                } else {\n                    self.formattedDate = null;\n                }\n            });\n\n            $scope.$watch('$ctrl.formattedDate', function(value) {\n                if (!!value) {\n                    var viewValue = null;\n                    var modelValue = null;\n                    if (ignoreTimezone) {\n                        viewValue = moment.utc(value, format);\n                        modelValue = moment.utc(self.parent.model);\n                    } else {\n                        viewValue = moment(value, format);\n                        modelValue = moment(self.parent.model);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        if (ignoreTimezone) {\n                            self.parent.model = viewValue.format('YYYY-MM-DDTHH:mm:ss');\n                        } else {\n                            self.parent.model = viewValue.toISOString();\n                        }\n                    }\n                } else {\n                    self.parent.model = null;\n                }\n            });\n\n            var datepicker = datepickerElement\n                .datetimepicker({\n                    locale: language,\n                    viewMode: viewMode,\n                    format: format,\n                    useStrict: true,\n                    useCurrent: false,\n                    allowInputToggle: true,\n                    showTodayButton: true,\n                    showClear: true,\n                    icons: {\n                        \"clear\": \"glyphicon glyphicon-trash\",\n                        \"close\": \"glyphicon glyphicon-remove\",\n                        \"date\": \"fa fa-calendar\",\n                        \"down\": \"glyphicon glyphicon-chevron-down\",\n                        \"next\": \"glyphicon glyphicon-chevron-right\",\n                        \"previous\": \"glyphicon glyphicon-chevron-left\",\n                        \"time\": \"glyphicon glyphicon-time\",\n                        \"today\": \"glyphicon glyphicon-screenshot\",\n                        \"up\": \"glyphicon glyphicon-chevron-up\",\n                    },\n                    tooltips: {\n                        today: 'Hoje',\n                        clear: 'Limpar',\n                        close: 'Fechar',\n                        selectMonth: 'Mês',\n                        prevMonth: 'Mês anterior',\n                        nextMonth: 'Próximo mês',\n                        selectYear: 'Ano',\n                        prevYear: 'Ano anterior',\n                        nextYear: 'Próximo ano',\n                        selectDecade: 'Década',\n                        prevDecade: 'Década anterior',\n                        nextDecade: 'Próxima década',\n                        prevCentury: 'Século anterior',\n                        nextCentury: 'Próximo século'\n                    }\n                })\n                .data('DateTimePicker');\n\n            datepicker.parseInputDate(function(value) {\n                var result = undefined;\n                if (!!value) {\n                    result = moment.utc(value, format);\n                }\n                return result;\n            });\n\n            datepickerElement.on('dp.change', function(event) {\n                if (!!event.date) {\n                    var viewValue = event.date;\n                    var modelValue = null;\n                    if (ignoreTimezone) {\n                        modelValue = moment.utc(self.parent.model);\n                    } else {\n                        modelValue = moment(self.parent.model);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        if (ignoreTimezone) {\n                            self.parent.model = viewValue.format('YYYY-MM-DDTHH:mm:ss');\n                        } else {\n                            self.parent.model = viewValue.toISOString();\n                        }\n                        self.formattedDate = viewValue.format(format);\n                    }\n                } else {\n                    self.parent.model = null;\n                }\n            });\n        }\n    }\n\n    var gxFormGroupCalendarDependencies = [];\n\n    var gxFormGroupCalendarComponent = {\n        template:'<div class=\"input-group date\"><input type=\"text\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ui-mask=\"{{::$ctrl.parent.mask}}\" ui-mask-placeholder ng-model=\"$ctrl.formattedDate\" ng-model-options=\"{ updateOn: \\'blur\\' }\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\"> <span class=\"input-group-addon\"><span class=\"fa fa-calendar\"></span></span></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$element',\n            '$scope',\n            'GX_FORM_GROUP_CONFIG',\n            gxFormGroupCalendarController\n        ]\n    };\n\n    function gxFormGroupCalendarModelDirective() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: ['^gxFormGroup', 'ngModel'],\n            link: gxFormGroupCalendarModelDirectiveLink\n        }\n    }\n\n    angular\n        .module('gux.formGroupCalendar', gxFormGroupCalendarDependencies)\n        .component('gxFormGroupCalendar', gxFormGroupCalendarComponent);\n\n}(window.moment, window.jstz, window.angular));\n(function($, _, angular) {\n\n    'use strict';\n\n    function hideDropdownMenu($element) {\n        // $element.find('.dropdown-menu').dropdown('toggle');\n        $element.find('.dropdown-menu');\n        //$element.find('.dropdown-menu').css('display', 'none');\n    };\n\n    function setViewMode(self) {\n        self.viewMode = true;\n        self.editMode = false;\n    }\n\n    function setEditMode(self) {\n        self.viewMode = false;\n        self.editMode = true;\n    }\n\n    function refresh(self, newValue) {\n\n        if (newValue) {\n\n            if (self.isSearchable) {\n                self.modelFilteredOptions = self.parent.modelOptions.slice();\n            } else {\n                var fullMatch = [];\n                var initialMatch = [];\n                var parcialMatch = [];\n                for (var i = 0; i < self.parent.modelOptions.length; i++) {\n                    var modelOption = self.parent.modelOptions[i];\n                    var modelOptionString = String(modelOption[self.parent.modelOptionAttributeValue]).toUpperCase();\n                    var modelAutocompleteString = !!self.modelAutocomplete ? self.modelAutocomplete.toUpperCase() : null;\n                    if (modelOptionString === modelAutocompleteString) {\n                        fullMatch.push(modelOption);\n                    } else if (modelOptionString.indexOf(modelAutocompleteString) == 0) {\n                        initialMatch.push(modelOption);\n                    } else if (modelOptionString.indexOf(modelAutocompleteString) > -1) {\n                        parcialMatch.push(modelOption);\n                    }\n                }\n                self.modelFilteredOptions = fullMatch.concat(initialMatch).concat(parcialMatch);\n            }\n            // Performance problem in very large arrays\n            if (self.modelFilteredOptions.length > 50) {\n                self.modelFilteredOptions = self.modelFilteredOptions.slice(0, 50);\n            }\n        } else if (self.parent.modelOptions && self.parent.modelOptions.length > 0) {\n            // Performance problem in very large arrays\n            // self.modelFilteredOptions = angular.copy(self.parent.modelOptions);\n            self.modelFilteredOptions = self.parent.modelOptions.slice(0, 50);\n        } else {\n            self.modelFilteredOptions = [];\n        }\n\n        if (self.modelFilteredOptions.length === 0) {\n            self.noDataFound = true;\n            self.itemFound = false;\n        } else if (self.modelFilteredOptions.length === 1 &&\n            !!newValue &&\n            self.modelFilteredOptions[0][self.parent.modelOptionAttributeValue].toUpperCase() === self.modelAutocomplete.toUpperCase()) {\n            self.noDataFound = false;\n            self.itemFound = true;\n        } else {\n            self.noDataFound = false;\n            var itemFoundArray = [];\n            if (newValue) {\n                itemFoundArray = _.filter(self.modelFilteredOptions, function(modelOption) {\n                    return String(modelOption[self.parent.modelOptionAttributeValue]).toUpperCase() === newValue.toUpperCase();\n                });\n            }\n            if (itemFoundArray.length === 1) {\n                self.itemFound = true;\n            } else {\n                self.itemFound = false;\n            }\n        }\n    }\n\n    function syncModelAutocomplete(self) {\n        if (self.parent.model) {\n            self.modelAutocomplete = self.parent.model[self.parent.modelOptionAttributeValue];\n        } else {\n            self.modelAutocomplete = null;\n        }\n    }\n\n    function handleCreateSuccess(self, createdObject) {\n        self.parent.setModel(createdObject);\n        self.parent.modelOptions.push(createdObject);\n        refresh(self, createdObject[self.parent.modelOptionAttributeValue]);\n        hideDropdownMenu(self.$element)\n        setViewMode(self);\n        self.feedbackMessage = \"item criado\";\n        //self.addSuccess('create', 'Novo item criado com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleCreateError(self) {\n        syncModelAutocomplete(self);\n        //controller.addError('update', 'Erro ao criar novo item.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleUpdateSucess(self, updatedObject) {\n        self.parent.setModel(updatedObject);\n        refresh(self, updatedObject[self.parent.modelOptionAttributeValue]);\n        setViewMode(self);\n        //self.addSuccess('update', 'Item atualizado com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleUpdateError(self, oldValue) {\n        self.parent.model[self.parent.modelOptionAttributeValue] = oldValue;\n        syncModelAutocomplete(self);\n        //self.parent.addError('update', 'Erro ao atualizar item selecionado.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleDeleteSuccess(self, deletedObject) {\n        var index = self.parent.modelOptions.indexOf(deletedObject);\n        if (index > -1) {\n            self.parent.modelOptions.splice(index, 1);\n        }\n        if (!self.parent.model) {\n            syncModelAutocomplete(self);\n            refresh(self, null);\n        } else if (self.parent.model == deletedObject) {\n            self.parent.setModel(null);\n            syncModelAutocomplete(self);\n            refresh(self, null);\n        } else {\n            refresh(self, self.parent.model[self.parent.modelOptionAttributeValue]);\n        }\n        setViewMode(self);\n        //self.addSuccess('update', 'Item removido com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleDeleteError(self) {\n        //syncModelAutocomplete(self);\n        //controller.addError('update', 'Erro ao remover item.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function gxFormGroupAutocompleteController($scope, $element, gxFormService) {\n\n        var defaultGxModelOptions = {\n            updateOn: 'default blur',\n            debounce: {\n                'default': 0,\n                'blur': 0\n            }\n        }\n\n        var searchableGxModelOptions = {\n            updateOn: 'default blur',\n            debounce: {\n                'default': 500,\n                'blur': 0\n            }\n        };\n\n        var self = this;\n        self.$element = $element;\n        self.inputElement = self.$element.find('input');\n        self.viewMode = true;\n        self.editMode = false;\n        self.isSearchable = false;\n        self.isCreatable = false;\n        self.isUpdateable = false;\n        self.isDeletable = false;\n        self.gxModelOptions = defaultGxModelOptions;\n        self.modelAutocomplete = null;\n        self.modelFilteredOptions = null;\n        self.isLoading = false;\n        self.noDataFound = false;\n        self.itemFound = false;\n        self.feedbackMessage = undefined;\n\n        self.showBadge = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge &&\n                !!self.modelAutocomplete &&\n                self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];\n        };\n\n        self.selectOption = function(modelOption) {\n            self.parent.setModel(modelOption);\n            hideDropdownMenu($element);\n        };\n\n        self.inputElement.on('focus', function(event) {\n            $element.find('.dropdown-menu').dropdown('toggle');\n        });\n\n        self.inputElement.on('keydown', function(event) {\n            if (event.keyCode === 40) { // down arrow\n                event.preventDefault();\n                $element.find('li:first a:first').focus();\n            }\n        });\n\n        self.inputElement.on('blur', function(event) {\n            if (!$.contains($element[0], event.relatedTarget)) {\n                syncModelAutocomplete(self);\n                hideDropdownMenu($element);\n            }\n        });\n\n        self.create = function(event) {\n            var result = self.parent.gxOnCreate()(self.modelAutocomplete)\n            if (!!result) {\n                if (!!result.then) {\n                    result\n                        .then(function(result) {\n                            handleCreateSuccess(self, result);\n                        }).catch(function(error) {\n                            handleCreateError(self);\n                        });\n                } else {\n                    handleCreateSuccess(self, result);\n                }\n            } else {\n                handleCreateError(self);\n            }\n        };\n\n        self.isEditDisabled = function() {\n            return self.parent.disabled ||\n                !(!!self.parent &&\n                    !!self.parent.model);\n            /*&& !!self.parent.modelOptionAttributeBadge\n            && !! self.modelAutocomplete\n            && self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];*/\n        };\n\n        self.edit = function() {\n            setEditMode(self);\n            //controller.removeSuccess('create');\n            //controller.removeSuccess('update');\n            //controller.removeWarning('edit');\n            //controller.removeError('error');\n            //controller.addInfo('edit', 'Após a edição, cancele ou confirme a operação');\n            self.inputElement.focus();\n        };\n\n        self.isUpdateDisabled = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge &&\n                !!self.modelAutocomplete &&\n                self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];\n        };\n\n        self.update = function(event) {\n            //controller.removeInfo('edit');\n            //controller.removeWarning('edit');\n            var oldValue = self.parent.model[self.parent.modelOptionAttributeValue];\n            self.parent.model[self.parent.modelOptionAttributeValue] = self.modelAutocomplete;\n            var result = self.parent.gxOnUpdate()(self.parent.model)\n            if (result) {\n                if (!!result.then) {\n                    result\n                        .then(function(result) {\n                            handleUpdateSucess(self, result);\n                        })\n                        .catch(function(error) {\n                            handleUpdateError(self, oldValue);\n                        });\n                } else {\n                    handleUpdateSucess(self, result);\n                }\n            } else {\n                handleUpdateError(self, oldValue);\n            }\n        };\n\n        self.cancel = function() {\n            //controller.removeInfo('edit');\n            syncModelAutocomplete(self);\n            setViewMode(self);\n        };\n\n        self.delete = function(selectedOption, event) {\n            //controller.removeInfo('edit');\n            //controller.removeWarning('edit');\n            try {\n                var result = self.parent.gxOnDelete()(selectedOption)\n                if (!!result && !!result.then) {\n                    result\n                        .then(function(result) {\n                            handleDeleteSuccess(self, selectedOption);\n                        })\n                        .catch(function(error) {\n                            handleDeleteError(self);\n                        });\n                } else {\n                    handleDeleteSuccess(self, selectedOption);\n                }\n            } catch (error) {\n                handleDeleteError(self);\n            }\n        };\n\n        self.showBeginSerach = function() {\n            var result = self.isSearchable && !self.modelAutocomplete;\n            if (result) {\n                self.noDataFound = false;\n            }\n            return result;\n        };\n\n        self.showNoDataFound = function() {\n            return !self.isCreatable && self.noDataFound;\n        };\n\n        self.$onInit = function() {\n\n            self.isSearchable = !self.parent.modelOptions && !!self.parent.gxOnSearch();\n            self.isCreatable = !!self.parent.gxOnCreate();\n            self.isUpdateable = !!self.parent.gxOnUpdate();\n            self.isDeletable = !!self.parent.gxOnDelete();\n\n            if (self.isSearchable) {\n                self.gxModelOptions = searchableGxModelOptions;\n                self.parent.modelOptions = [];\n                //self.parent.registerValidator(gxFormService.INFO_FEEDBACK_TYPE);\n            } else {\n                $scope.$watch('$ctrl.parent.modelOptions', function(newValue, oldValue) {\n                    if (self.parent.model) {\n                        refresh(self, self.parent.model[self.parent.modelOptionAttributeValue]);\n                    } else {\n                        refresh(self, null);\n                    }\n                });\n            }\n\n            /*self.registerValidator = function (feedbackType, validatorKey, forceValidation, validatorFunction, validatorMessage, validatorTimeout) {\n\t\t\tvar validatorDefinition = {\n\t\t\t\ttype: feedbackType,\n\t\t\t\tkey: validatorKey,\n\t\t\t\tvalidatorFunction: validatorFunction,\n\t\t\t\tforce: forceValidation,\n\t\t\t\tmessage: validatorMessage,\n\t\t\t\ttimeout: validatorTimeout\n\t\t\t}\n\t\t\tself.validatorsDefinitions[feedbackType][validatorKey] = validatorDefinition;\n\t\t};*/\n            function isMessage() {\n                return !!self.feedbackMessage;\n            }\n\n            self.parent.registerValidator(gxFormService.WARNING_FEEDBACK_TYPE, 'autocomplete', isMessage, false, self.feedbackMessage);\n\n            $scope.$watch('$ctrl.parent.model.' + self.parent.modelOptionAttributeValue, function(newValue, oldValue) {\n                syncModelAutocomplete(self);\n            });\n\n            $scope.$watch('$ctrl.modelAutocomplete', function(newValue, oldValue) {\n                if (self.viewMode) {\n                    if (newValue) {\n                        if (self.isSearchable) {\n                            self.isLoading = true;\n                            self.parent.gxOnSearch()(newValue)\n                                .then(function(modelOptions) {\n                                    self.parent.modelOptions = modelOptions;\n                                    refresh(self, newValue);\n                                    self.isLoading = false;\n                                });\n                        } else {\n                            self.isLoading = true;\n                            refresh(self, newValue);\n                            self.isLoading = false;\n                        }\n                    } else {\n                        self.parent.setModel(null);\n                        if (self.isSearchable) {\n                            self.modelFilteredOptions = [];\n                        } else {\n                            refresh(self, newValue);\n                        }\n                    }\n                }\n            });\n        };\n    }\n\n    var gxFormGroupAutocompleteDependencies = [];\n\n    var gxFormGroupAutocompleteComponent = {\n        template:'<div class=\"dropdown gx-form-group-autocomplete\"><div ng-class=\"{\\'input-group\\': $ctrl.isUpdateable}\"><div style=\"position: relative\"><span ng-if=\"$ctrl.isSearchable && $ctrl.isLoading\" class=\"form-control-feedback\"><i class=\"fa fa-spinner fa-pulse\"></i></span> <span ng-if=\"!$ctrl.isLoading && $ctrl.showBadge()\" class=\"badge input-badge\">{{$ctrl.parent.getBadgeValue($ctrl.parent.model)}}</span> <input type=\"text\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.modelAutocomplete\" ng-model-options=\"$ctrl.gxModelOptions\" ng-attr-minlength=\"{{::$ctrl.parent.gxMinlength}}\" ng-attr-maxlength=\"{{::$ctrl.parent.gxMaxlength}}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\"></div><div class=\"input-group-btn\" ng-if=\"$ctrl.isUpdateable\"><button type=\"button\" ng-if=\"$ctrl.viewMode\" ng-click=\"$ctrl.edit($event)\" ng-disabled=\"$ctrl.isEditDisabled()\" gx-tooltip=\"Editar item selecionado\" class=\"btn btn-default\"><i class=\"fa fa-pencil\"></i></button> <button type=\"button\" ng-if=\"$ctrl.editMode\" ng-click=\"$ctrl.cancel($event)\" gx-tooltip=\"Cancelar edição\" class=\"btn btn-default\"><i class=\"fa fa-ban\"></i></button> <button type=\"button\" ng-if=\"$ctrl.editMode\" ng-click=\"$ctrl.update($event)\" ng-disabled=\"$ctrl.isUpdateDisabled()\" gx-tooltip=\"{{$ctrl.isUpdateDisabled() ? \\'Altere o valor para habilitar a gravação\\' : \\'Gravar item editado\\'}}\" class=\"btn btn-default\"><i class=\"fa fa-save\"></i></button></div></div><ul ng-if=\"$ctrl.viewMode\" class=\"form-control dropdown-menu\" role=\"menu\" data-toggle=\"dropdown\"><li ng-repeat=\"modelOption in $ctrl.modelFilteredOptions\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.selectOption(modelOption)\">{{modelOption[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"$ctrl.isDeletable\" ng-click=\"$ctrl.delete(modelOption, $event); $event.stopPropagation();\" class=\"pull-right\"><i class=\"fa fa-remove\"></i></span> <span ng-if=\"!!$ctrl.parent.modelOptionAttributeBadge\" class=\"badge pull-right m-r-xs\" style=\"margin-top: 1px\">{{$ctrl.parent.getBadgeValue(modelOption)}}</span></a></li><li ng-if=\"$ctrl.showBeginSerach()\"><a>Digite para pesquisar.</a></li><li ng-if=\"$ctrl.showNoDataFound()\"><a>Nenhum item encontrado.</a></li><li ng-if=\"$ctrl.isCreatable && !$ctrl.itemFound && !!$ctrl.modelAutocomplete\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.create($event)\" gx-tooltip=\"Criar novo item\"><i class=\"fa fa-plus\"></i>&nbsp;&nbsp; <strong>{{$ctrl.modelAutocomplete}}</strong>&nbsp;&nbsp; <span class=\"text-muted\">(Novo)</span></a></li></ul></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            'gxFormService',\n            gxFormGroupAutocompleteController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupAutocomplete', gxFormGroupAutocompleteDependencies)\n        .component('gxFormGroupAutocomplete', gxFormGroupAutocompleteComponent);\n\n}(window.$, window._, window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormButtonController($parse, $state, $element, $scope, gxAppService, gxFormService) {\n\n        var self = this;\n        self.type = undefined;\n        self.buttonClass = undefined;\n        self.iconClass = undefined;\n        self.label = undefined;\n\n        if (self.stereotype === 'post') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-success\";\n            self.iconClass = \"fa-save\";\n            self.label = \"Gravar\";\n        } else if (self.stereotype === 'put') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-success\";\n            self.iconClass = \"fa-save\";\n            self.label = \"Atualizar\";\n        } else if (self.stereotype === 'get') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-primary\";\n            self.iconClass = \"fa-search\";\n            self.label = \"Pesquisar\";\n        } else if (self.stereotype === 'clean') {\n            self.type = \"reset\";\n            self.buttonClass = \"btn-default\";\n            self.iconClass = \"fa-eraser\";\n            self.label = \"Limpar\";\n        } else if (self.stereotype === 'cancel') {\n            self.type = \"button\";\n            self.buttonClass = \"\";\n            self.iconClass = \"fa-ban\";\n            self.label = \"Cancelar\";\n        } else if (self.stereotype === 'back') {\n            self.type = \"button\";\n            self.buttonClass = \"btn-default\";\n            self.iconClass = \"fa-long-arrow-left\";\n            self.label = \"Voltar\";\n        }\n\n        self.show = function() {\n\n            var result = true;\n\n            var formName = $element.closest('form').attr('name');\n            if (formName == '{{$ctrl.gxName}}') {\n                return result;\n            }\n\n            try {\n                if (self.stereotype === 'cancel' && gxFormService.isPristine(formName)) {\n                    result = false;\n                } else if (self.stereotype === 'back' && !gxFormService.isPristine(formName)) {\n                    result = false;\n                }\n            } catch (exception) {\n                if (exception.constructor.name != 'ngFormControllerNotLoaded') {\n                    throw exception;\n                }\n            }\n\n            return result;\n        }\n\n        self.disabled = function() {\n\n            var result = false;\n\n            var lastState = gxAppService.getLastState();\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!lastState || !lastState.name) {\n                    result = true;\n                }\n            }\n\n            return result;\n        }\n\n        self.click = function() {\n\n            var result = undefined;\n\n            var lastState = gxAppService.getLastState();\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!self.go && !!lastState && !!lastState.name) {\n                    self.go = lastState.name;\n                }\n            }\n\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!!self.go) {\n                    if (!result) {\n                        return $state.go(self.go);\n                    } else {\n                        return $state.go(self.go);\n                    }\n                }\n            }\n\n            var formName = $element.closest('form').attr('name');\n            if (formName == '{{$ctrl.gxName}}') {\n                return result;\n            }\n\n            if (!gxFormService.isForce(formName) && !gxFormService.isValid(formName)) {\n                return result;\n            }\n\n            if (!!self.onClick) {\n                result = $parse(self.onClick)($scope.$parent);\n            }\n\n            if (!!self.go) {\n                if (!result) {\n                    result = $state.go(self.go);\n                } else {\n                    $state.go(self.go);\n                }\n            }\n\n            if (self.stereotype === 'clean') {\n                gxFormService.setPristine(formName);\n            }\n\n            return result;\n        };\n    };\n\n    var gxFormButtonDependencies = [\n        'ui.router'\n    ];\n\n    var gxFormButtonComponent = {\n        template: '<div><button ng-attr-type=\"{{::$ctrl.type}}\" ng-if=\"$ctrl.show()\" ng-disabled=\"$ctrl.disabled()\" ng-click=\"$ctrl.click($event)\" class=\"btn btn-addon {{::$ctrl.buttonClass}}\"><i class=\"fa {{::$ctrl.iconClass}}\"></i>{{::$ctrl.label}}</button></div>',\n        bindings: {\n            stereotype: '@',\n            go: '@',\n            onClick: '='\n        },\n        controller: [\n            '$parse',\n            '$state',\n            '$element',\n            '$scope',\n            'gxAppService',\n            'gxFormService',\n            gxFormButtonController\n        ]\n    };\n\n    angular\n        .module('gux.formButton', gxFormButtonDependencies)\n        .component('gxFormButton', gxFormButtonComponent);\n\n}(window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    function showMessage(scope, message) {\n        scope.$broadcast(\"gxApp.feedback\", message);\n    }\n\n    function showInfo(scope, message, title) {\n        showMessage(scope, {\n            type: 'info',\n            title: !title ? 'Informação' : title,\n            body: message\n        });\n    }\n\n    function showSuccess(scope, message, title) {\n        showMessage(scope, {\n            type: 'success',\n            title: !title ? 'Sucesso' : title,\n            body: message\n        });\n    }\n\n    function showWarning(scope, message, title) {\n        showMessage(scope, {\n            type: 'warning',\n            title: !title ? 'Atenção' : title,\n            body: message\n        });\n    }\n\n    function showError(scope, message, title) {\n        showMessage(scope, {\n            type: 'error',\n            title: !title ? 'Erro' : title,\n            body: message\n        });\n    };\n\n    function gxAppConfig($provide, cfpLoadingBarProvider, locationProvider, GX_STATE_CONFIG, stateHelperProvider, $mdThemingProvider) {\n\n        var isIE = !!navigator.userAgent.match(/MSIE/i);\n        locationProvider.html5Mode(!isIE);\n        stateHelperProvider.state(GX_STATE_CONFIG);\n        cfpLoadingBarProvider.includeSpinner = true;\n        cfpLoadingBarProvider.spinnerTemplate = '<div class=\"loading\"><img class=\"loading-image\" src=\"images/gx-app-loading.gif\" alt=\"Carrengando...\" /></div>';\n\n        $provide.decorator(\"$exceptionHandler\", ['$injector', '$log', '$delegate', function($injector, $log, $delegate) {\n            return function(exception, cause) {\n                var $rootScope = $injector.get(\"$rootScope\");\n                if (exception.type === 'error') {\n                    showError($rootScope, exception.message, exception.title);\n                } else if (exception.type === 'warning') {\n                    showWarning($rootScope, exception.message, exception.title);\n                } else {\n                    $delegate(exception, cause);\n                }\n            };\n        }]);\n\n        $mdThemingProvider.theme('default')\n            .primaryPalette('blue', {\n                'default': '400', // by default use shade 400 from the pink palette for primary intentions\n                'hue-1': '100', // use shade 100 for the <code>md-hue-1</code> class\n                'hue-2': '600', // use shade 600 for the <code>md-hue-2</code> class\n                'hue-3': 'A100' // use shade A100 for the <code>md-hue-3</code> class\n            })\n            // If you specify less than all of the keys, it will inherit from the\n            // default shades\n            .accentPalette('blue-grey', {\n                'default': '200' // use shade 200 for default, and keep all other shades the same\n            });\n\n    }\n\n    function initState($state, state) {\n        if (state.abstract === true) {\n            if (!state.data) {\n                state.data = {}\n            }\n            if (!state.data.expanded) {\n                state.data.expanded = $state.includes(state.name);\n            }\n        }\n    }\n\n    function getLink(state) {\n        var link = undefined;\n        if (!!state.data && !!state.data.tab) {\n            link = state.name;\n        } else if (!!state.data && !!state.data.menu && !!state.data.menu.link) {\n            link = state.data.menu.link;\n        } else if (!(state.abstract === true)) {\n            link = state.name;\n        }\n        return link;\n    }\n\n    function isToDisplayMenu(state) {\n        return !state.data || !state.data.menu || state.data.menu.display == undefined || state.data.menu.display === true;\n    }\n\n    function getMenuIconClass(state) {\n        var iconClass = undefined;\n        if (!!state.data && !!state.data.menu && !!state.data.menu.iconClass) {\n            iconClass = state.data.menu.iconClass;\n        }\n        return iconClass;\n    }\n\n    function getMenuTitle(state) {\n        var title = 'unknown';\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.title) {\n                title = state.data.tab.title;\n            } else if (!!state.data.menu && !!state.data.menu.title) {\n                title = state.data.menu.title;\n            } else if (!!state.data.masthead && !!state.data.masthead.title) {\n                title = state.data.masthead.title;\n            }\n        }\n        return title;\n    }\n\n    function getMenuDescription(state) {\n        var description = undefined;\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.description) {\n                description = state.data.tab.description;\n            } else if (!!state.data.menu && !!state.data.menu.description) {\n                description = state.data.menu.description;\n            } else if (!!state.data.masthead && !!state.data.masthead.description) {\n                description = state.data.masthead.description;\n            }\n        }\n        return description;\n    }\n\n    /*function isStateActive($state, state) {\n    \treturn $state.includes(state.name);\n    }*/\n\n    function onMenuClick(state) {\n        if (state.abstract === true) {\n            state.data.expanded = !state.data.expanded;\n        }\n    }\n\n    function isToDisplayMasthead($state) {\n        return !!$state.current.data && !!$state.current.data.masthead;\n    }\n\n    function setStateRoute(stateRoute, state) {\n        stateRoute.push(state);\n        if (!!state.parent) {\n            setStateRoute(stateRoute, state.parent);\n        }\n    }\n\n    function getBreadcrumbItems(state) {\n        var breadcrumbItems = []\n        var states = [];\n        setStateRoute(states, state);\n        states = states.reverse();\n        for (var i = 0; i < states.length; i++) {\n            if (i == states.length - 1 &&\n                !!states[i].data &&\n                !!states[i].data.masthead &&\n                !!states[i].data.masthead.actions &&\n                states[i].data.masthead.actions.length > 0) {\n                continue;\n            }\n            breadcrumbItems.push({\n                link: getLink(states[i]),\n                title: getMenuTitle(states[i])\n            });\n        }\n        return breadcrumbItems;\n    }\n\n    function getMastheadTitle(state) {\n        var title = 'unknown';\n        if (!!state.data) {\n            if (!!state.data.masthead && !!state.data.masthead.title) {\n                title = state.data.masthead.title;\n            } else if (!!state.data.menu && !!state.data.menu.title) {\n                title = state.data.menu.title;\n            } else if (!!state.data.tab && !!state.data.tab.title) {\n                title = state.data.tab.title;\n            }\n        }\n        return title;\n    }\n\n    function getMastheadDescription(state) {\n        var description = undefined;\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.description) {\n                description = state.data.tab.description;\n            } else if (!!state.data.masthead && !!state.data.masthead.description) {\n                description = state.data.masthead.description;\n            } else if (!!state.data.menu && !!state.data.menu.description) {\n                description = state.data.menu.description;\n            }\n        }\n        return description;\n    }\n\n    function getMastheadActions(state) {\n        var mastheadActions = undefined;\n        if (!!state.data &&\n            state.data.masthead &&\n            state.data.masthead.hasOwnProperty('actions') &&\n            state.data.masthead.actions.length > 0) {\n            mastheadActions = state.data.masthead.actions;\n        }\n        return mastheadActions;\n    }\n\n    function getTabs(state) {\n        var tabs = undefined;\n        if (state.data && state.data.tab && state.parent) {\n            tabs = [];\n            for (var i = 0; i < state.parent.children.length; i++) {\n                var brother = state.parent.children[i];\n                if (!!brother.data && !!brother.data.tab) {\n                    tabs.push({\n                        id: brother.data.tab.id,\n                        link: getLink(brother),\n                        title: getMenuTitle(brother)\n                    });\n                }\n            }\n        }\n        return tabs;\n    }\n\n    var tabDisabedArray = [];\n\n    function isTabDisabled(tabId) {\n        var result = false;\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index > -1) {\n            result = true;\n        }\n        return result;\n    }\n\n    function disableTab(tabId) {\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index == -1) {\n            tabDisabedArray.push(tabId);\n        }\n    }\n\n    function enableTab(tabId) {\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index > -1) {\n            tabDisabedArray.splice(index, 1);\n        }\n    }\n\n    function resetTabs() {\n        tabDisabedArray = [];\n    }\n\n    function isTabActive($state, tab) {\n        return !isTabDisabled(tab.id) &&\n            !!tab &&\n            !!tab.link &&\n            $state.current.name === tab.link;\n    }\n\n    function debounce(func, wait, context, $scope, $timeout) {\n        var timer;\n        return function debounced() {\n            var context = $scope,\n                args = Array.prototype.slice.call(arguments);\n            $timeout.cancel(timer);\n            timer = $timeout(function() {\n                timer = undefined;\n                func.apply(context, args);\n            }, wait || 10);\n        };\n    }\n\n    function buildDelayedToggler(navID, $scope, $log, $timeout, $mdSidenav) {\n        return debounce(function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav(navID)\n                .toggle()\n                .then(function() {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }, 200, null, $scope, $timeout);\n    }\n\n    function buildToggler(navID, $log) {\n        return function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav(navID)\n                .toggle()\n                .then(function() {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }\n    }\n\n    function gxAppController(GX_STATE_CONFIG, rootScope, $scope, $http, $state, toaster, smoothScroll, $element, $timeout, $mdSidenav, $log) {\n\n        var self = this;\n\n        self.toggleLeft = buildDelayedToggler('left', $scope, $log, $timeout, $mdSidenav);\n        self.toggleRight = buildToggler('right', $log);\n        self.isOpenRight = function() {\n            return $mdSidenav('right').isOpen();\n        };\n\n        self.close = function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav('left').close()\n                .then(function() {\n                    $log.debug(\"close LEFT is done\");\n                });\n        }\n\n        self.config = {\n            asideFolded: false, // menu lateral aparece recolhido\n            showNav: true, // mostrar barra de navegação\n            headerFixed: false, // header fixo ao rolar\n            asideFixed: false, // menu lateral fixo no scroll\n            asideDock: false, // menu laterial aparece em formato horizontal\n            container: false // conteúdo boxed\n        }\n\n        self.rootState = GX_STATE_CONFIG;\n\n        self.intro = null;\n\n        self.initState = function(state) {\n            initState($state, state);\n        };\n\n        self.getLink = getLink;\n\n        self.isToDisplayMenu = isToDisplayMenu;\n\n        self.getMenuIconClass = getMenuIconClass;\n\n        self.getMenuTitle = getMenuTitle;\n\n        self.getMenuDescription = getMenuDescription;\n\n        /*self.isStateActive = function(state) {\n        \tisStateActive($state, state);\n        };*/\n\n        self.onMenuClick = onMenuClick;\n\n        self.isToDisplayMasthead = function() {\n            return isToDisplayMasthead($state);\n        }\n\n        self.breadcrumbItems = null;\n\n        self.mastheadTitle = null;\n\n        self.mastheadDescription = null;\n\n        self.mastheadActions = null;\n\n        self.tabs = null;\n\n        self.isTabDisabled = function(tab) {\n            return isTabDisabled(tab.id);\n        };\n\n        self.isTabActive = function(tab) {\n            return isTabActive($state, tab);\n        };\n\n        $scope.CurrentDate = new Date();\n\n        $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\n            if (!rootScope.session) {\n                rootScope.session = {};\n            }\n\n            rootScope.session.lastState = fromState;\n            $scope.$ctrl.breadcrumbItems = getBreadcrumbItems(toState)\n            $scope.$ctrl.mastheadTitle = getMastheadTitle(toState);\n            $scope.$ctrl.mastheadDescription = getMastheadDescription(toState);\n            $scope.$ctrl.mastheadActions = getMastheadActions(toState);\n            $scope.$ctrl.tabs = getTabs(toState);\n\n            if (!!toState.data && !!toState.data.intro && !!toState.data.intro.url) {\n                $http.get(toState.data.intro.url)\n                    .then(function(response) {\n                        $scope.$ctrl.intro = window.introJs();\n                        var introOptions = response.data;\n                        introOptions.nextLabel = '<strong>Próximo</strong>';\n                        introOptions.prevLabel = '<strong>Anterior</strong>';\n                        introOptions.skipLabel = '<strong>Entendi!</strong>';\n                        introOptions.doneLabel = '<strong>Concluir</strong>';\n                        $scope.$ctrl.intro.setOptions(introOptions);\n                    });\n            } else {\n                $scope.$ctrl.intro = null;\n            }\n\n            $scope.startIntro = function() {\n                if (!!self.intro) {\n                    self.intro.start();\n                }\n            };\n\n\n\n            if (!!toState.data.aside &&\n                (toState.data.aside.display === \"false\" || toState.data.aside.display == false)) {\n                $scope.$ctrl.displayAside = false;\n            } else {\n                $scope.$ctrl.displayAside = true;\n            }\n\n            if (!!toState.data.footer &&\n                (toState.data.footer.display === \"false\" || toState.data.footer.display == false)) {\n                $scope.$ctrl.displayFooter = false;\n            } else {\n                $scope.$ctrl.displayFooter = true;\n            }\n\n            if (!!toState.data.navbar &&\n                (toState.data.navbar.display === \"false\" || toState.data.navbar.display == false)) {\n                $scope.$ctrl.displayNavbar = false;\n            } else {\n                $scope.$ctrl.displayNavbar = true;\n            }\n\n\n            if (!!toState.data.cockpit &&\n                (toState.data.cockpit.display === \"false\" || toState.data.cockpit.display == false)) {\n                $scope.$ctrl.displayCockpit = false;\n            } else {\n                $scope.$ctrl.displayCockpit = true;\n            }\n\n        });\n\n        $scope.$on('gxApp.feedback', function(event, message) {\n            var toaterMessage = {};\n            toaterMessage.type = !message.type ? 'info' : message.type;\n            toaterMessage.title = !message.title ? 'Mensagem do sistema' : message.title;\n            toaterMessage.body = message.body;\n            toaster.pop(toaterMessage);\n        })\n\n        $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n            smoothScroll($element[0]);\n        });\n\n        $scope.$on('gxApp.disableTab', function(event, id) {\n            disableTab(id);\n        });\n\n        $scope.$on('gxApp.enableTab', function(event, id) {\n            enableTab(id);\n        });\n\n        $scope.$on('gxApp.resetTabs', function(event) {\n            resetTabs();\n        });\n\n        self.$onInit = function() {\n            $('body').find('gx-app').removeClass('hide');\n            $('body').find('.gx-app-init').addClass('hide');\n        }\n    }\n\n    function gxAppService($rootScope) {\n\n        var service = {};\n\n        service.showMessage = function(message) {\n            showMessage($rootScope, message);\n        };\n\n        service.showInfo = function(message, title) {\n            showInfo($rootScope, message, title);\n        };\n\n        service.showSuccess = function(message, title) {\n            showSuccess($rootScope, message, title)\n        };\n\n        service.showWarning = function(message, title) {\n            showWarning($rootScope, message, title)\n        };\n\n        service.showError = function(message, title) {\n            showError($rootScope, message, title)\n        };\n\n        service.disableTab = function(id) {\n            $rootScope.$broadcast(\"gxApp.disableTab\", id);\n        };\n\n        service.enableTab = function(id) {\n            $rootScope.$broadcast(\"gxApp.enableTab\", id);\n        };\n\n        service.resetTabs = function() {\n            $rootScope.$broadcast(\"gxApp.resetTabs\");\n        };\n\n        service.getLastState = function() {\n            return $rootScope.session.lastState;\n        };\n\n        return service;\n    }\n\n    function gxAppRun(state, stateParams) {\n\n    }\n\n    var gxAppDependencies = [\n        'gux.config',\n        'ui.router',\n        'ui.router.stateHelper',\n        'angular-intro',\n        'angular-loading-bar',\n        'gux.tooltip',\n        'toaster',\n        'ngMaterial',\n        'angularScreenfull',\n        'smoothScroll'\n    ];\n\n    var gxAppComponent = {\n        template:'<span ng-if=\"$ctrl.displayCockpit\"><gx-cockpit></gx-cockpit></span><style ng-if=\"$ctrl.displayCockpit || false\">\\n    .app {\\n        position: absolute;\\n        margin-top: 64px;\\n    }\\n    \\n    .off-screen {\\n        position: static;\\n    }\\n</style><gx-sidenav></gx-sidenav><div class=\"app animated fadeIn\" ng-class=\"{\\'app-aside-folded\\': $ctrl.config.asideFolded, \\'app-header-fixed\\':$ctrl.config.headerFixed, \\'app-aside-fixed\\':$ctrl.config.asideFixed, \\'app-aside-dock\\':$ctrl.config.asideDock, \\'container\\':$ctrl.config.container}\"><toaster-container toaster-options=\"{\\'time-out\\': 9000, \\'close-button\\':true, \\'animation-class\\': \\'toast-right-center\\'}\"></toaster-container><div class=\"app-header navbar\" ng-if=\"$ctrl.displayNavbar\"><div class=\"navbar-header bg-light b-r lter lt\"><button class=\"pull-right visible-xs\" ui-toggle-class=\"off-screen\" data-target=\".app-aside\"><i class=\"fa fa-bars\"></i></button><a ui-sref=\"{{$ctrl.rootState.name}}\" class=\"text-lt hvr-rotate\"><span class=\"hidden-folded hidden-xs m-l-xs center-block brand-sm\"><img src=\"images/app-logo.svg\" class style=\"height: 60px; padding: 4px; width: 93%;\"></span><span class=\"visible-folded hidden-xs center-block brand-icon\"><img src=\"images/ccee-logo-folded.png\" class></span><span class=\"hidden-lg hidden-md hidden-sm m-l-xs center-block brand-xs\" style=\"width:70%; margin-top: 8px;\"><img src=\"images/app-logo.svg\" class style=\"width: 40%; padding: 4px;\"></span></a></div><div class=\"collapse pos-rlt navbar-collapse bg-white\"><ul ng-transclude=\"navbarRight\" class=\"nav navbar-nav navbar-right\"></ul><ul ng-if=\"!!$ctrl.intro\" class=\"nav navbar-nav navbar-right\"><li class=\"hidden-xs b-r b-light\"><a ng-click=\"startIntro()\" gx-tooltip=\"Tour guiado\" gx-tooltip-placement=\"bottom\"><i class=\"fa fa-question-circle\"></i></a></li></ul></div></div><aside id=\"aside\" class=\"app-aside hidden-xs bg-light b-r lter\" ng-if=\"$ctrl.displayAside\" ng-class=\"{\\'app-aside-folded\\': $ctrl.config.asideFolded}\"><div class=\"aside-wrap\"><div class=\"navi-wrap\"><nav ui-nav class=\"navi clearfix\"><ul class=\"nav\"><li class=\"padder m-t m-b-sm text-muted text-xs\"><span>Menu</span></li><li ng-if=\"::$ctrl.isToDisplayMenu(state)\" ng-init=\"$ctrl.initState(state)\" ng-repeat=\"state in $ctrl.rootState.children\" ng-model=\"navPrincipal\" ng-class=\"{\\'active\\': state.data.expanded}\"><a md-ink-ripple ng-if=\"::(!state.data.menu.link && state.abstract)\" class=\"auto\"><span class=\"pull-right text-muted\"><i class=\"ion-ios-arrow-right rotate fa fa-rotate-normal\"></i><md-tooltip md-direction=\"right\">abrir</md-tooltip></span> <i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a><ul ng-if=\"::!state.data.menu.link && !!state.children && state.children.length > 0\" class=\"nav nav-sub bg-white\"><li ng-if=\"::$ctrl.isToDisplayMenu(state)\" ng-repeat=\"state in state.children\" class=\"b-b b-light\"><a md-ink-ripple ng-click=\"$event.stopPropagation()\" ui-sref=\"{{state.data.menu.link ? state.data.menu.link : state.name}}\" data-target=\"#aside\" ui-toggle-class=\"off-screen\" class=\"sub-a\"><i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a></li></ul><a md-ink-ripple ng-if=\"::(!!state.data.menu.link || !state.abstract)\" ui-sref=\"{{state.data.menu.link ? state.data.menu.link : state.name}}\" class=\"auto\"><span class=\"pull-right text-muted\"></span> <i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a></li></ul><div class=\"hidden-xs\"><div class=\"aside-settings mt-lg w-full\"><a href class=\"pull-left md-raised btn-fw m-b-sm md-fab md-button md-default-theme md-mini\" ng-click=\"$ctrl.config.asideFolded = !$ctrl.config.asideFolded\"><i class=\"fa {{$ctrl.config.asideFolded ? \\'fa-angle-double-right\\' : \\'fa-angle-double-left\\'}} fa-fw text-dark\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">Expandir / Recolher menu</md-tooltip></a><a href scroll-to=\"app\" class=\"pull-right md-raised btn-fw m-b-sm md-fab md-button md-default-theme md-mini\"><i class=\"ion-ios-arrow-thin-up fa-fw text-dark\"></i><md-tooltip md-direction=\"left\" class=\"w-auto-folded\">Ir ao topo</md-tooltip></a></div></div></nav><div class=\"wrapper hidden-folded m-t\"><img src=\"images/ccee-logo-whatermark.png\" class=\"center-block\"></div></div></div></aside><div ng-class=\"{\\'app-content\\': $ctrl.displayAside === true, \\'app-content-screen\\': $ctrl.displayAside === false}\"><a href class=\"off-screen-toggle hide active\" ui-toggle-class=\"off-screen\" data-target=\".app-aside\"></a><div class=\"app-content-body\"><div class=\"bg-light lter b-b b-t wrapper-md\" ng-if=\"$ctrl.isToDisplayMasthead()\"><div ng-if=\"!!$ctrl.mastheadActions\" class=\"dropdown pull-right\"><button type=\"button\" data-toggle=\"dropdown\" class=\"btn btn-default dropdown-toggle btn-lg\">Ações&nbsp;<span class=\"caret\"></span></button><ul class=\"dropdown-menu\"><li ng-repeat=\"action in $ctrl.mastheadActions\"><a ui-sref=\"{{action.link}}\"><i class=\"{{action.iconClass}}\"></i>&nbsp;{{action.title}}</a></li></ul></div><ol class=\"breadcrumb hidden-xs\">Você está em:&nbsp;<li ng-repeat=\"breadcrumbItem in $ctrl.breadcrumbItems\"><span ng-if=\"::breadcrumbItem.link === undefined\">{{breadcrumbItem.title}}</span> <a ng-if=\"::breadcrumbItem.link != undefined\" ui-sref=\"{{breadcrumbItem.link}}\">{{breadcrumbItem.title}}</a></li></ol><h3 class=\"text-black font-thin m-t-sm m-b-xxs\">{{$ctrl.mastheadTitle}}</h3><small class=\"text-muted\">{{$ctrl.mastheadDescription}}</small></div><div ng-if=\"!!$ctrl.tabs\" class=\"nav-tabs-alt\"><ul class=\"nav nav-tabs\"><li ng-repeat=\"tab in $ctrl.tabs\" ng-class=\"{\\'active\\': $ctrl.isTabActive(tab), \\'disabled\\': $ctrl.isTabDisabled(tab)}\" class=\"m-l-lg\"><a ui-sref=\"{{$ctrl.isTabDisabled(tab) ? \\'.\\' : tab.link}}\" ng-class=\"{\\'disabled\\': $ctrl.isTabDisabled(tab)}\">{{tab.title}}</a></li></ul></div><div ui-view></div></div></div><span ng-if=\"$ctrl.displayFooter\"><div class=\"app-footer wrapper b-t bg-light\"><span class=\"pull-right\">{{$ctrl.name}}-{{$ctrl.version}} <a href scroll-to=\"app\" class=\"m-l-sm text-muted\"><i class=\"fa fa-long-arrow-up\"></i></a></span> &copy;2016 Todos os direitos reservados.</div></span></div><div class=\"app-footer navbar navbar-fixed-bottom blue-grey-50 b-t visible-xs\" style=\"z-index: 1;\"><div class=\"row m-t-xs\"><div class=\"col-sm-8\"><div class=\"w-xl w-auto-xs center-block\"><div class=\"btn-group btn-group-justified text-center text-sm\"><div class=\"btn-group b-r\"><a class=\"wrapper-xs block hvr-back-pulse r r-2x\" scroll-to=\"app\"><i class=\"block text-md m-t-xs fa fa-user\"></i> <span class=\"text-sm\">perfil</span></a></div><div class=\"btn-group b-r\"><a href=\"/\" class=\"wrapper-xs block hvr-back-pulse r r-2x\"><i class=\"block text-md m-t-xs fa fa-home\"></i> <span class=\"text-sm\">Home</span></a></div><div class=\"btn-group\"><a class=\"wrapper-xs block hvr-back-pulse r r-2x\"><i class=\"block text-md m-t-xs fa fa-share\"></i> <span class=\"text-sm\">compartilhar</span></a></div></div></div></div></div></div>',\n        transclude: {\n            'navbarRight': '?li'\n        },\n        bindings: {\n            name: '@',\n            gxVersion: '@',\n            showAside: '@',\n            showFooter: '@',\n            showHeader: '@'\n        },\n        controller: [\n            'GX_STATE_CONFIG',\n            '$rootScope',\n            '$scope',\n            '$http',\n            '$state',\n            'toaster',\n            'smoothScroll',\n            '$element',\n            '$timeout',\n            '$mdSidenav',\n            '$log',\n            gxAppController\n        ]\n    };\n\n    angular\n        .module('gux.app', gxAppDependencies)\n        .config(['$provide', 'cfpLoadingBarProvider', '$locationProvider', 'GX_STATE_CONFIG', 'stateHelperProvider', '$mdThemingProvider', gxAppConfig])\n        .factory('gxAppService', ['$rootScope', gxAppService])\n        .component('gxApp', gxAppComponent)\n        .run(['$state', '$stateParams', gxAppRun]);\n\n}(window.$, window.angular));\n(function(angular) {\n\n    'use strict';\n\n    var guxToolboxDependencies = [\n        'gux.tooltip',\n        'gux.app',\n        'gux.panel',\n        'gux.form',\n        'gux.formGroup',\n        'gux.fieldset',\n        'gux.formButton',\n        'gux.flatfull',\n        'bw.paging',\n        'gux.cockpit',\n        'gux.sidenav',\n        'ngMaterial',\n        'multiStepForm',\n        'as.sortable',\n        'angular-progress-button-styles'\n    ];\n\n    angular.module('gux.toolbox', guxToolboxDependencies);\n\n}(window.angular));"],"sourceRoot":"/source/"}