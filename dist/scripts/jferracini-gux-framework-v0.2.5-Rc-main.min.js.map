{"version":3,"sources":["jferracini-gux-framework-v0.2.5-Rc-main.js"],"names":["$","angular","ngFormControllerNotLoaded","this","message","isForce","gxformController","result","gxForce","isNgFormControllerPristine","ngFormController","$pristine","isNgFormControllerValid","$valid","$invalid","gxFormService","getController","formName","controller","self","formControllersMap","getGxFormController","gxFormController","service","ERROR_FEEDBACK_TYPE","WARNING_FEEDBACK_TYPE","SUCCESS_FEEDBACK_TYPE","INFO_FEEDBACK_TYPE","DEFAULT_FEEDBACK_TYPE","setGxFormController","getNgFormController","setNgFormController","isPristine","setPristine","$setPristine","isValidable","ngModelController","gxSubmissionAttemptCount","$name","$dirty","resetValidators","gxWarning","gxSuccess","gxInfo","isValid","feedbackType","validatorKey","source","feedback","isEmptyObject","ngModelControllers","i","length","setValidatorInvalid","push","setValidatorValid","splice","resetFormController","gxFormErrorException","title","type","validate","$scope","forEach","attribute","Object","$validate","submit","$parse","$ctrl","gxName","gxSubmit","$parent","then","$element","Error","append","html","$watch","gxFormDependencies","gxFormComponent","template","transclude","bindings","module","factory","component","window","validatorDefinition","modelValue","viewValue","force","error","getMessage","undefined","key","getTimeout","timeout","getFeedbackMessages","validatorsDefinitions","feedbackMessages","text","invalidValidators","validatorFunction","nameNotFoundException","parentElement","childElement","ngModelControllerNotFoundException","gxFormGroupController","$timeout","$log","validator","me","func","inputElementName","name","elementIndex","elementName","stereotype","isInputNumber","isCurrency","isInput","isTextarea","isCalendar","isSelect","isDropdown","isAutocomplete","isSwitch","isEquation","isCustom","hasError","hasWarning","hasSuccess","number","url","email","date","radio","checkbox","required","pattern","minlength","maxlength","min","max","registerValidator","forceValidation","validatorMessage","validatorTimeout","setModel","model","$apply","getBadgeValue","item","badgePathArray","modelOptionAttributeBadge","split","closest","attr","elements","find","currentElement","currentElementName","errorValidatorsDefinitions","errorValidatorKey","errorValidatorDefinition","val","$validators","gxFormGroup","feedbakType","$modelValue","$viewValue","on","feedbackMessage","index","indexOf","warn","gxFormGroupRun","uiMaskConfig","clearOnBlur","gxFormGroupDependencies","gxFormGroupComponent","gxFormGroupValidator","require","label","offLabel","onLabel","description","example","mask","gxModelOptions","modelOffValue","modelOnValue","modelOptions","modelOptionAttributeKey","modelOptionAttributeValue","gxRows","gxCols","gxMinlength","gxMaxlength","gxMin","gxMax","gxPattern","gxTabindex","readonly","disabled","gxIgnoreTimezone","gxCalPlacement","gxOnSearch","gxOnCreate","gxOnUpdate","gxOnDelete","gxAttributeValueMatch","run","gxFormGroupValidatorController","$onInit","gxType","toUpperCase","gxKey","gxFunction","gxMessage","gxTimeout","gxFormGroupValidatorDependencies","gxFormGroupValidatorComponent","gxFormGroupTextareaController","gxFormGroupTextareaDependencies","gxFormGroupTextareaComponent","parent","gxFormGroupSwitchController","isOn","gxFormGroupSwitchDependencies","gxFormGroupSwitchComponent","gxFormGroupSelectController","gxFormGroupSelectDependencies","gxFormGroupSelectComponent","gxFormGroupInputController","gxFormGroupInputDependencies","gxFormGroupInputComponent","gxFormGroupInputNumberController","gxFormGroupInputNumberDependencies","gxFormGroupInputNumberComponent","gxFormGroupInputCurrencyController","console","log","gxFormGroupInputCurrencyDependencies","gxFormGroupInputCurrencyComponent","MathQuill","gxFormGroupEquationController","$attrs","mathFieldElement","MQ","getInterface","mathField","MathField","spaceBehavesLikeTab","handlers","edit","latex","gxFormGroupEquationDependencies","gxFormGroupEquationComponent","gxFormGroupDropdownController","showBadge","gxFormGroupDropdownDependencies","gxFormGroupDropdownComponent","moment","jstz","gxFormGroupCalendarController","GX_FORM_GROUP_CONFIG","ignoreTimezone","datepickerElement","viewMode","format","language","navigator","userLanguage","formattedDate","value","utc","isSame","toISOString","datepicker","datetimepicker","locale","useStrict","useCurrent","allowInputToggle","showTodayButton","showClear","icons","clear","close","down","next","previous","time","today","up","tooltips","selectMonth","prevMonth","nextMonth","selectYear","prevYear","nextYear","selectDecade","prevDecade","nextDecade","prevCentury","nextCentury","data","parseInputDate","event","gxFormGroupCalendarDependencies","gxFormGroupCalendarComponent","_","hideDropdownMenu","setViewMode","editMode","setEditMode","refresh","newValue","isSearchable","modelFilteredOptions","slice","fullMatch","initialMatch","parcialMatch","modelOption","modelOptionString","String","modelAutocompleteString","modelAutocomplete","concat","noDataFound","itemFound","itemFoundArray","filter","syncModelAutocomplete","handleCreateSuccess","createdObject","handleCreateError","handleUpdateSucess","updatedObject","handleUpdateError","oldValue","handleDeleteSuccess","deletedObject","handleDeleteError","gxFormGroupAutocompleteController","defaultGxModelOptions","updateOn","debounce","default","blur","searchableGxModelOptions","inputElement","isCreatable","isUpdateable","isDeletable","isLoading","selectOption","dropdown","keyCode","preventDefault","focus","contains","relatedTarget","create","catch","isEditDisabled","isUpdateDisabled","update","cancel","delete","selectedOption","showBeginSerach","showNoDataFound","isMessage","gxFormGroupAutocompleteDependencies","gxFormGroupAutocompleteComponent","gxFormButtonController","$state","gxAppService","buttonClass","iconClass","show","exception","constructor","lastState","getLastState","click","go","onClick","gxFormButtonDependencies","gxFormButtonComponent","showMessage","scope","$broadcast","showInfo","body","showSuccess","showWarning","showError","gxAppConfig","$provide","cfpLoadingBarProvider","locationProvider","GX_STATE_CONFIG","stateHelperProvider","$mdThemingProvider","isIE","userAgent","match","html5Mode","state","includeSpinner","spinnerTemplate","decorator","$injector","$delegate","cause","$rootScope","get","theme","primaryPalette","hue-1","hue-2","hue-3","accentPalette","initState","abstract","expanded","includes","getLink","link","tab","menu","isToDisplayMenu","display","getMenuIconClass","getMenuTitle","masthead","getMenuDescription","onMenuClick","isToDisplayMasthead","current","setStateRoute","stateRoute","getBreadcrumbItems","breadcrumbItems","states","reverse","actions","getMastheadTitle","getMastheadDescription","getMastheadActions","mastheadActions","hasOwnProperty","getTabs","tabs","children","brother","id","isTabDisabled","tabId","tabDisabedArray","disableTab","enableTab","resetTabs","isTabActive","wait","context","timer","args","Array","prototype","call","arguments","apply","buildDelayedToggler","navID","$mdSidenav","toggle","debug","buildToggler","gxAppController","rootScope","$http","toaster","smoothScroll","toggleLeft","toggleRight","isOpenRight","isOpen","config","asideFolded","showNav","headerFixed","asideFixed","asideDock","container","rootState","intro","mastheadTitle","mastheadDescription","CurrentDate","Date","$on","toState","toParams","fromState","fromParams","session","response","introJs","introOptions","nextLabel","prevLabel","skipLabel","doneLabel","setOptions","startIntro","start","aside","displayAside","footer","displayFooter","navbar","displayNavbar","cockpit","displayCockpit","toaterMessage","pop","removeClass","addClass","gxAppRun","stateParams","gxAppDependencies","gxAppComponent","navbarRight","gxVersion","showAside","showFooter","showHeader","directive","$animate","$eval","setNgAnimate","valnew","valold","enabled","restrict","el","_window","_mb","wrap","backdrop","e","trigger","_this","siblings","toggleClass","is","width","remove","top","target","w_h","height","offset","position","css","appendTo","off","insertAfter","$document","magic","_class","patt","RegExp","replace","join","cn","className","test","trim","classes","uiToggleClass","targets","$location","$anchorScroll","hash","uiScrollTo","parse","GXTooltipLink","element","attributes","$observe","tooltip","placement","gxTooltipPlacement","gxTooltip","GXSidenavController","controllerAs","GXPanelHeaderController","bindToController","GXFieldsetController","collapsed","collapsible","GXCockpitController","guxToolboxDependencies"],"mappings":"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","file":"jferracini-gux-framework-v0.2.5-Rc-main.min.js","sourcesContent":["(function($, angular) {\n\n    'use strict';\n\n    function ngFormControllerNotLoaded() {\n        this.message = \"Angular FormController has not been loaded yet\";\n    }\n\n    function isForce(gxformController) {\n        var result = false;\n        if (!!gxformController.gxForce &&\n            (gxformController.gxForce === true ||\n                gxformController.gxForce === \"true\")) {\n            result = true;\n        }\n        return result;\n    }\n\n    function isNgFormControllerPristine(ngFormController) {\n        return ngFormController.$pristine;\n    }\n\n    function isNgFormControllerValid(ngFormController) {\n        return ngFormController.$valid || !ngFormController.$invalid;\n    }\n\n    function isGxFormControllerWarning(gxformController) {\n        return !!gxformController.gxWarning || gxformController.gxSubmissionWarningCont <= 1;\n    }\n\n    function gxFormService() {\n\n        var service = {};\n        service.ERROR_FEEDBACK_TYPE = '$error';\n        service.WARNING_FEEDBACK_TYPE = 'gxWarning';\n        service.SUCCESS_FEEDBACK_TYPE = 'gxSuccess';\n        service.INFO_FEEDBACK_TYPE = 'gxInfo';\n        service.DEFAULT_FEEDBACK_TYPE = 'gxDefault';\n\n        var self = this;\n        self.formControllersMap = {};\n\n        function getController(formName) {\n            var controller = self.formControllersMap[formName];\n            if (!controller) {\n                self.formControllersMap[formName] = {};\n                controller = self.formControllersMap[formName];\n            }\n            return controller;\n        }\n\n        function getGxFormController(formName) {\n            return getController(formName).gxFormController;\n        }\n\n        service.setGxFormController = function(formName, gxFormController) {\n            getController(formName).gxFormController = gxFormController;\n        };\n\n        service.getNgFormController = function(formName) {\n            var ngFormController = getController(formName).ngFormController;\n            if (!ngFormController) {\n                throw new ngFormControllerNotLoaded();\n            }\n            return ngFormController;\n        };\n\n        service.setNgFormController = function(formName, ngFormController) {\n            getController(formName).ngFormController = ngFormController;\n        };\n\n        service.isPristine = function(formName) {\n            return isNgFormControllerPristine(service.getNgFormController(formName));\n        };\n\n        service.setPristine = function(formName) {\n            return service.getNgFormController(formName).$setPristine();\n        };\n\n        service.isValidable = function(formName, ngModelController) {\n            var result = false;\n            var ngFormController = service.getNgFormController(formName);\n            var gxFormController = getGxFormController(formName);\n            result = gxFormController.gxSubmissionAttemptCount > 0 ||\n                ngFormController[ngModelController.$name].$dirty;\n            return result;\n        };\n\n        service.resetValidators = function(formName) {\n            var gxFormController = getGxFormController(formName);\n            gxFormController.gxWarning = {};\n            gxFormController.gxSuccess = {};\n            gxFormController.gxInfo = {};\n        };\n\n        service.isForce = function(formName) {\n            var gxFormController = getGxFormController(formName);\n            return isForce(gxFormController);\n        };\n\n        service.isValid = function(formName, feedbackType, validatorKey, ngModelController) {\n\n            var ngFormController = service.getNgFormController(formName);\n\n            if (!feedbackType) {\n                return isNgFormControllerValid(ngFormController);\n            }\n\n            var result = true;\n            var source = null;\n            if (feedbackType === service.ERROR_FEEDBACK_TYPE) {\n                source = ngFormController;\n            } else {\n                source = getGxFormController(formName);\n            }\n\n            var feedback = source[feedbackType];\n            if (!validatorKey) {\n                return !feedback || $.isEmptyObject(feedback);\n            } else {\n                var ngModelControllers = feedback[validatorKey];\n                if (!!ngModelControllers) {\n                    for (var i = 0; ngModelControllers.length > i; i++) {\n                        if (ngModelController.$name === ngModelControllers[i].$name) {\n                            result = false;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return result;\n        };\n\n        service.setValidatorInvalid = function(formName, feedbackType, validatorKey, ngModelController) {\n            if (feedbackType != service.ERROR_FEEDBACK_TYPE) {\n                if (!!ngModelController) {\n                    var gxFormController = getGxFormController(formName);\n                    if (!gxFormController[feedbackType][validatorKey]) {\n                        gxFormController[feedbackType][validatorKey] = [];\n                    }\n                    gxFormController[feedbackType][validatorKey].push(ngModelController);\n                }\n            }\n        };\n\n        service.setValidatorValid = function(formName, feedbackType, validatorKey, ngModelController) {\n            if (feedbackType != service.ERROR_FEEDBACK_TYPE) {\n                if (!!ngModelController) {\n                    var gxFormController = getGxFormController(formName);\n                    var ngModelControllers = gxFormController[feedbackType][validatorKey];\n                    if (!ngModelControllers) {\n                        return;\n                    }\n                    for (var i = ngModelControllers.length - 1; i >= 0; i--) {\n                        if (ngModelController.$name === ngModelControllers[i].$name) {\n                            ngModelControllers.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        };\n\n        service.resetFormController = function(formName) {\n            getGxFormController(formName).gxSubmissionAttemptCount = 0;\n            service.getNgFormController(formName).$setPristine();\n        }\n\n        return service;\n    }\n\n    function gxFormErrorException(message, title) {\n        this.title = title;\n        this.message = message;\n        this.type = 'error';\n    }\n\n    function gxFormWarningException(message, title) {\n        this.title = title;\n        this.message = message;\n        this.type = 'warning';\n    }\n\n    function validateFormGroups(ngFormController) {\n        angular.forEach(ngFormController, function(value, key) {\n            if (!!value && !!value.gxValidate) {\n                value.gxValidate(null, null, function() {});\n            }\n        });\n    }\n\n    function validate($scope, ngFormController) {\n        angular.forEach(ngFormController, function(attribute) {\n            if (!!attribute && attribute instanceof Object && !!attribute.$validate) {\n                attribute.$validate();\n            }\n        });\n    }\n\n    function submit($scope, $parse, gxFormService) {\n\n        var gxFormController = $scope.$ctrl;\n        var ngFormController = gxFormService.getNgFormController(gxFormController.gxName);\n        $scope.$ctrl.gxSubmissionAttemptCount++;\n\n        validate($scope, ngFormController);\n\n        if (!isForce(gxFormController) && !isNgFormControllerValid(ngFormController)) {\n            var message = 'Alguns campos do formulário requerem sua atenção, você deve obrigatoriamente corrigi-los antes de submeter o formulário';\n            throw new gxFormErrorException(message, 'Ops!');\n        }\n\n        var result = $parse(gxFormController.gxSubmit)($scope.$parent);\n\n        if (!!result && !!result.then) {\n            result\n                .then(function() {\n                    gxFormService.resetFormController(gxFormController.gxName);\n                });\n        } else if (!!result) {\n            gxFormService.resetFormController(gxFormController.gxName);\n        }\n\n        return result;\n    }\n\n    function gxFormController($parse, $element, $scope, gxFormService) {\n\n        var self = this;\n\n        if (!self.gxSubmit) {\n            throw new Error('You must define gx-submit attribute for element ' + $('<span>').append($element).html());\n        }\n\n        self.gxSubmissionAttemptCount = 0;\n        //self.gxSubmissionWarningCont = 0;\n        //self.gxSubmissionErrorCont = 0;\n\n        self.submit = function() {\n            submit($scope, $parse, gxFormService);\n        }\n\n        gxFormService.setNgFormController(self.gxName, null);\n        gxFormService.setGxFormController(self.gxName, self);\n\n        $scope.$watch(self.gxName, function(ngFormController) {\n            gxFormService.setNgFormController(self.gxName, ngFormController);\n        });\n    }\n\n    var gxFormDependencies = [];\n\n    var gxFormComponent = {\n        template:'<form name=\"{{$ctrl.gxName}}\" ng-submit=\"$ctrl.submit()\" ng-transclude novalidate></form>',\n        transclude: true,\n        bindings: {\n            gxName: '@',\n            gxSubmit: '@',\n            gxForce: '@'\n        },\n        controller: [\n            '$parse',\n            '$element',\n            '$scope',\n            'gxFormService',\n            gxFormController\n        ]\n    };\n\n    angular\n        .module('gux.form', gxFormDependencies)\n        .factory('gxFormService', gxFormService)\n        .component('gxForm', gxFormComponent);\n\n}(window.$, window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    var elementIndex = 1;\n\n    function isForce($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = false;\n        if (!!validatorDefinition.force) {\n            if (validatorDefinition.force === 'false' || validatorDefinition.force === false) {\n                result = false;\n            } else if (validatorDefinition.force === 'true' || validatorDefinition.force === true) {\n                result = true;\n            } else {\n                try {\n                    result = $parse(validatorDefinition.force)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n                } catch (error) {\n                    throw new Error(\"Unable to parse gx-form-group-validator gx-force function: \" + validatorDefinition.force);\n                }\n            }\n        }\n        return result;\n    }\n\n    function getMessage($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = undefined;\n        if (!!validatorDefinition.message) {\n            try {\n                result = $parse(validatorDefinition.message)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n            } catch (error) {\n                result = validatorDefinition.message;\n            }\n            if (!result) {\n                result = 'Menssagem de feedback não definida para o validador: ' + key;\n            }\n        }\n        return result;\n    }\n\n    function getTimeout($parse, $scope, validatorDefinition, modelValue, viewValue) {\n        var result = undefined;\n        if (!!validatorDefinition.timeout) {\n            try {\n                result = $parse(validatorDefinition.timeout)($scope.$parent, { modelValue: modelValue, viewValue: viewValue });\n            } catch (error) {\n                result = validatorDefinition.timeout;\n            }\n        }\n        return result;\n    }\n\n    function getFeedbackMessages($parse, $scope, validatorsDefinitions, modelValue, viewValue) {\n        var feedbackMessages = [];\n        for (var i = 0; validatorsDefinitions.length > i; i++) {\n            var validatorDefinition = $scope.$ctrl.validatorsDefinitions[validatorsDefinitions[i].type][validatorsDefinitions[i].key];\n            feedbackMessages.push({\n                text: getMessage($parse, $scope, validatorDefinition, modelValue, viewValue),\n                timeout: getTimeout($parse, $scope, validatorDefinition, modelValue, viewValue)\n            });\n        }\n        return feedbackMessages;\n    }\n\n    // TRUE it is valid\n    // FALSE it is invalid\n    function validate($parse, $scope, gxFormService, feedbackType, ngModelController, modelValue, viewValue) {\n        var result = true;\n        var invalidValidators = [];\n        gxFormService.resetValidators($scope.$ctrl.formName);\n        for (var validatorKey in $scope.$ctrl.validatorsDefinitions[feedbackType]) {\n            var validatorDefinition = $scope.$ctrl.validatorsDefinitions[feedbackType][validatorKey];\n            if (isForce($parse, $scope, validatorDefinition, modelValue, viewValue) || gxFormService.isValidable($scope.$ctrl.formName, ngModelController)) {\n                if (feedbackType != gxFormService.ERROR_FEEDBACK_TYPE &&\n                    !!validatorDefinition.validatorFunction &&\n                    !$parse(validatorDefinition.validatorFunction)($scope.$parent, { modelValue: modelValue, viewValue: viewValue })) {\n                    gxFormService.setValidatorInvalid($scope.$ctrl.formName, feedbackType, validatorKey, ngModelController, validatorDefinition.timeout);\n                }\n                if (!gxFormService.isValid($scope.$ctrl.formName, feedbackType, validatorKey, ngModelController)) {\n                    invalidValidators.push(validatorDefinition);\n                }\n            }\n        }\n        if (!!invalidValidators && invalidValidators.length > 0) {\n            $scope.$ctrl.feedbackType = feedbackType;\n            $scope.$ctrl.feedbackMessages = getFeedbackMessages($parse, $scope, invalidValidators, modelValue, viewValue);\n            result = false;\n        } else {\n            $scope.$ctrl.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n        }\n        return result;\n    };\n\n    function nameNotFoundException(parentElement, childElement) {\n        this.message = 'Element name not found';\n        this.parentElement = parentElement.html();\n        this.childElement = childElement.html();\n    }\n\n    function ngModelControllerNotFoundException(parentElement, childElement) {\n        this.message = 'ngModelController not found';\n        this.parentElement = parentElement.html();\n        this.childElement = childElement.html();\n    }\n\n    function gxFormGroupController($timeout, $parse, $element, $scope, gxFormService, $log) {\n\n        var self = this;\n\n        var inputElementName = null;\n        if (!!self.name) {\n            inputElementName = self.name;\n        } else {\n            inputElementName = 'gx-form-group-' + elementIndex++;\n        }\n        self.elementName = inputElementName;\n\n        if (self.stereotype === 'number') {\n            self.isInputNumber = true;\n        } else if (self.stereotype === 'currency') {\n            self.isCurrency = true;\n        } else if (self.stereotype === 'text' ||\n            self.stereotype === 'email' ||\n            self.stereotype === 'password' ||\n            self.stereotype === 'url') {\n            self.isInput = true;\n        } else if (self.stereotype === 'textarea') {\n            self.isTextarea = true;\n        } else if (self.stereotype === 'date-time' ||\n            self.stereotype === 'date' ||\n            self.stereotype === 'date-month' ||\n            self.stereotype === 'date-year') {\n            self.isCalendar = true;\n        } else if (self.stereotype === 'select') {\n            self.isSelect = true;\n        } else if (self.stereotype === 'dropdown') {\n            self.isDropdown = true;\n        } else if (self.stereotype === 'autocomplete') {\n            self.isAutocomplete = true;\n        } else if (self.stereotype === 'switch') {\n            self.isSwitch = true;\n        } else if (self.stereotype === 'equation') {\n            self.isEquation = true;\n        } else if (!self.stereotype) {\n            self.isCustom = true;\n        }\n\n        self.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n\n        self.hasError = function() {\n            return self.feedbackType === gxFormService.ERROR_FEEDBACK_TYPE;\n        };\n\n        self.hasWarning = function() {\n            return self.feedbackType === gxFormService.WARNING_FEEDBACK_TYPE;\n        };\n\n        self.hasSuccess = function() {\n            return self.feedbackType === gxFormService.SUCCESS_FEEDBACK_TYPE;\n        };\n\n        self.feedbackMessages = [];\n\n        self.validatorsDefinitions = {}\n        self.validatorsDefinitions[gxFormService.ERROR_FEEDBACK_TYPE] = {\n            text: { type: \"$error\", key: \"text\", message: \"Texto inválido\" },\n            number: { type: \"$error\", key: \"number\", message: \"Numero inválido\" },\n            url: { type: \"$error\", key: \"url\", message: \"URL Inválida\" },\n            email: { type: \"$error\", key: \"email\", message: \"Email inválido\" },\n            date: { type: \"$error\", key: \"date\", message: \"Data inválida\" },\n            radio: { type: \"$error\", key: \"radio\", message: \"Radio inválido\" },\n            checkbox: { type: \"$error\", key: \"checkbox\", message: \"Checkbox inválido\" },\n            required: { type: \"$error\", key: \"required\", message: \"Campo obrigatório\" },\n            pattern: { type: \"$error\", key: \"pattern\", message: \"O texto não segue o padrão definido\" },\n            minlength: { type: \"$error\", key: \"minlength\", message: \"O texto não possui o tamanho mínimo de caracteres\" },\n            maxlength: { type: \"$error\", key: \"maxlength\", message: \"O texto ultrapassa o tamanho máximo de caracteres\" },\n            min: { type: \"$error\", key: \"min\", message: \"Numero inferior ao valor mínimo requerido\" },\n            max: { type: \"$error\", key: \"max\", message: \"Numero superior ao valor mínimo requerido\" }\n        };\n        self.validatorsDefinitions[gxFormService.WARNING_FEEDBACK_TYPE] = {};\n        self.validatorsDefinitions[gxFormService.SUCCESS_FEEDBACK_TYPE] = {};\n        self.validatorsDefinitions[gxFormService.INFO_FEEDBACK_TYPE] = {};\n\n        self.registerValidator = function(feedbackType, validatorKey, forceValidation, validatorFunction, validatorMessage, validatorTimeout) {\n            var validatorDefinition = {\n                type: feedbackType,\n                key: validatorKey,\n                validatorFunction: validatorFunction,\n                force: forceValidation,\n                message: validatorMessage,\n                timeout: validatorTimeout\n            }\n            self.validatorsDefinitions[feedbackType][validatorKey] = validatorDefinition;\n        };\n\n        self.setModel = function(model, force) {\n            //var modelGetter = $parse($element.attr('model'));\n            //var modelSetter = modelGetter.assign;\n            //modelSetter($scope.$parent, model);\n            self.model = model;\n            if (!!force && force === true) {\n                $scope.$apply();\n            }\n        };\n\n        self.getBadgeValue = function(item) {\n            var badgePathArray = self.modelOptionAttributeBadge.split('.');\n            var result = item;\n            for (var i = 0; i < badgePathArray.length; i++) {\n                result = result[badgePathArray[i]];\n            }\n            return result;\n        };\n\n        function validator(ngModelController, validatorDefinition) {\n            var me = this;\n            me.ngModelController = ngModelController;\n            me.validatorDefinition = validatorDefinition;\n            me.validate = function(modelValue, viewValue) {\n                var func = $parse(me.validatorDefinition.validatorFunction);\n                return func($scope.$parent, { modelValue: modelValue, viewValue: viewValue, ngModelController: me.ngModelController });\n            }\n        }\n\n        $timeout(function() {\n\n            self.formName = $element.closest('form').attr('name');\n            var ngFormController = gxFormService.getNgFormController(self.formName);\n\n            var elements = $element.find('[ng-model]');\n\n            if (elements.length > 0) {\n\n                for (var i = 0; i < elements.length; i++) {\n\n                    var currentElement = $(elements[i]);\n                    var currentElementName = currentElement.attr(\"name\");\n\n                    if (!currentElementName) {\n                        throw new nameNotFoundException($element, currentElement);\n                    }\n\n                    var ngModelController = ngFormController[currentElementName];\n\n                    if (!ngModelController) {\n                        throw new ngModelControllerNotFoundException($element, currentElement);\n                    }\n\n                    var errorValidatorsDefinitions = self.validatorsDefinitions[gxFormService.ERROR_FEEDBACK_TYPE];\n                    for (var errorValidatorKey in errorValidatorsDefinitions) {\n                        var errorValidatorDefinition = errorValidatorsDefinitions[errorValidatorKey];\n                        if (!!errorValidatorDefinition.validatorFunction) {\n                            var val = new validator(ngModelController, errorValidatorDefinition);\n                            ngModelController.$validators[errorValidatorKey] = val.validate;\n                        }\n                    }\n\n                    ngModelController.$validators.gxFormGroup = function(modelValue, viewValue) {\n                        self.feedbackMessages = [];\n                        var result = validate($parse, $scope, gxFormService, gxFormService.ERROR_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.WARNING_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.SUCCESS_FEEDBACK_TYPE, ngModelController, modelValue, viewValue) &&\n                            validate($parse, $scope, gxFormService, gxFormService.INFO_FEEDBACK_TYPE, ngModelController, modelValue, viewValue);\n                        return true;\n                    };\n\n                    for (var feedbakType in self.validatorsDefinitions) {\n                        for (var validatorKey in self.validatorsDefinitions[feedbakType]) {\n                            var validatorDefinition = self.validatorsDefinitions[feedbakType][validatorKey];\n                            if (isForce($parse, $scope, validatorDefinition, ngModelController.$modelValue, ngModelController.$viewValue)) {\n                                validate($parse, $scope, gxFormService, gxFormService.WARNING_FEEDBACK_TYPE, ngModelController, ngModelController.$modelValue, ngModelController.$viewValue)\n                            }\n                        }\n                    }\n\n                    currentElement.on('blur', function() {\n                        for (var i = 0; i < self.feedbackMessages.length; i++) {\n                            var feedbackMessage = self.feedbackMessages[i];\n                            if (!!feedbackMessage.timeout) {\n                                $timeout(function() {\n                                    var index = self.feedbackMessages.indexOf(feedbackMessage); // <-- Not supported in <IE9\n                                    if (index !== -1) {\n                                        self.feedbackMessages.splice(index, 1);\n                                    }\n                                    if (self.feedbackMessages.length == 0) {\n                                        self.feedbackType = gxFormService.DEFAULT_FEEDBACK_TYPE;\n                                    }\n                                }, feedbackMessage.timeout);\n                            }\n                        }\n                    });\n                }\n\n            } else {\n                $log.warn(\"No ng-model found for element: \" + $element.html());\n            }\n        });\n    };\n\n    var gxFormGroupDependencies = [\n        'gux.tooltip',\n        'ui.select',\n        'ui.mask',\n        'gux.formGroupInput',\n        'gux.FormGroupInputNumber',\n        'gux.FormGroupInputCurrency',\n        'gux.formGroupTextarea',\n        'gux.formGroupCalendar',\n        'gux.formGroupSelect',\n        'gux.formGroupDropdown',\n        'gux.formGroupAutocomplete',\n        'gux.formGroupSwitch',\n        'gux.formGroupEquation',\n        'gux.formGroupValidator'\n    ];\n\n    var gxFormGroupComponent = {\n        template:'<div class=\"form-group gx-form-group\" ng-class=\"{\\'has-success\\': $ctrl.hasSuccess(), \\'has-warning\\': $ctrl.hasWarning(), \\'has-error\\': $ctrl.hasError()}\"><div><label ng-if=\"::$ctrl.label\" ng-attr-gx-tooltip=\"{{$ctrl.description}}\" class=\"control-label\">{{::$ctrl.label}} <span ng-if=\"$ctrl.required\" class=\"required\">*</span> <small ng-if=\"$ctrl.description\">&nbsp;<i class=\"fa fa-info-circle\"></i></small></label></div><gx-form-group-input-number ng-if=\"::$ctrl.isInputNumber\"></gx-form-group-input-number><gx-form-group-input-currency ng-if=\"::$ctrl.isCurrency\"></gx-form-group-input-currency><gx-form-group-input ng-if=\"::$ctrl.isInput\"></gx-form-group-input><gx-form-group-textarea ng-if=\"::$ctrl.isTextarea\"></gx-form-group-textarea><gx-form-group-calendar ng-if=\"::$ctrl.isCalendar\"></gx-form-group-calendar><gx-form-group-select ng-if=\"::$ctrl.isSelect\"></gx-form-group-select><gx-form-group-dropdown ng-if=\"::$ctrl.isDropdown\"></gx-form-group-dropdown><gx-form-group-autocomplete ng-if=\"::$ctrl.isAutocomplete\"></gx-form-group-autocomplete><gx-form-group-switch ng-if=\"::$ctrl.isSwitch\"></gx-form-group-switch><gx-form-group-equation ng-if=\"::$ctrl.isEquation\"></gx-form-group-equation><div ng-if=\"::$ctrl.isCustom\"><ng-transclude></ng-transclude></div><span ng-repeat=\"feedbackMessage in $ctrl.feedbackMessages\" class=\"help-block\"><span>{{feedbackMessage.text}}</span></span><ng-transclude ng-transclude-slot=\"gxFormGroupValidator\" class=\"hide\"></ng-transclude></div>',\n        transclude: {\n            'gxFormGroupValidator': '?gxFormGroupValidator'\n        },\n        require: {\n            gxFormController: '^gxForm'\n        },\n        bindings: {\n            name: '@', // change to gxName\n            stereotype: '@', // change to gxStereotype\n            label: '@', // change to gxLabel\n            offLabel: '@', // change to gxFalseLabel\n            onLabel: '@', // change to gxTrueLabel\n            description: '@', // change to gxDescription\n            example: '@', // change to gxExample\n            mask: '@', // change to gxMask\n            model: '=', // change to gxModel\n            gxModelOptions: '=',\n            modelOffValue: '@', // change to gxFalseValue\n            modelOnValue: '@', // change to gxTrueValue\n            modelOptions: '=', // change to gxOptions\n            modelOptionAttributeKey: '@', // change to gxOptionKey\n            modelOptionAttributeValue: '@', // change to gxOptionValue\n            modelOptionAttributeBadge: '@', // change to gxOptionBadge\n            gxRows: '@',\n            gxCols: '@',\n            gxMinlength: '@',\n            gxMaxlength: '@',\n            gxMin: '@',\n            gxMax: '@',\n            gxPattern: '@',\n            gxTabindex: '@',\n            required: '=',\n            readonly: '@',\n            disabled: '=',\n            gxIgnoreTimezone: '@',\n            gxCalPlacement: '@',\n            gxOnSearch: '&',\n            gxOnCreate: '&',\n            gxOnUpdate: '&',\n            gxOnDelete: '&',\n            gxAttributeValueMatch: '@'\n        },\n        controller: [\n            '$timeout',\n            '$parse',\n            '$element',\n            '$scope',\n            'gxFormService',\n            '$log',\n            gxFormGroupController\n        ]\n    };\n\n    function gxFormGroupRun(uiMaskConfig) {\n        uiMaskConfig.clearOnBlur = false;\n    }\n\n    angular\n        .module('gux.formGroup', gxFormGroupDependencies)\n        .component('gxFormGroup', gxFormGroupComponent)\n        .run(['uiMaskConfig', gxFormGroupRun]);\n\n}(window.$, window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    function gxFormGroupValidatorController($element, gxFormService) {\n\n        var self = this;\n\n        self.$onInit = function() {\n\n            var feedbackType = !!self.gxType ? self.gxType : 'error';\n            if (feedbackType.toUpperCase().indexOf('ERROR') > -1) {\n                feedbackType = gxFormService.ERROR_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('WARNING') > -1) {\n                feedbackType = gxFormService.WARNING_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('SUCCESS') > -1) {\n                feedbackType = gxFormService.SUCCESS_FEEDBACK_TYPE;\n            } else if (feedbackType.toUpperCase().indexOf('INFO') > -1) {\n                feedbackType = gxFormService.INFO_FEEDBACK_TYPE;\n            }\n\n            var validatorKey = !!self.gxKey ? self.gxKey : 'default';\n\n            if (feedbackType != gxFormService.ERROR_FEEDBACK_TYPE && !self.gxFunction) {\n                throw new Error('You must define gx-function attribute for element ' + $('<span>').append($element).html());\n            }\n\n            if (!self.gxMessage) {\n                throw new Error('You must define gx-message attribute for element ' + $('<span>').append($element).html());\n            }\n\n            self.gxFormGroupController.registerValidator(feedbackType, validatorKey, self.gxForce, self.gxFunction, self.gxMessage, self.gxTimeout);\n        }\n    }\n\n    var gxFormGroupValidatorDependencies = [];\n\n    var gxFormGroupValidatorComponent = {\n        require: {\n            gxFormGroupController: '^gxFormGroup'\n        },\n        bindings: {\n            gxType: '@',\n            gxKey: '@',\n            gxForce: '@',\n            gxFunction: '@',\n            gxMessage: '@',\n            gxTimeout: '@'\n        },\n        controller: [\n            '$element',\n            'gxFormService',\n            gxFormGroupValidatorController\n        ]\n    };\n    angular\n        .module('gux.formGroupValidator', gxFormGroupValidatorDependencies)\n        .component('gxFormGroupValidator', gxFormGroupValidatorComponent);\n\n}(window.$, window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupTextareaController() {\n\n    }\n\n    var gxFormGroupTextareaDependencies = [];\n\n    var gxFormGroupTextareaComponent = {\n        template:'<textarea name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-rows=\"{{::$ctrl.parent.gxRows}}\" ng-attr-cols=\"{{::$ctrl.parent.gxCols}}\" ng-maxlength=\"::$ctrl.parent.gxMaxlength\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">\\n</textarea>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            gxFormGroupTextareaController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupTextarea', gxFormGroupTextareaDependencies)\n        .component('gxFormGroupTextarea', gxFormGroupTextareaComponent);\n\n}(window.angular));\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupSwitchController() {\n\n\t\tvar self = this;\n\n\t\tself.$onInit = function () {\n\n\t\t\tself.isOn = function () {\n\t\t\t\treturn !!self.parent\n\t\t\t\t\t&& !!self.parent.model\n\t\t\t\t\t&& (self.parent.model === true\n\t\t\t\t\t\t|| (!!self.parent.modelOnValue\n\t\t\t\t\t\t\t&& self.parent.model.toUpperCase() === self.parent.modelOnValue.toUpperCase()));\n\t\t\t}\n\t\t};\n\t}\n\n\tvar gxFormGroupSwitchDependencies = [\n\t];\n\n\tvar gxFormGroupSwitchComponent = {\n\t\ttemplate:'<div class=\"input-group gx-form-group-switch\"><label ng-if=\"!!$ctrl.parent.offLabel\">{{$ctrl.parent.offLabel}}</label> <label><input type=\"checkbox\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-true-value=\"\\'{{::$ctrl.parent.modelOnValue}}\\'\" ng-attr-ng-false-value=\"\\'{{::$ctrl.parent.modelOffValue}}\\'\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" ng-class=\"{\\'gx-form-group-switch-on\\': $ctrl.isOn()}\" autocomplete=\"off\"> <span></span></label> <label ng-if=\"!!$ctrl.parent.onLabel\">{{$ctrl.parent.onLabel}}</label></div>',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupSwitchController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.formGroupSwitch', gxFormGroupSwitchDependencies)\n\t\t.component('gxFormGroupSwitch', gxFormGroupSwitchComponent);\n\n} (window.angular));\n\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupSelectController($scope) {\n\n    }\n\n    var gxFormGroupSelectDependencies = [];\n\n    var gxFormGroupSelectComponent = {\n        template:'<select name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-options=\"modelOption[$ctrl.parent.modelOptionAttributeValue] for modelOption in $ctrl.parent.modelOptions track by modelOption[$ctrl.parent.modelOptionAttributeKey]\" ng-model=\"$ctrl.parent.model\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\"><option value>Selecione...</option></select>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            gxFormGroupSelectController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupSelect', gxFormGroupSelectDependencies)\n        .component('gxFormGroupSelect', gxFormGroupSelectComponent);\n\n}(window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupInputController() {\n\n    }\n\n    var gxFormGroupInputDependencies = [];\n\n    var gxFormGroupInputComponent = {\n        template:'<input type=\"{{::$ctrl.parent.stereotype}}\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-minlength=\"::$ctrl.parent.gxMinlength\" ng-maxlength=\"::$ctrl.parent.gxMaxlength\" ng-pattern=\"::$ctrl.parent.gxPattern\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            gxFormGroupInputController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupInput', gxFormGroupInputDependencies)\n        .component('gxFormGroupInput', gxFormGroupInputComponent);\n\n}(window.angular));\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupInputNumberController() {\n\n\t}\n\n\tvar gxFormGroupInputNumberDependencies = [\n\t];\n\n\tvar gxFormGroupInputNumberComponent = {\n\t\ttemplate:'<input type=\"{{::$ctrl.parent.stereotype}}\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupInputNumberController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.FormGroupInputNumber', gxFormGroupInputNumberDependencies)\n\t\t.component('gxFormGroupInputNumber', gxFormGroupInputNumberComponent);\n\n} (window.angular));\n\n(function (angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupInputCurrencyController(parent, ngModelController) {\n\t\tconsole.log(ngModelController);\n\t}\n\n\tvar gxFormGroupInputCurrencyDependencies = [\n\t];\n\n\tvar gxFormGroupInputCurrencyComponent = {\n\t\ttemplate:'<input type=\"number\" name=\"{{::$ctrl.parent.elementName}}\" ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.parent.model\" ng-model-options=\"!!$ctrl.parent.gxModelOptions ? $ctrl.parent.gxModelOptions : {updateOn: \\'default\\'}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\">',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup',\n\t\t\tngModelController: '?ngModel'\n\t\t},\n\t\tcontroller: [\n\t\t\tgxFormGroupInputCurrencyController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.FormGroupInputCurrency', gxFormGroupInputCurrencyDependencies)\n\t\t.component('gxFormGroupInputCurrency', gxFormGroupInputCurrencyComponent);\n\n} (window.angular));\n\n(function (MathQuill, angular) {\n\n\t'use strict';\n\n\tfunction gxFormGroupEquationController($element, $attrs, $parse, $scope) {\n\t\t\n\t\tvar self = this;\n\n\t\tself.$onInit = function() {\n\t\t\tvar mathFieldElement = $($element).find('.form-control')[0];\n\t\t\tvar MQ = MathQuill.getInterface(2);\n\t\t\tvar mathField = MQ.MathField(mathFieldElement, {\n\t\t\t\tspaceBehavesLikeTab: true,\n\t\t\t\thandlers: {\n\t\t\t\t\tedit: function () {\n\t\t\t\t\t\tself.parent.setModel(mathField.latex());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!!self.parent.model) {\n\t\t\t\tmathField.latex(self.parent.model);\n\t\t\t}\n\t\t};\n\t}\n\n\tvar gxFormGroupEquationDependencies = [];\n\n\tvar gxFormGroupEquationComponent = {\n\t\ttemplate:'<div><input type=\"hidden\" name=\"{{::$ctrl.parent.elementName}}\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-required=\"$ctrl.parent.required\"><div class=\"form-control\"></div></div>',\n\t\trequire: {\n\t\t\tparent: '^gxFormGroup'\n\t\t},\n\t\tcontroller: [\n\t\t\t'$element',\n\t\t\t'$attrs',\n\t\t\t'$parse',\n\t\t\t'$scope',\n\t\t\tgxFormGroupEquationController\n\t\t]\n\t};\n\n\tangular\n\t\t.module('gux.formGroupEquation', gxFormGroupEquationDependencies)\n\t\t.component('gxFormGroupEquation', gxFormGroupEquationComponent);\n\n} (window.MathQuill, window.angular));\n\n(function(angular) {\n\n    'use strict';\n\n    function gxFormGroupDropdownController($scope, $element) {\n\n        var self = this;\n\n        self.showBadge = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge;\n        };\n    }\n\n    var gxFormGroupDropdownDependencies = [];\n\n    var gxFormGroupDropdownComponent = {\n        template:'<div class=\"dropdown gx-form-group-dropdown\"><input type=\"hidden\" name=\"{{::$ctrl.parent.elementName}}\" ng-model=\"$ctrl.parent.model\" ng-attr-ng-required=\"$ctrl.parent.required\"> <button type=\"button\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" data-toggle=\"dropdown\" class=\"btn btn-default dropdown-toggle form-control\" ng-class=\"{\\'disabled\\': $ctrl.parent.disabled}\">{{$ctrl.parent.model[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"$ctrl.showBadge()\" class=\"badge input-badge\">{{$ctrl.parent.getBadgeValue($ctrl.parent.model)}}</span></button> <span class=\"form-control-feedback\"><i class=\"fa fa-caret-down fa-lg\"></i></span><ul ng-if=\"::!$ctrl.parent.readonly\" class=\"form-control dropdown-menu\"><li ng-repeat=\"modelOption in $ctrl.parent.modelOptions track by $index\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.parent.setModel(modelOption)\">{{modelOption[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"::!!$ctrl.parent.modelOptionAttributeBadge\" class=\"badge pull-right m-r-xs\" style=\"margin-top: 1px\">{{$ctrl.parent.getBadgeValue(modelOption)}}</span></a></li></ul></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            gxFormGroupDropdownController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupDropdown', gxFormGroupDropdownDependencies)\n        .component('gxFormGroupDropdown', gxFormGroupDropdownComponent);\n\n}(window.angular));\n(function(moment, jstz, angular) {\n\n    'use strict';\n\n    function gxFormGroupCalendarController($element, $scope, GX_FORM_GROUP_CONFIG) {\n\n        var self = this;\n\n        var ignoreTimezone = !!GX_FORM_GROUP_CONFIG.date.ignoreTimezone;\n\n        self.$onInit = function() {\n\n            var datepickerElement = $element.find('.input-group.date');\n            var viewMode = null;\n            var format = null;\n            var language = navigator.language || navigator.userLanguage;\n\n            if (self.parent.stereotype === 'date-time') {\n                viewMode = 'days';\n                self.parent.mask = '?99/99/9999 99:99';\n                format = 'DD/MM/YYYY HH:mm';\n            } else if (self.parent.stereotype === 'date') {\n                viewMode = 'days';\n                self.parent.mask = '?99/99/9999';\n                format = 'DD/MM/YYYY';\n            } else if (self.parent.stereotype === 'date-month') {\n                viewMode = 'months';\n                self.parent.mask = '?99/9999';\n                format = 'MM/YYYY';\n            } else if (self.parent.stereotype === 'date-year') {\n                viewMode = 'years';\n                self.parent.mask = '?9999';\n                format = 'YYYY';\n            }\n\n            self.formattedDate = null;\n\n            $scope.$watch('$ctrl.parent.model', function(value) {\n                if (!!value) {\n                    var modelValue = null;\n                    var viewValue = null;\n                    if (ignoreTimezone) {\n                        modelValue = moment.utc(value);\n                        viewValue = moment.utc(self.formattedDate, format);\n                    } else {\n                        modelValue = moment(value);\n                        viewValue = moment(self.formattedDate, format);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        self.formattedDate = modelValue.format(format);\n                    }\n                } else {\n                    self.formattedDate = null;\n                }\n            });\n\n            $scope.$watch('$ctrl.formattedDate', function(value) {\n                if (!!value) {\n                    var viewValue = null;\n                    var modelValue = null;\n                    if (ignoreTimezone) {\n                        viewValue = moment.utc(value, format);\n                        modelValue = moment.utc(self.parent.model);\n                    } else {\n                        viewValue = moment(value, format);\n                        modelValue = moment(self.parent.model);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        if (ignoreTimezone) {\n                            self.parent.model = viewValue.format('YYYY-MM-DDTHH:mm:ss');\n                        } else {\n                            self.parent.model = viewValue.toISOString();\n                        }\n                    }\n                } else {\n                    self.parent.model = null;\n                }\n            });\n\n            var datepicker = datepickerElement\n                .datetimepicker({\n                    locale: language,\n                    viewMode: viewMode,\n                    format: format,\n                    useStrict: true,\n                    useCurrent: false,\n                    allowInputToggle: true,\n                    showTodayButton: true,\n                    showClear: true,\n                    icons: {\n                        \"clear\": \"glyphicon glyphicon-trash\",\n                        \"close\": \"glyphicon glyphicon-remove\",\n                        \"date\": \"fa fa-calendar\",\n                        \"down\": \"glyphicon glyphicon-chevron-down\",\n                        \"next\": \"glyphicon glyphicon-chevron-right\",\n                        \"previous\": \"glyphicon glyphicon-chevron-left\",\n                        \"time\": \"glyphicon glyphicon-time\",\n                        \"today\": \"glyphicon glyphicon-screenshot\",\n                        \"up\": \"glyphicon glyphicon-chevron-up\",\n                    },\n                    tooltips: {\n                        today: 'Hoje',\n                        clear: 'Limpar',\n                        close: 'Fechar',\n                        selectMonth: 'Mês',\n                        prevMonth: 'Mês anterior',\n                        nextMonth: 'Próximo mês',\n                        selectYear: 'Ano',\n                        prevYear: 'Ano anterior',\n                        nextYear: 'Próximo ano',\n                        selectDecade: 'Década',\n                        prevDecade: 'Década anterior',\n                        nextDecade: 'Próxima década',\n                        prevCentury: 'Século anterior',\n                        nextCentury: 'Próximo século'\n                    }\n                })\n                .data('DateTimePicker');\n\n            datepicker.parseInputDate(function(value) {\n                var result = undefined;\n                if (!!value) {\n                    result = moment.utc(value, format);\n                }\n                return result;\n            });\n\n            datepickerElement.on('dp.change', function(event) {\n                if (!!event.date) {\n                    var viewValue = event.date;\n                    var modelValue = null;\n                    if (ignoreTimezone) {\n                        modelValue = moment.utc(self.parent.model);\n                    } else {\n                        modelValue = moment(self.parent.model);\n                    }\n                    if (!modelValue.isSame(viewValue)) {\n                        if (ignoreTimezone) {\n                            self.parent.model = viewValue.format('YYYY-MM-DDTHH:mm:ss');\n                        } else {\n                            self.parent.model = viewValue.toISOString();\n                        }\n                        self.formattedDate = viewValue.format(format);\n                    }\n                } else {\n                    self.parent.model = null;\n                }\n            });\n        }\n    }\n\n    var gxFormGroupCalendarDependencies = [];\n\n    var gxFormGroupCalendarComponent = {\n        template:'<div class=\"input-group date\"><input type=\"text\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ui-mask=\"{{::$ctrl.parent.mask}}\" ui-mask-placeholder ng-model=\"$ctrl.formattedDate\" ng-model-options=\"{ updateOn: \\'blur\\' }\" ng-attr-tabindex=\"{{$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\"> <span class=\"input-group-addon\"><span class=\"fa fa-calendar\"></span></span></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$element',\n            '$scope',\n            'GX_FORM_GROUP_CONFIG',\n            gxFormGroupCalendarController\n        ]\n    };\n\n    function gxFormGroupCalendarModelDirective() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: ['^gxFormGroup', 'ngModel'],\n            link: gxFormGroupCalendarModelDirectiveLink\n        }\n    }\n\n    angular\n        .module('gux.formGroupCalendar', gxFormGroupCalendarDependencies)\n        .component('gxFormGroupCalendar', gxFormGroupCalendarComponent);\n\n}(window.moment, window.jstz, window.angular));\n(function($, _, angular) {\n\n    'use strict';\n\n    function hideDropdownMenu($element) {\n        // $element.find('.dropdown-menu').dropdown('toggle');\n        $element.find('.dropdown-menu');\n        //$element.find('.dropdown-menu').css('display', 'none');\n    };\n\n    function setViewMode(self) {\n        self.viewMode = true;\n        self.editMode = false;\n    }\n\n    function setEditMode(self) {\n        self.viewMode = false;\n        self.editMode = true;\n    }\n\n    function refresh(self, newValue) {\n\n        if (newValue) {\n\n            if (self.isSearchable) {\n                self.modelFilteredOptions = self.parent.modelOptions.slice();\n            } else {\n                var fullMatch = [];\n                var initialMatch = [];\n                var parcialMatch = [];\n                for (var i = 0; i < self.parent.modelOptions.length; i++) {\n                    var modelOption = self.parent.modelOptions[i];\n                    var modelOptionString = String(modelOption[self.parent.modelOptionAttributeValue]).toUpperCase();\n                    var modelAutocompleteString = !!self.modelAutocomplete ? self.modelAutocomplete.toUpperCase() : null;\n                    if (modelOptionString === modelAutocompleteString) {\n                        fullMatch.push(modelOption);\n                    } else if (modelOptionString.indexOf(modelAutocompleteString) == 0) {\n                        initialMatch.push(modelOption);\n                    } else if (modelOptionString.indexOf(modelAutocompleteString) > -1) {\n                        parcialMatch.push(modelOption);\n                    }\n                }\n                self.modelFilteredOptions = fullMatch.concat(initialMatch).concat(parcialMatch);\n            }\n            // Performance problem in very large arrays\n            if (self.modelFilteredOptions.length > 50) {\n                self.modelFilteredOptions = self.modelFilteredOptions.slice(0, 50);\n            }\n        } else if (self.parent.modelOptions && self.parent.modelOptions.length > 0) {\n            // Performance problem in very large arrays\n            // self.modelFilteredOptions = angular.copy(self.parent.modelOptions);\n            self.modelFilteredOptions = self.parent.modelOptions.slice(0, 50);\n        } else {\n            self.modelFilteredOptions = [];\n        }\n\n        if (self.modelFilteredOptions.length === 0) {\n            self.noDataFound = true;\n            self.itemFound = false;\n        } else if (self.modelFilteredOptions.length === 1 &&\n            !!newValue &&\n            self.modelFilteredOptions[0][self.parent.modelOptionAttributeValue].toUpperCase() === self.modelAutocomplete.toUpperCase()) {\n            self.noDataFound = false;\n            self.itemFound = true;\n        } else {\n            self.noDataFound = false;\n            var itemFoundArray = [];\n            if (newValue) {\n                itemFoundArray = _.filter(self.modelFilteredOptions, function(modelOption) {\n                    return String(modelOption[self.parent.modelOptionAttributeValue]).toUpperCase() === newValue.toUpperCase();\n                });\n            }\n            if (itemFoundArray.length === 1) {\n                self.itemFound = true;\n            } else {\n                self.itemFound = false;\n            }\n        }\n    }\n\n    function syncModelAutocomplete(self) {\n        if (self.parent.model) {\n            self.modelAutocomplete = self.parent.model[self.parent.modelOptionAttributeValue];\n        } else {\n            self.modelAutocomplete = null;\n        }\n    }\n\n    function handleCreateSuccess(self, createdObject) {\n        self.parent.setModel(createdObject);\n        self.parent.modelOptions.push(createdObject);\n        refresh(self, createdObject[self.parent.modelOptionAttributeValue]);\n        hideDropdownMenu(self.$element)\n        setViewMode(self);\n        self.feedbackMessage = \"item criado\";\n        //self.addSuccess('create', 'Novo item criado com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleCreateError(self) {\n        syncModelAutocomplete(self);\n        //controller.addError('update', 'Erro ao criar novo item.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleUpdateSucess(self, updatedObject) {\n        self.parent.setModel(updatedObject);\n        refresh(self, updatedObject[self.parent.modelOptionAttributeValue]);\n        setViewMode(self);\n        //self.addSuccess('update', 'Item atualizado com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleUpdateError(self, oldValue) {\n        self.parent.model[self.parent.modelOptionAttributeValue] = oldValue;\n        syncModelAutocomplete(self);\n        //self.parent.addError('update', 'Erro ao atualizar item selecionado.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleDeleteSuccess(self, deletedObject) {\n        var index = self.parent.modelOptions.indexOf(deletedObject);\n        if (index > -1) {\n            self.parent.modelOptions.splice(index, 1);\n        }\n        if (!self.parent.model) {\n            syncModelAutocomplete(self);\n            refresh(self, null);\n        } else if (self.parent.model == deletedObject) {\n            self.parent.setModel(null);\n            syncModelAutocomplete(self);\n            refresh(self, null);\n        } else {\n            refresh(self, self.parent.model[self.parent.modelOptionAttributeValue]);\n        }\n        setViewMode(self);\n        //self.addSuccess('update', 'Item removido com sucesso', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function handleDeleteError(self) {\n        //syncModelAutocomplete(self);\n        //controller.addError('update', 'Erro ao remover item.', TEMPORARY_MESSAGE_TIMEOUT);\n    }\n\n    function gxFormGroupAutocompleteController($scope, $element, gxFormService) {\n\n        var defaultGxModelOptions = {\n            updateOn: 'default blur',\n            debounce: {\n                'default': 0,\n                'blur': 0\n            }\n        }\n\n        var searchableGxModelOptions = {\n            updateOn: 'default blur',\n            debounce: {\n                'default': 500,\n                'blur': 0\n            }\n        };\n\n        var self = this;\n        self.$element = $element;\n        self.inputElement = self.$element.find('input');\n        self.viewMode = true;\n        self.editMode = false;\n        self.isSearchable = false;\n        self.isCreatable = false;\n        self.isUpdateable = false;\n        self.isDeletable = false;\n        self.gxModelOptions = defaultGxModelOptions;\n        self.modelAutocomplete = null;\n        self.modelFilteredOptions = null;\n        self.isLoading = false;\n        self.noDataFound = false;\n        self.itemFound = false;\n        self.feedbackMessage = undefined;\n\n        self.showBadge = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge &&\n                !!self.modelAutocomplete &&\n                self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];\n        };\n\n        self.selectOption = function(modelOption) {\n            self.parent.setModel(modelOption);\n            hideDropdownMenu($element);\n        };\n\n        self.inputElement.on('focus', function(event) {\n            $element.find('.dropdown-menu').dropdown('toggle');\n        });\n\n        self.inputElement.on('keydown', function(event) {\n            if (event.keyCode === 40) { // down arrow\n                event.preventDefault();\n                $element.find('li:first a:first').focus();\n            }\n        });\n\n        self.inputElement.on('blur', function(event) {\n            if (!$.contains($element[0], event.relatedTarget)) {\n                syncModelAutocomplete(self);\n                hideDropdownMenu($element);\n            }\n        });\n\n        self.create = function(event) {\n            var result = self.parent.gxOnCreate()(self.modelAutocomplete)\n            if (!!result) {\n                if (!!result.then) {\n                    result\n                        .then(function(result) {\n                            handleCreateSuccess(self, result);\n                        }).catch(function(error) {\n                            handleCreateError(self);\n                        });\n                } else {\n                    handleCreateSuccess(self, result);\n                }\n            } else {\n                handleCreateError(self);\n            }\n        };\n\n        self.isEditDisabled = function() {\n            return self.parent.disabled ||\n                !(!!self.parent &&\n                    !!self.parent.model);\n            /*&& !!self.parent.modelOptionAttributeBadge\n            && !! self.modelAutocomplete\n            && self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];*/\n        };\n\n        self.edit = function() {\n            setEditMode(self);\n            //controller.removeSuccess('create');\n            //controller.removeSuccess('update');\n            //controller.removeWarning('edit');\n            //controller.removeError('error');\n            //controller.addInfo('edit', 'Após a edição, cancele ou confirme a operação');\n            self.inputElement.focus();\n        };\n\n        self.isUpdateDisabled = function() {\n            return !!self.parent &&\n                !!self.parent.model &&\n                !!self.parent.modelOptionAttributeBadge &&\n                !!self.modelAutocomplete &&\n                self.modelAutocomplete === self.parent.model[self.parent.modelOptionAttributeValue];\n        };\n\n        self.update = function(event) {\n            //controller.removeInfo('edit');\n            //controller.removeWarning('edit');\n            var oldValue = self.parent.model[self.parent.modelOptionAttributeValue];\n            self.parent.model[self.parent.modelOptionAttributeValue] = self.modelAutocomplete;\n            var result = self.parent.gxOnUpdate()(self.parent.model)\n            if (result) {\n                if (!!result.then) {\n                    result\n                        .then(function(result) {\n                            handleUpdateSucess(self, result);\n                        })\n                        .catch(function(error) {\n                            handleUpdateError(self, oldValue);\n                        });\n                } else {\n                    handleUpdateSucess(self, result);\n                }\n            } else {\n                handleUpdateError(self, oldValue);\n            }\n        };\n\n        self.cancel = function() {\n            //controller.removeInfo('edit');\n            syncModelAutocomplete(self);\n            setViewMode(self);\n        };\n\n        self.delete = function(selectedOption, event) {\n            //controller.removeInfo('edit');\n            //controller.removeWarning('edit');\n            try {\n                var result = self.parent.gxOnDelete()(selectedOption)\n                if (!!result && !!result.then) {\n                    result\n                        .then(function(result) {\n                            handleDeleteSuccess(self, selectedOption);\n                        })\n                        .catch(function(error) {\n                            handleDeleteError(self);\n                        });\n                } else {\n                    handleDeleteSuccess(self, selectedOption);\n                }\n            } catch (error) {\n                handleDeleteError(self);\n            }\n        };\n\n        self.showBeginSerach = function() {\n            var result = self.isSearchable && !self.modelAutocomplete;\n            if (result) {\n                self.noDataFound = false;\n            }\n            return result;\n        };\n\n        self.showNoDataFound = function() {\n            return !self.isCreatable && self.noDataFound;\n        };\n\n        self.$onInit = function() {\n\n            self.isSearchable = !self.parent.modelOptions && !!self.parent.gxOnSearch();\n            self.isCreatable = !!self.parent.gxOnCreate();\n            self.isUpdateable = !!self.parent.gxOnUpdate();\n            self.isDeletable = !!self.parent.gxOnDelete();\n\n            if (self.isSearchable) {\n                self.gxModelOptions = searchableGxModelOptions;\n                self.parent.modelOptions = [];\n                //self.parent.registerValidator(gxFormService.INFO_FEEDBACK_TYPE);\n            } else {\n                $scope.$watch('$ctrl.parent.modelOptions', function(newValue, oldValue) {\n                    if (self.parent.model) {\n                        refresh(self, self.parent.model[self.parent.modelOptionAttributeValue]);\n                    } else {\n                        refresh(self, null);\n                    }\n                });\n            }\n\n            /*self.registerValidator = function (feedbackType, validatorKey, forceValidation, validatorFunction, validatorMessage, validatorTimeout) {\n\t\t\tvar validatorDefinition = {\n\t\t\t\ttype: feedbackType,\n\t\t\t\tkey: validatorKey,\n\t\t\t\tvalidatorFunction: validatorFunction,\n\t\t\t\tforce: forceValidation,\n\t\t\t\tmessage: validatorMessage,\n\t\t\t\ttimeout: validatorTimeout\n\t\t\t}\n\t\t\tself.validatorsDefinitions[feedbackType][validatorKey] = validatorDefinition;\n\t\t};*/\n            function isMessage() {\n                return !!self.feedbackMessage;\n            }\n\n            self.parent.registerValidator(gxFormService.WARNING_FEEDBACK_TYPE, 'autocomplete', isMessage, false, self.feedbackMessage);\n\n            $scope.$watch('$ctrl.parent.model.' + self.parent.modelOptionAttributeValue, function(newValue, oldValue) {\n                syncModelAutocomplete(self);\n            });\n\n            $scope.$watch('$ctrl.modelAutocomplete', function(newValue, oldValue) {\n                if (self.viewMode) {\n                    if (newValue) {\n                        if (self.isSearchable) {\n                            self.isLoading = true;\n                            self.parent.gxOnSearch()(newValue)\n                                .then(function(modelOptions) {\n                                    self.parent.modelOptions = modelOptions;\n                                    refresh(self, newValue);\n                                    self.isLoading = false;\n                                });\n                        } else {\n                            self.isLoading = true;\n                            refresh(self, newValue);\n                            self.isLoading = false;\n                        }\n                    } else {\n                        self.parent.setModel(null);\n                        if (self.isSearchable) {\n                            self.modelFilteredOptions = [];\n                        } else {\n                            refresh(self, newValue);\n                        }\n                    }\n                }\n            });\n        };\n    }\n\n    var gxFormGroupAutocompleteDependencies = [];\n\n    var gxFormGroupAutocompleteComponent = {\n        template:'<div class=\"dropdown gx-form-group-autocomplete\"><div ng-class=\"{\\'input-group\\': $ctrl.isUpdateable}\"><div style=\"position: relative\"><span ng-if=\"$ctrl.isSearchable && $ctrl.isLoading\" class=\"form-control-feedback\"><i class=\"fa fa-spinner fa-pulse\"></i></span> <span ng-if=\"!$ctrl.isLoading && $ctrl.showBadge()\" class=\"badge input-badge\">{{$ctrl.parent.getBadgeValue($ctrl.parent.model)}}</span> <input type=\"text\" name=\"{{::$ctrl.parent.elementName}}\" ng-attr-ng-required=\"$ctrl.parent.required\" ng-attr-placeholder=\"{{::$ctrl.parent.example}}\" ng-attr-ui-mask=\"{{::$ctrl.parent.mask}}\" ng-attr-ui-mask-placeholder=\"{{::$ctrl.parent.example || $ctrl.parent.mask ? \\'\\' : undefined}}\" ng-model=\"$ctrl.modelAutocomplete\" ng-model-options=\"$ctrl.gxModelOptions\" ng-attr-minlength=\"{{::$ctrl.parent.gxMinlength}}\" ng-attr-maxlength=\"{{::$ctrl.parent.gxMaxlength}}\" ng-attr-min=\"{{::$ctrl.parent.gxMin}}\" ng-attr-max=\"{{::$ctrl.parent.gxMax}}\" ng-attr-tabindex=\"{{::$ctrl.parent.gxTabindex}}\" ng-attr-ng-readonly=\"{{::$ctrl.parent.readonly}}\" ng-attr-ng-disabled=\"$ctrl.parent.disabled\" class=\"form-control\" autocomplete=\"off\"></div><div class=\"input-group-btn\" ng-if=\"$ctrl.isUpdateable\"><button type=\"button\" ng-if=\"$ctrl.viewMode\" ng-click=\"$ctrl.edit($event)\" ng-disabled=\"$ctrl.isEditDisabled()\" gx-tooltip=\"Editar item selecionado\" class=\"btn btn-default\"><i class=\"fa fa-pencil\"></i></button> <button type=\"button\" ng-if=\"$ctrl.editMode\" ng-click=\"$ctrl.cancel($event)\" gx-tooltip=\"Cancelar edição\" class=\"btn btn-default\"><i class=\"fa fa-ban\"></i></button> <button type=\"button\" ng-if=\"$ctrl.editMode\" ng-click=\"$ctrl.update($event)\" ng-disabled=\"$ctrl.isUpdateDisabled()\" gx-tooltip=\"{{$ctrl.isUpdateDisabled() ? \\'Altere o valor para habilitar a gravação\\' : \\'Gravar item editado\\'}}\" class=\"btn btn-default\"><i class=\"fa fa-save\"></i></button></div></div><ul ng-if=\"$ctrl.viewMode\" class=\"form-control dropdown-menu\" role=\"menu\" data-toggle=\"dropdown\"><li ng-repeat=\"modelOption in $ctrl.modelFilteredOptions\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.selectOption(modelOption)\">{{modelOption[$ctrl.parent.modelOptionAttributeValue]}} <span ng-if=\"$ctrl.isDeletable\" ng-click=\"$ctrl.delete(modelOption, $event); $event.stopPropagation();\" class=\"pull-right\"><i class=\"fa fa-remove\"></i></span> <span ng-if=\"!!$ctrl.parent.modelOptionAttributeBadge\" class=\"badge pull-right m-r-xs\" style=\"margin-top: 1px\">{{$ctrl.parent.getBadgeValue(modelOption)}}</span></a></li><li ng-if=\"$ctrl.showBeginSerach()\"><a>Digite para pesquisar.</a></li><li ng-if=\"$ctrl.showNoDataFound()\"><a>Nenhum item encontrado.</a></li><li ng-if=\"$ctrl.isCreatable && !$ctrl.itemFound && !!$ctrl.modelAutocomplete\"><a href=\"javascript:void(0)\" ng-click=\"$ctrl.create($event)\" gx-tooltip=\"Criar novo item\"><i class=\"fa fa-plus\"></i>&nbsp;&nbsp; <strong>{{$ctrl.modelAutocomplete}}</strong>&nbsp;&nbsp; <span class=\"text-muted\">(Novo)</span></a></li></ul></div>',\n        require: {\n            parent: '^gxFormGroup'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            'gxFormService',\n            gxFormGroupAutocompleteController\n        ]\n    };\n\n    angular\n        .module('gux.formGroupAutocomplete', gxFormGroupAutocompleteDependencies)\n        .component('gxFormGroupAutocomplete', gxFormGroupAutocompleteComponent);\n\n}(window.$, window._, window.angular));\n(function(angular) {\n\n    'use strict';\n\n    function gxFormButtonController($parse, $state, $element, $scope, gxAppService, gxFormService) {\n\n        var self = this;\n        self.type = undefined;\n        self.buttonClass = undefined;\n        self.iconClass = undefined;\n        self.label = undefined;\n\n        if (self.stereotype === 'post') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-success\";\n            self.iconClass = \"fa-save\";\n            self.label = \"Gravar\";\n        } else if (self.stereotype === 'put') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-success\";\n            self.iconClass = \"fa-save\";\n            self.label = \"Atualizar\";\n        } else if (self.stereotype === 'get') {\n            self.type = \"submit\";\n            self.buttonClass = \"btn-primary\";\n            self.iconClass = \"fa-search\";\n            self.label = \"Pesquisar\";\n        } else if (self.stereotype === 'clean') {\n            self.type = \"reset\";\n            self.buttonClass = \"btn-default\";\n            self.iconClass = \"fa-eraser\";\n            self.label = \"Limpar\";\n        } else if (self.stereotype === 'cancel') {\n            self.type = \"button\";\n            self.buttonClass = \"\";\n            self.iconClass = \"fa-ban\";\n            self.label = \"Cancelar\";\n        } else if (self.stereotype === 'back') {\n            self.type = \"button\";\n            self.buttonClass = \"btn-default\";\n            self.iconClass = \"fa-long-arrow-left\";\n            self.label = \"Voltar\";\n        }\n\n        self.show = function() {\n\n            var result = true;\n\n            var formName = $element.closest('form').attr('name');\n            if (formName == '{{$ctrl.gxName}}') {\n                return result;\n            }\n\n            try {\n                if (self.stereotype === 'cancel' && gxFormService.isPristine(formName)) {\n                    result = false;\n                } else if (self.stereotype === 'back' && !gxFormService.isPristine(formName)) {\n                    result = false;\n                }\n            } catch (exception) {\n                if (exception.constructor.name != 'ngFormControllerNotLoaded') {\n                    throw exception;\n                }\n            }\n\n            return result;\n        }\n\n        self.disabled = function() {\n\n            var result = false;\n\n            var lastState = gxAppService.getLastState();\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!lastState || !lastState.name) {\n                    result = true;\n                }\n            }\n\n            return result;\n        }\n\n        self.click = function() {\n\n            var result = undefined;\n\n            var lastState = gxAppService.getLastState();\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!self.go && !!lastState && !!lastState.name) {\n                    self.go = lastState.name;\n                }\n            }\n\n            if (self.stereotype === 'cancel' ||\n                self.stereotype === 'back') {\n                if (!!self.go) {\n                    if (!result) {\n                        return $state.go(self.go);\n                    } else {\n                        return $state.go(self.go);\n                    }\n                }\n            }\n\n            var formName = $element.closest('form').attr('name');\n            if (formName == '{{$ctrl.gxName}}') {\n                return result;\n            }\n\n            if (!gxFormService.isForce(formName) && !gxFormService.isValid(formName)) {\n                return result;\n            }\n\n            if (!!self.onClick) {\n                result = $parse(self.onClick)($scope.$parent);\n            }\n\n            if (!!self.go) {\n                if (!result) {\n                    result = $state.go(self.go);\n                } else {\n                    $state.go(self.go);\n                }\n            }\n\n            if (self.stereotype === 'clean') {\n                gxFormService.setPristine(formName);\n            }\n\n            return result;\n        };\n    };\n\n    var gxFormButtonDependencies = [\n        'ui.router'\n    ];\n\n    var gxFormButtonComponent = {\n        template: '<div><button ng-attr-type=\"{{::$ctrl.type}}\" ng-if=\"$ctrl.show()\" ng-disabled=\"$ctrl.disabled()\" ng-click=\"$ctrl.click($event)\" class=\"btn btn-addon {{::$ctrl.buttonClass}}\"><i class=\"fa {{::$ctrl.iconClass}}\"></i>{{::$ctrl.label}}</button></div>',\n        bindings: {\n            stereotype: '@',\n            go: '@',\n            onClick: '='\n        },\n        controller: [\n            '$parse',\n            '$state',\n            '$element',\n            '$scope',\n            'gxAppService',\n            'gxFormService',\n            gxFormButtonController\n        ]\n    };\n\n    angular\n        .module('gux.formButton', gxFormButtonDependencies)\n        .component('gxFormButton', gxFormButtonComponent);\n\n}(window.angular));\n(function($, angular) {\n\n    'use strict';\n\n    function showMessage(scope, message) {\n        scope.$broadcast(\"gxApp.feedback\", message);\n    }\n\n    function showInfo(scope, message, title) {\n        showMessage(scope, {\n            type: 'info',\n            title: !title ? 'Informação' : title,\n            body: message\n        });\n    }\n\n    function showSuccess(scope, message, title) {\n        showMessage(scope, {\n            type: 'success',\n            title: !title ? 'Sucesso' : title,\n            body: message\n        });\n    }\n\n    function showWarning(scope, message, title) {\n        showMessage(scope, {\n            type: 'warning',\n            title: !title ? 'Atenção' : title,\n            body: message\n        });\n    }\n\n    function showError(scope, message, title) {\n        showMessage(scope, {\n            type: 'error',\n            title: !title ? 'Erro' : title,\n            body: message\n        });\n    };\n\n    function gxAppConfig($provide, cfpLoadingBarProvider, locationProvider, GX_STATE_CONFIG, stateHelperProvider, $mdThemingProvider) {\n\n        var isIE = !!navigator.userAgent.match(/MSIE/i);\n        locationProvider.html5Mode(!isIE);\n        stateHelperProvider.state(GX_STATE_CONFIG);\n        cfpLoadingBarProvider.includeSpinner = true;\n        cfpLoadingBarProvider.spinnerTemplate = '<div class=\"loading\"><img class=\"loading-image\" src=\"images/gx-app-loading.gif\" alt=\"Carrengando...\" /></div>';\n\n        $provide.decorator(\"$exceptionHandler\", ['$injector', '$log', '$delegate', function($injector, $log, $delegate) {\n            return function(exception, cause) {\n                var $rootScope = $injector.get(\"$rootScope\");\n                if (exception.type === 'error') {\n                    showError($rootScope, exception.message, exception.title);\n                } else if (exception.type === 'warning') {\n                    showWarning($rootScope, exception.message, exception.title);\n                } else {\n                    $delegate(exception, cause);\n                }\n            };\n        }]);\n\n        $mdThemingProvider.theme('default')\n            .primaryPalette('blue', {\n                'default': '400', // by default use shade 400 from the pink palette for primary intentions\n                'hue-1': '100', // use shade 100 for the <code>md-hue-1</code> class\n                'hue-2': '600', // use shade 600 for the <code>md-hue-2</code> class\n                'hue-3': 'A100' // use shade A100 for the <code>md-hue-3</code> class\n            })\n            // If you specify less than all of the keys, it will inherit from the\n            // default shades\n            .accentPalette('blue-grey', {\n                'default': '200' // use shade 200 for default, and keep all other shades the same\n            });\n\n    }\n\n    function initState($state, state) {\n        if (state.abstract === true) {\n            if (!state.data) {\n                state.data = {}\n            }\n            if (!state.data.expanded) {\n                state.data.expanded = $state.includes(state.name);\n            }\n        }\n    }\n\n    function getLink(state) {\n        var link = undefined;\n        if (!!state.data && !!state.data.tab) {\n            link = state.name;\n        } else if (!!state.data && !!state.data.menu && !!state.data.menu.link) {\n            link = state.data.menu.link;\n        } else if (!(state.abstract === true)) {\n            link = state.name;\n        }\n        return link;\n    }\n\n    function isToDisplayMenu(state) {\n        return !state.data || !state.data.menu || state.data.menu.display == undefined || state.data.menu.display === true;\n    }\n\n    function getMenuIconClass(state) {\n        var iconClass = undefined;\n        if (!!state.data && !!state.data.menu && !!state.data.menu.iconClass) {\n            iconClass = state.data.menu.iconClass;\n        }\n        return iconClass;\n    }\n\n    function getMenuTitle(state) {\n        var title = 'unknown';\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.title) {\n                title = state.data.tab.title;\n            } else if (!!state.data.menu && !!state.data.menu.title) {\n                title = state.data.menu.title;\n            } else if (!!state.data.masthead && !!state.data.masthead.title) {\n                title = state.data.masthead.title;\n            }\n        }\n        return title;\n    }\n\n    function getMenuDescription(state) {\n        var description = undefined;\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.description) {\n                description = state.data.tab.description;\n            } else if (!!state.data.menu && !!state.data.menu.description) {\n                description = state.data.menu.description;\n            } else if (!!state.data.masthead && !!state.data.masthead.description) {\n                description = state.data.masthead.description;\n            }\n        }\n        return description;\n    }\n\n    /*function isStateActive($state, state) {\n    \treturn $state.includes(state.name);\n    }*/\n\n    function onMenuClick(state) {\n        if (state.abstract === true) {\n            state.data.expanded = !state.data.expanded;\n        }\n    }\n\n    function isToDisplayMasthead($state) {\n        return !!$state.current.data && !!$state.current.data.masthead;\n    }\n\n    function setStateRoute(stateRoute, state) {\n        stateRoute.push(state);\n        if (!!state.parent) {\n            setStateRoute(stateRoute, state.parent);\n        }\n    }\n\n    function getBreadcrumbItems(state) {\n        var breadcrumbItems = []\n        var states = [];\n        setStateRoute(states, state);\n        states = states.reverse();\n        for (var i = 0; i < states.length; i++) {\n            if (i == states.length - 1 &&\n                !!states[i].data &&\n                !!states[i].data.masthead &&\n                !!states[i].data.masthead.actions &&\n                states[i].data.masthead.actions.length > 0) {\n                continue;\n            }\n            breadcrumbItems.push({\n                link: getLink(states[i]),\n                title: getMenuTitle(states[i])\n            });\n        }\n        return breadcrumbItems;\n    }\n\n    function getMastheadTitle(state) {\n        var title = 'unknown';\n        if (!!state.data) {\n            if (!!state.data.masthead && !!state.data.masthead.title) {\n                title = state.data.masthead.title;\n            } else if (!!state.data.menu && !!state.data.menu.title) {\n                title = state.data.menu.title;\n            } else if (!!state.data.tab && !!state.data.tab.title) {\n                title = state.data.tab.title;\n            }\n        }\n        return title;\n    }\n\n    function getMastheadDescription(state) {\n        var description = undefined;\n        if (!!state.data) {\n            if (!!state.data.tab && !!state.data.tab.description) {\n                description = state.data.tab.description;\n            } else if (!!state.data.masthead && !!state.data.masthead.description) {\n                description = state.data.masthead.description;\n            } else if (!!state.data.menu && !!state.data.menu.description) {\n                description = state.data.menu.description;\n            }\n        }\n        return description;\n    }\n\n    function getMastheadActions(state) {\n        var mastheadActions = undefined;\n        if (!!state.data &&\n            state.data.masthead &&\n            state.data.masthead.hasOwnProperty('actions') &&\n            state.data.masthead.actions.length > 0) {\n            mastheadActions = state.data.masthead.actions;\n        }\n        return mastheadActions;\n    }\n\n    function getTabs(state) {\n        var tabs = undefined;\n        if (state.data && state.data.tab && state.parent) {\n            tabs = [];\n            for (var i = 0; i < state.parent.children.length; i++) {\n                var brother = state.parent.children[i];\n                if (!!brother.data && !!brother.data.tab) {\n                    tabs.push({\n                        id: brother.data.tab.id,\n                        link: getLink(brother),\n                        title: getMenuTitle(brother)\n                    });\n                }\n            }\n        }\n        return tabs;\n    }\n\n    var tabDisabedArray = [];\n\n    function isTabDisabled(tabId) {\n        var result = false;\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index > -1) {\n            result = true;\n        }\n        return result;\n    }\n\n    function disableTab(tabId) {\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index == -1) {\n            tabDisabedArray.push(tabId);\n        }\n    }\n\n    function enableTab(tabId) {\n        var index = tabDisabedArray.indexOf(tabId);\n        if (index > -1) {\n            tabDisabedArray.splice(index, 1);\n        }\n    }\n\n    function resetTabs() {\n        tabDisabedArray = [];\n    }\n\n    function isTabActive($state, tab) {\n        return !isTabDisabled(tab.id) &&\n            !!tab &&\n            !!tab.link &&\n            $state.current.name === tab.link;\n    }\n\n    function debounce(func, wait, context, $scope, $timeout) {\n        var timer;\n        return function debounced() {\n            var context = $scope,\n                args = Array.prototype.slice.call(arguments);\n            $timeout.cancel(timer);\n            timer = $timeout(function() {\n                timer = undefined;\n                func.apply(context, args);\n            }, wait || 10);\n        };\n    }\n\n    function buildDelayedToggler(navID, $scope, $log, $timeout, $mdSidenav) {\n        return debounce(function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav(navID)\n                .toggle()\n                .then(function() {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }, 200, null, $scope, $timeout);\n    }\n\n    function buildToggler(navID, $log) {\n        return function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav(navID)\n                .toggle()\n                .then(function() {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }\n    }\n\n    function gxAppController(GX_STATE_CONFIG, rootScope, $scope, $http, $state, toaster, smoothScroll, $element, $timeout, $mdSidenav, $log) {\n\n        var self = this;\n\n        self.toggleLeft = buildDelayedToggler('left', $scope, $log, $timeout, $mdSidenav);\n        self.toggleRight = buildToggler('right', $log);\n        self.isOpenRight = function() {\n            return $mdSidenav('right').isOpen();\n        };\n\n        self.close = function() {\n            // Component lookup should always be available since we are not using `ng-if`\n            $mdSidenav('left').close()\n                .then(function() {\n                    $log.debug(\"close LEFT is done\");\n                });\n        }\n\n        self.config = {\n            asideFolded: false, // menu lateral aparece recolhido\n            showNav: true, // mostrar barra de navegação\n            headerFixed: false, // header fixo ao rolar\n            asideFixed: false, // menu lateral fixo no scroll\n            asideDock: false, // menu laterial aparece em formato horizontal\n            container: false // conteúdo boxed\n        }\n\n        self.rootState = GX_STATE_CONFIG;\n\n        self.intro = null;\n\n        self.initState = function(state) {\n            initState($state, state);\n        };\n\n        self.getLink = getLink;\n\n        self.isToDisplayMenu = isToDisplayMenu;\n\n        self.getMenuIconClass = getMenuIconClass;\n\n        self.getMenuTitle = getMenuTitle;\n\n        self.getMenuDescription = getMenuDescription;\n\n        /*self.isStateActive = function(state) {\n        \tisStateActive($state, state);\n        };*/\n\n        self.onMenuClick = onMenuClick;\n\n        self.isToDisplayMasthead = function() {\n            return isToDisplayMasthead($state);\n        }\n\n        self.breadcrumbItems = null;\n\n        self.mastheadTitle = null;\n\n        self.mastheadDescription = null;\n\n        self.mastheadActions = null;\n\n        self.tabs = null;\n\n        self.isTabDisabled = function(tab) {\n            return isTabDisabled(tab.id);\n        };\n\n        self.isTabActive = function(tab) {\n            return isTabActive($state, tab);\n        };\n\n        $scope.CurrentDate = new Date();\n\n        $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\n            if (!rootScope.session) {\n                rootScope.session = {};\n            }\n\n            rootScope.session.lastState = fromState;\n            $scope.$ctrl.breadcrumbItems = getBreadcrumbItems(toState)\n            $scope.$ctrl.mastheadTitle = getMastheadTitle(toState);\n            $scope.$ctrl.mastheadDescription = getMastheadDescription(toState);\n            $scope.$ctrl.mastheadActions = getMastheadActions(toState);\n            $scope.$ctrl.tabs = getTabs(toState);\n\n            if (!!toState.data && !!toState.data.intro && !!toState.data.intro.url) {\n                $http.get(toState.data.intro.url)\n                    .then(function(response) {\n                        $scope.$ctrl.intro = window.introJs();\n                        var introOptions = response.data;\n                        introOptions.nextLabel = '<strong>Próximo</strong>';\n                        introOptions.prevLabel = '<strong>Anterior</strong>';\n                        introOptions.skipLabel = '<strong>Entendi!</strong>';\n                        introOptions.doneLabel = '<strong>Concluir</strong>';\n                        $scope.$ctrl.intro.setOptions(introOptions);\n                    });\n            } else {\n                $scope.$ctrl.intro = null;\n            }\n\n            $scope.startIntro = function() {\n                if (!!self.intro) {\n                    self.intro.start();\n                }\n            };\n\n\n\n            if (!!toState.data.aside &&\n                (toState.data.aside.display === \"false\" || toState.data.aside.display == false)) {\n                $scope.$ctrl.displayAside = false;\n            } else {\n                $scope.$ctrl.displayAside = true;\n            }\n\n            if (!!toState.data.footer &&\n                (toState.data.footer.display === \"false\" || toState.data.footer.display == false)) {\n                $scope.$ctrl.displayFooter = false;\n            } else {\n                $scope.$ctrl.displayFooter = true;\n            }\n\n            if (!!toState.data.navbar &&\n                (toState.data.navbar.display === \"false\" || toState.data.navbar.display == false)) {\n                $scope.$ctrl.displayNavbar = false;\n            } else {\n                $scope.$ctrl.displayNavbar = true;\n            }\n\n\n            if (!!toState.data.cockpit &&\n                (toState.data.cockpit.display === \"false\" || toState.data.cockpit.display == false)) {\n                $scope.$ctrl.displayCockpit = false;\n            } else {\n                $scope.$ctrl.displayCockpit = true;\n            }\n\n        });\n\n        $scope.$on('gxApp.feedback', function(event, message) {\n            var toaterMessage = {};\n            toaterMessage.type = !message.type ? 'info' : message.type;\n            toaterMessage.title = !message.title ? 'Mensagem do sistema' : message.title;\n            toaterMessage.body = message.body;\n            toaster.pop(toaterMessage);\n        })\n\n        $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n            smoothScroll($element[0]);\n        });\n\n        $scope.$on('gxApp.disableTab', function(event, id) {\n            disableTab(id);\n        });\n\n        $scope.$on('gxApp.enableTab', function(event, id) {\n            enableTab(id);\n        });\n\n        $scope.$on('gxApp.resetTabs', function(event) {\n            resetTabs();\n        });\n\n        self.$onInit = function() {\n            $('body').find('gx-app').removeClass('hide');\n            $('body').find('.gx-app-init').addClass('hide');\n        }\n    }\n\n    function gxAppService($rootScope) {\n\n        var service = {};\n\n        service.showMessage = function(message) {\n            showMessage($rootScope, message);\n        };\n\n        service.showInfo = function(message, title) {\n            showInfo($rootScope, message, title);\n        };\n\n        service.showSuccess = function(message, title) {\n            showSuccess($rootScope, message, title)\n        };\n\n        service.showWarning = function(message, title) {\n            showWarning($rootScope, message, title)\n        };\n\n        service.showError = function(message, title) {\n            showError($rootScope, message, title)\n        };\n\n        service.disableTab = function(id) {\n            $rootScope.$broadcast(\"gxApp.disableTab\", id);\n        };\n\n        service.enableTab = function(id) {\n            $rootScope.$broadcast(\"gxApp.enableTab\", id);\n        };\n\n        service.resetTabs = function() {\n            $rootScope.$broadcast(\"gxApp.resetTabs\");\n        };\n\n        service.getLastState = function() {\n            return $rootScope.session.lastState;\n        };\n\n        return service;\n    }\n\n    function gxAppRun(state, stateParams) {\n\n    }\n\n    var gxAppDependencies = [\n        'gux.config',\n        'ui.router',\n        'ui.router.stateHelper',\n        'angular-intro',\n        'angular-loading-bar',\n        'gux.tooltip',\n        'toaster',\n        'ngMaterial',\n        'angularScreenfull',\n        'smoothScroll'\n    ];\n\n    var gxAppComponent = {\n        template:'<span ng-if=\"$ctrl.displayCockpit\"><gx-cockpit></gx-cockpit></span><style ng-if=\"$ctrl.displayCockpit || false\">\\n    .app {\\n        position: absolute;\\n        margin-top: 64px;\\n    }\\n    \\n    .off-screen {\\n        position: static;\\n    }\\n</style><gx-sidenav></gx-sidenav><div class=\"app animated fadeIn\" ng-class=\"{\\'app-aside-folded\\': $ctrl.config.asideFolded, \\'app-header-fixed\\':$ctrl.config.headerFixed, \\'app-aside-fixed\\':$ctrl.config.asideFixed, \\'app-aside-dock\\':$ctrl.config.asideDock, \\'container\\':$ctrl.config.container}\"><toaster-container toaster-options=\"{\\'time-out\\': 9000, \\'close-button\\':true, \\'animation-class\\': \\'toast-right-center\\'}\"></toaster-container><div class=\"app-header navbar\" ng-if=\"$ctrl.displayNavbar\"><div class=\"navbar-header bg-light b-r lter lt\"><button class=\"pull-right visible-xs\" ui-toggle-class=\"off-screen\" data-target=\".app-aside\"><i class=\"fa fa-bars\"></i></button><a ui-sref=\"{{$ctrl.rootState.name}}\" class=\"text-lt hvr-rotate\"><span class=\"hidden-folded hidden-xs m-l-xs center-block brand-sm\"><img src=\"images/app-logo.svg\" class style=\"height: 60px; padding: 4px; width: 93%;\"></span><span class=\"visible-folded hidden-xs center-block brand-icon\"><img src=\"images/ccee-logo-folded.png\" class></span><span class=\"hidden-lg hidden-md hidden-sm m-l-xs center-block brand-xs\" style=\"width:70%; margin-top: 8px;\"><img src=\"images/app-logo.svg\" class style=\"width: 40%; padding: 4px;\"></span></a></div><div class=\"collapse pos-rlt navbar-collapse bg-white\"><ul ng-transclude=\"navbarRight\" class=\"nav navbar-nav navbar-right\"></ul><ul ng-if=\"!!$ctrl.intro\" class=\"nav navbar-nav navbar-right\"><li class=\"hidden-xs b-r b-light\"><a ng-click=\"startIntro()\" gx-tooltip=\"Tour guiado\" gx-tooltip-placement=\"bottom\"><i class=\"fa fa-question-circle\"></i></a></li></ul></div></div><aside id=\"aside\" class=\"app-aside hidden-xs bg-light b-r lter\" ng-if=\"$ctrl.displayAside\" ng-class=\"{\\'app-aside-folded\\': $ctrl.config.asideFolded}\"><div class=\"aside-wrap\"><div class=\"navi-wrap\"><nav ui-nav class=\"navi clearfix\"><ul class=\"nav\"><li class=\"padder m-t m-b-sm text-muted text-xs\"><span>Menu</span></li><li ng-if=\"::$ctrl.isToDisplayMenu(state)\" ng-init=\"$ctrl.initState(state)\" ng-repeat=\"state in $ctrl.rootState.children\" ng-model=\"navPrincipal\" ng-class=\"{\\'active\\': state.data.expanded}\"><a md-ink-ripple ng-if=\"::(!state.data.menu.link && state.abstract)\" class=\"auto\"><span class=\"pull-right text-muted\"><i class=\"ion-ios-arrow-right rotate fa fa-rotate-normal\"></i><md-tooltip md-direction=\"right\">abrir</md-tooltip></span> <i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a><ul ng-if=\"::!state.data.menu.link && !!state.children && state.children.length > 0\" class=\"nav nav-sub bg-white\"><li ng-if=\"::$ctrl.isToDisplayMenu(state)\" ng-repeat=\"state in state.children\" class=\"b-b b-light\"><a md-ink-ripple ng-click=\"$event.stopPropagation()\" ui-sref=\"{{state.data.menu.link ? state.data.menu.link : state.name}}\" data-target=\"#aside\" ui-toggle-class=\"off-screen\" class=\"sub-a\"><i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a></li></ul><a md-ink-ripple ng-if=\"::(!!state.data.menu.link || !state.abstract)\" ui-sref=\"{{state.data.menu.link ? state.data.menu.link : state.name}}\" class=\"auto\"><span class=\"pull-right text-muted\"></span> <i ng-if=\"::!!$ctrl.getMenuIconClass(state)\" class=\"{{::$ctrl.getMenuIconClass(state)}}\"></i> <span>{{::$ctrl.getMenuTitle(state)}}</span></a></li></ul><div class=\"hidden-xs\"><div class=\"aside-settings mt-lg w-full\"><a href class=\"pull-left md-raised btn-fw m-b-sm md-fab md-button md-default-theme md-mini\" ng-click=\"$ctrl.config.asideFolded = !$ctrl.config.asideFolded\"><i class=\"fa {{$ctrl.config.asideFolded ? \\'fa-angle-double-right\\' : \\'fa-angle-double-left\\'}} fa-fw text-dark\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">Expandir / Recolher menu</md-tooltip></a><a href scroll-to=\"app\" class=\"pull-right md-raised btn-fw m-b-sm md-fab md-button md-default-theme md-mini\"><i class=\"ion-ios-arrow-thin-up fa-fw text-dark\"></i><md-tooltip md-direction=\"left\" class=\"w-auto-folded\">Ir ao topo</md-tooltip></a></div></div></nav><div class=\"wrapper hidden-folded m-t\"><img src=\"images/ccee-logo-whatermark.png\" class=\"center-block\"></div></div></div></aside><div ng-class=\"{\\'app-content\\': $ctrl.displayAside === true, \\'app-content-screen\\': $ctrl.displayAside === false}\"><a href class=\"off-screen-toggle hide active\" ui-toggle-class=\"off-screen\" data-target=\".app-aside\"></a><div class=\"app-content-body\"><div class=\"bg-light lter b-b b-t wrapper-md\" ng-if=\"$ctrl.isToDisplayMasthead()\"><div ng-if=\"!!$ctrl.mastheadActions\" class=\"dropdown pull-right\"><button type=\"button\" data-toggle=\"dropdown\" class=\"btn btn-default dropdown-toggle btn-lg\">Ações&nbsp;<span class=\"caret\"></span></button><ul class=\"dropdown-menu\"><li ng-repeat=\"action in $ctrl.mastheadActions\"><a ui-sref=\"{{action.link}}\"><i class=\"{{action.iconClass}}\"></i>&nbsp;{{action.title}}</a></li></ul></div><ol class=\"breadcrumb hidden-xs\">Você está em:&nbsp;<li ng-repeat=\"breadcrumbItem in $ctrl.breadcrumbItems\"><span ng-if=\"::breadcrumbItem.link === undefined\">{{breadcrumbItem.title}}</span> <a ng-if=\"::breadcrumbItem.link != undefined\" ui-sref=\"{{breadcrumbItem.link}}\">{{breadcrumbItem.title}}</a></li></ol><h3 class=\"text-black font-thin m-t-sm m-b-xxs\">{{$ctrl.mastheadTitle}}</h3><small class=\"text-muted\">{{$ctrl.mastheadDescription}}</small></div><div ng-if=\"!!$ctrl.tabs\" class=\"nav-tabs-alt\"><ul class=\"nav nav-tabs\"><li ng-repeat=\"tab in $ctrl.tabs\" ng-class=\"{\\'active\\': $ctrl.isTabActive(tab), \\'disabled\\': $ctrl.isTabDisabled(tab)}\" class=\"m-l-lg\"><a ui-sref=\"{{$ctrl.isTabDisabled(tab) ? \\'.\\' : tab.link}}\" ng-class=\"{\\'disabled\\': $ctrl.isTabDisabled(tab)}\">{{tab.title}}</a></li></ul></div><div ui-view></div></div></div><span ng-if=\"$ctrl.displayFooter\"><div class=\"app-footer wrapper b-t bg-light\"><span class=\"pull-right\">{{$ctrl.name}}-{{$ctrl.version}} <a href scroll-to=\"app\" class=\"m-l-sm text-muted\"><i class=\"fa fa-long-arrow-up\"></i></a></span> &copy;2016 Todos os direitos reservados.</div></span></div><div class=\"app-footer navbar navbar-fixed-bottom blue-grey-50 b-t visible-xs\" style=\"z-index: 1;\"><div class=\"row m-t-xs\"><div class=\"col-sm-8\"><div class=\"w-xl w-auto-xs center-block\"><div class=\"btn-group btn-group-justified text-center text-sm\"><div class=\"btn-group b-r\"><a class=\"wrapper-xs block hvr-back-pulse r r-2x\" scroll-to=\"app\"><i class=\"block text-md m-t-xs fa fa-user\"></i> <span class=\"text-sm\">perfil</span></a></div><div class=\"btn-group b-r\"><a href=\"/\" class=\"wrapper-xs block hvr-back-pulse r r-2x\"><i class=\"block text-md m-t-xs fa fa-home\"></i> <span class=\"text-sm\">Home</span></a></div><div class=\"btn-group\"><a class=\"wrapper-xs block hvr-back-pulse r r-2x\"><i class=\"block text-md m-t-xs fa fa-share\"></i> <span class=\"text-sm\">compartilhar</span></a></div></div></div></div></div></div>',\n        transclude: {\n            'navbarRight': '?li'\n        },\n        bindings: {\n            name: '@',\n            gxVersion: '@',\n            showAside: '@',\n            showFooter: '@',\n            showHeader: '@'\n        },\n        controller: [\n            'GX_STATE_CONFIG',\n            '$rootScope',\n            '$scope',\n            '$http',\n            '$state',\n            'toaster',\n            'smoothScroll',\n            '$element',\n            '$timeout',\n            '$mdSidenav',\n            '$log',\n            gxAppController\n        ]\n    };\n\n    angular\n        .module('gux.app', gxAppDependencies)\n        .config(['$provide', 'cfpLoadingBarProvider', '$locationProvider', 'GX_STATE_CONFIG', 'stateHelperProvider', '$mdThemingProvider', gxAppConfig])\n        .factory('gxAppService', ['$rootScope', gxAppService])\n        .component('gxApp', gxAppComponent)\n        .run(['$state', '$stateParams', gxAppRun]);\n\n}(window.$, window.angular));\n(function(angular) {\n    'use strict';\n\n    angular.module('gux.flatfull', [])\n        .directive('setNgAnimate', ['$animate', function($animate) {\n            return {\n                link: function($scope, $element, $attrs) {\n                    $scope.$watch(function() {\n                        return $scope.$eval($attrs.setNgAnimate, $scope);\n                    }, function(valnew, valold) {\n                        $animate.enabled(!!valnew, $element);\n                    });\n                }\n            };\n        }])\n        .directive('uiNav', ['$timeout', function($timeout) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    var _window = $(window),\n                        _mb = 768,\n                        wrap = $('.app-aside'),\n                        next,\n                        backdrop = '.dropdown-backdrop';\n                    // unfolded\n                    el.on('click', 'a', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        var _this = $(this);\n                        _this.parent().siblings(\".active\").toggleClass('active');\n                        _this.next().is('ul') && _this.parent().toggleClass('active') && e.preventDefault();\n                        // mobile\n                        _this.next().is('ul') || ((_window.width() < _mb) && $('.app-aside').removeClass('show off-screen'));\n                    });\n\n                    // folded & fixed\n                    el.on('mouseenter', 'a', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        $('> .nav', wrap).remove();\n                        if (!$('.app-aside-fixed.app-aside-folded').length || (_window.width() < _mb) || $('.app-aside-dock').length) return;\n                        var _this = $(e.target),\n                            top, w_h = $(window).height(),\n                            offset = 50,\n                            min = 150;\n\n                        !_this.is('a') && (_this = _this.closest('a'));\n                        if (_this.next().is('ul')) {\n                            next = _this.next();\n                        } else {\n                            return;\n                        }\n\n                        _this.parent().addClass('active');\n                        top = _this.parent().position().top + offset;\n                        next.css('top', top);\n                        if (top + next.height() > w_h) {\n                            next.css('bottom', 0);\n                        }\n                        if (top + min > w_h) {\n                            next.css('bottom', w_h - top - offset).css('top', 'auto');\n                        }\n                        next.appendTo(wrap);\n\n                        next.on('mouseleave.nav', function(e) {\n                            $(backdrop).remove();\n                            next.appendTo(_this.parent());\n                            next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                            _this.parent().removeClass('active');\n                        });\n\n                        $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next) {\n                            next && next.trigger('mouseleave.nav');\n                        });\n\n                    });\n\n                    wrap.on('mouseleave', function(e) {\n                        next && next.trigger('mouseleave.nav');\n                        $('> .nav', wrap).remove();\n                    });\n                }\n            };\n        }])\n        .directive('uiToggleClass', ['$timeout', '$document', function($timeout, $document) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    el.on('click', function(e) {\n                        e.preventDefault();\n                        var classes = attr.uiToggleClass.split(','),\n                            targets = (attr.target && attr.target.split(',')) || Array(el),\n                            key = 0;\n                        angular.forEach(classes, function(_class) {\n                            var target = targets[(targets.length && key)];\n                            (_class.indexOf('*') !== -1) && magic(_class, target);\n                            $(target).toggleClass(_class);\n                            key++;\n                        });\n                        $(el).toggleClass('active');\n\n                        function magic(_class, target) {\n                            var patt = new RegExp('\\\\s' +\n                                _class.replace(/\\*/g, '[A-Za-z0-9-_]+').split(' ').join('\\\\s|\\\\s') +\n                                '\\\\s', 'g');\n                            var cn = ' ' + $(target)[0].className + ' ';\n                            while (patt.test(cn)) {\n                                cn = cn.replace(patt, ' ');\n                            }\n                            $(target)[0].className = $.trim(cn);\n                        }\n                    });\n                }\n            };\n        }])\n        .directive('uiScrollTo', ['$location', '$anchorScroll', function($location, $anchorScroll) {\n            return {\n                restrict: 'AC',\n                link: function(scope, el, attr) {\n                    el.on('click', function(e) {\n                        $location.hash(attr.uiScrollTo);\n                        $anchorScroll();\n                    });\n                }\n            };\n        }]);\n\n}(window.angular));\n(function (angular, $) {\n\t'use strict';\n\n\tangular.module('gux.tooltip', [])\n\t\t.directive('gxTooltip', ['$timeout',\n\t\t\tfunction (timeout, parse) {\n\n\t\t\t\tfunction GXTooltipLink(scope, element, attributes, controller) {\n\t\t\t\t\tattributes.$observe('gxTooltip', function (title) {\n\t\t\t\t\t\ttimeout(function () {\n\t\t\t\t\t\t\t$(element)\n\t\t\t\t\t\t\t\t.tooltip({\n\t\t\t\t\t\t\t\t\t'placement': attributes.gxTooltipPlacement ? attributes.gxTooltipPlacement : 'top'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.attr('data-original-title', attributes.gxTooltip);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'A',\n\t\t\t\t\tlink: GXTooltipLink\n\t\t\t\t};\n\n\t\t\t}]);\n\n} (window.angular, window.$));\n\n(function(angular, $) {\n    'use strict';\n\n    angular.module('gux.sidenav', [])\n        .directive('gxSidenav', [\n            function() {\n\n                function GXSidenavController() {\n\n                }\n\n                return {\n                    restrict: 'E',\n                    replace: true,\n                    template:'<section><md-sidenav class=\"md-sidenav-left bg-black-opacity\" md-component-id=\"left\" md-disable-backdrop md-whiteframe=\"4\"><div class=\"md-navbar bg-black md-whiteframe-z1 gx-cockpit-nav\"><ul class=\"nav navbar-nav w-full\"><li class=\"pull-left m-l\"><h3>Menu de contexto</h3></li><li class=\"pull-right\"><a href ng-click=\"$ctrl.close()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></a></li></ul></div><md-content><div flex class=\"aside-wrap\"><div class=\"navi-wrap\"><div ng-cloak><md-content><md-tabs class=\"blue-grey-50\" md-no-select-click md-dynamic-height md-center-tabs md-swipe-content md-align-tabs=\"top\" md-stretch-tabs=\"always\"><md-tab label=\"Por assunto\"><md-content class=\"bg-black-opacity\"><h1>Assuntos</h1></md-content></md-tab><md-tab label=\"Por sistema\"><md-content class=\"bg-black-opacity\"><h1>Sistemas</h1></md-content></md-tab></md-tabs></md-content></div></div></div></md-content></md-sidenav></section>', // dentro dele o sidenav app\n                    transclude: true,\n                    controller: GXSidenavController,\n                    controllerAs: 'controller',\n                    scope: false\n                };\n            }\n        ]);\n\n}(window.angular, window.$));\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panel', ['gux.panelHeader', 'gux.panelBody', 'gux.panelFooter'])\n\t\t.directive('gxPanel', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div><div ng-transclude ngsf-fullscreen class=\"panel panel-default no-border\"></div></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelHeader', ['angularScreenfull'])\n\t\t.directive('gxPanelHeader', [\n\t\t\tfunction () {\n\n\t\t\t\tfunction GXPanelHeaderController() {\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div class=\"panel-heading font-bold\"><a ngsf-toggle-fullscreen class=\"text-muted text-lg pull-right\"><i class=\"fa fa-expand\"></i></a> <span class=\"h4\">{{controller.title}}</span></div>',\n\t\t\t\t\tscope: false,\n\t\t\t\t\tcontroller: GXPanelHeaderController,\n\t\t\t\t\tcontrollerAs: 'controller',\n\t\t\t\t\tbindToController: {\n\t\t\t\t\t\ttitle: '@',\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelFooter', [])\n\t\t.directive('gxPanelFooter', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div ng-transclude class=\"panel-footer text-right bg-light lter\"></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.panelBody', [])\n\t\t.directive('gxPanelBody', [\n\t\t\tfunction () {\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<div ng-transclude class=\"panel-body\"></div>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: false\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function (angular) {\n\t'use strict';\n\n\tangular.module('gux.fieldset', [])\n\t\t.directive('gxFieldset', [\n\t\t\tfunction () {\n\n\t\t\t\tfunction GXFieldsetController($scope) {\n\n\t\t\t\t\tif ($scope.controller.collapsed == undefined) {\n\n\t\t\t\t\t\t$scope.controller.collapsible = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$scope.controller.collapsible = true;\n\n\t\t\t\t\t\tif ($scope.controller.collapsed === null\n\t\t\t\t\t\t\t|| $scope.controller.collapsed === 'false'\n\t\t\t\t\t\t\t|| $scope.controller.collapsed === false) {\n\t\t\t\t\t\t\t$scope.controller.collapsed = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.controller.collapsed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'E',\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttemplate:'<fieldset><legend><span ng-if=\"controller.collapsible\" ng-click=\"controller.collapsed = !controller.collapsed\"><i ng-class=\"{\\'fa-chevron-right\\': controller.collapsed, \\'fa-chevron-down\\': !controller.collapsed}\" class=\"fa fa-fw\" style=\"font-size: 0.6em; vertical-align: middle;\"></i></span> {{controller.title}}</legend><span ng-transclude ng-class=\"{\\'collapse\\': controller.collapsible && controller.collapsed === true}\"></span></fieldset>',\n\t\t\t\t\ttransclude: true,\n\t\t\t\t\tscope: true,\n\t\t\t\t\tcontroller: ['$scope', GXFieldsetController],\n\t\t\t\t\tcontrollerAs: 'controller',\n\t\t\t\t\tbindToController: {\n\t\t\t\t\t\ttitle: '@',\n\t\t\t\t\t\tcollapsed: '='\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}]);\n\n} (window.angular));\n\n(function(angular, $) {\n    'use strict';\n\n    angular.module('gux.cockpit', [])\n        .directive('gxCockpit', [\n            function() {\n\n                function GXCockpitController() {\n\n                }\n\n                return {\n                    restrict: 'E',\n                    replace: true,\n                    template:'<div class=\"md-navbar blue-900 md-whiteframe-z1 gx-cockpit-nav header-fixed\" ng-cloak><ul class=\"nav navbar-nav navbar-left\"><li class><a href ng-click=\"$ctrl.toggleLeft(\\'cockpit-menu\\')\" class=\"pull-left\"><i class=\"ion ion-grid text-white m-l-xs font-bold\" style=\"font-size: 22px;\"></i></a> <span class=\"pull-right m-r-n-xxl hidden-lg hidden-md hidden-sm\"><a class=\"gx-cockpit-brand no-padder\" href=\"/\"><img src=\"images/logo-app-cockpit.png\"></a></span></li><li class=\"hide-xs hide-sm m-l-xs\"><a class=\"gx-cockpit-brand no-padder\" href=\"/\"><img src=\"images/logo-app-cockpit.png\"></a></li><li class=\"dropdown m-l-sm pos-stc\" dropdown><a href class=\"dropdown-toggle dker hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-bookmark fa-fw text-warning\"></i> <span class=\"text-white\">apps favoritos</span></a><div class=\"dropdown-menu w-full bg-white animated fadeIn\"><div class=\"panel\"><div class=\"panel-heading b-light bg-light\"><strong>Favoritos</strong></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Olá!</strong><br><span>Estes são seus favoritos. Tenha sempre acesso rápido!</span></span></span> <span class=\"row list-group-item blue-grey-300\"><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">CliqCCEE <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema de contabilização e Liquidação</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">SigaCCEE <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema integrado de gestão de ativos</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div><div class=\"col-md-2 col-xs-12\"><md-card><md-card-header><md-card-avatar><img src=\"images/bookmark.png\"></md-card-avatar><md-card-header-text><span class=\"h5\">S.C.D.E. <a href class=\"pull-right\"><i class=\"ion-ios-close-outline pull-right\"></i><md-tooltip md-direction=\"right\" class=\"w-auto-folded\">remover</md-tooltip></a></span><p class=\"text-muted text-xs\">Sistema de coleta de dados de energia</p></md-card-header-text></md-card-header><md-card-actions layout=\"row\" layout-align=\"start left\"><a ui-sref=\"home\" class=\"btn btn-block btn-default btn-xs\">entrar</a></md-card-actions></md-card></div></span> <a href class=\"list-group-item blue-grey-50 clear\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger font-bold\">fechar</span></a></div></div></div></li></ul><ul class=\"nav navbar-nav navbar-right m-r-xs gx-cockpit-link hidden-xs\"><li class=\"dropdown\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-user fa-fw text-white\"></i> <span class=\"text-white\">Julio Ferracini</span></a><div class=\"dropdown-menu w-xl animated fadeIn\"><div class=\"panel bg-white\"><div class=\"panel-heading b-light bg-light\"><strong>Seu cadastro</strong></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Julio</strong><br><span>Por aqui você administra seu cadastro.</span></span></span> <a ui-sref=\"home.prototipos.profile-mockup\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-user fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Configurações da sua conta<br><small class=\"text-muted\">Dados cadastrais do usuário ativo, troca de senha e configuração do perfil (notificações e preferências gerais).</small></span></a> <a ui-sref=\"home.gus.minha-conta\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-key fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Troca de senha e e-mail pessoal<br><small class=\"text-muted\">Alterar dados de acesso como senha e e-mail pessoal.</small></span></a> <a ui-sref=\"home.prototipos.profile-mockup\" class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-lock fa-2x\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Atribuições e permissões de acesso<br><small class=\"text-muted\">Visualizar e gerenciar preferências de acesso a sistemas na CCEE.</small></span></a> <a href class=\"list-group-item text-warning\"><span class=\"pull-left m-r text-warning\"><i class=\"fa fa-gear fa-2x text-warning\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Administração do sistema de cadastro<br><small class=\"text-muted\">Gerenciar preferências globais do sistema de cadastro.</small></span></a> <a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-sign-out text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger font-bold\">Sair do ambiente CCEE</span></a></div></div></div></li><li class=\"dropdown\" dropdown gx-tooltip=\"Notificações gerais\" gx-tooltip-placement=\"bottom\"><a href class=\"dropdown-toggle hvr-underline-from-center\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-bell fa-fw text-white\"></i> <span class=\"badge badge-sm up bg-danger dk pull-right-xs md-whiteframe-z2\">30</span></a><div class=\"dropdown-menu w-xl animated fadeIn\"><div class=\"panel bg-white\"><div class=\"panel-heading b-light bg-light\"><strong>Você possui <span>30</span> notificações</strong></div><div class=\"list-group\"><span href class=\"list-group-item bg-light dk\"><span class=\"pull-left m-r thumb-sm\"><img src=\"images/profile.jpg\" alt=\"...\" class=\"img-circle\"></span> <span class=\"clear block m-b-none text-light\"><i class=\"fa fa-user\"></i> <strong>Julio Ferracini</strong><br><small class=\"text-muted\">notificações referentes a este perfil</small></span></span> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-check text-info\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Cadastro <span class=\"badge blue-grey-200\">20120</span> aprovado para sua avaliação.<br><small class=\"text-muted\">1 hora atrás referente à</small> <small class=\"text-info\">Renato Tegão</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa-file-pdf-o text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Envio de documentos pendentes para o cadastro <span class=\"badge blue-grey-200\">20120</span><br><small class=\"text-muted\">2 hora atrás referente à</small> <small class=\"text-info\">COMERCIAL XPT</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa fa-refresh fa-spin text-light\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\">Julio, sua empresa possui solicitações de cadastro estão em análise. Fique atento às notificações.<br><small class=\"text-muted\">2 hora atrás enviado pela</small> <small class=\"text-warning\">CCEE</small></span></a> <a href class=\"list-group-item\"><span class=\"pull-left m-r\"><i class=\"fa fa fa-bullhorn text-warning\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none\"><span class=\"badge amber\">28</span> Novos comunicados recebidos.<br><small class=\"text-muted\">4 hora atrás enviado pela</small> <small class=\"text-warning\">CCEE</small></span></a></div><div class=\"panel-footer text-sm\"><a href class=\"pull-right\"><i class=\"fa fa-bell\"></i></a> <a href=\"#notes\" data-toggle=\"class:show animated fadeInRight\">Todas as notificações do perfil ativo</a></div></div></div></li><li class=\"dropdown pos-stc\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-right\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-tasks fa-fw text-white\"></i> <span class=\"text-white hidden-sm hiddem-xs\">Tarefas</span></a><div class=\"dropdown-menu bg-white animated fadeInRight md-whiteframe-z4\"><div class=\"panel bg-white\"><div class=\"panel-heading blue-grey-100 no-border\"><h4 class=\"font-thin\">Tarefas</h4></div><div class=\"list-group\"><span href class=\"list-group-item blue-grey-10\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><strong>Julio</strong><br><span>Estas são atividades vinculadas ao seu perfil.</span></span></span><div class=\"list-group-item\"><div class=\"row\"><div class=\"col-md-12\"><div class=\"center text-center\"><i class=\"ion-coffee fa-5x fa-fw text-muted\"></i><p>Você não possui nenhuma tarefa para realizar no momento.</p></div><div class=\"panel panel-default hide\"><div class=\"panel-heading\"><span class=\"label label-default pull-right m-t-sm wrapper-xs\">4 recebidas hoje</span><h4 class=\"font-thin m-t-sm m-b text-muted\"><i class=\"fa fa-tasks m-r\" aria-hidden=\"true\"></i> Tarefas</h4></div><div class=\"wrapper\">Tarefas gerais do usuário.</div><ul><li>Links de atividades rotineiras</li><li>• Declaração de Sobras e Deficits (MCSD)</li><li>• Registro de contratos</li><li>• Etc.</li></ul></div></div></div></div><a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger\">fechar painel</span></a></div></div></div></li><li class=\"dropdown pos-stc\" dropdown><a href class=\"dropdown-toggle hvr-underline-from-right\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-calendar fa-fw text-white\"></i> <span class=\"text-white hidden-sm hiddem-xs\"></span></a><div class=\"dropdown-menu w-xxl bg-white animated fadeInRight b-l\"><div class=\"panel bg-white\"><div class=\"panel-heading blue-grey-100 no-border\"><h4 class=\"font-thin\">Calendário de operações</h4></div><div class=\"list-group\"><span class=\"list-group-item bg-light\"><span class=\"pull-left m-r thumb-sm\"></span> <span class=\"clear block m-b-none text-light\"><span class=\"pull-left\"><strong>Julio</strong><br><span>Fique atento a estes prazos. Eles são importantes para a operação do Mercado e pode afetar o seu dia-a-dia.</span></span> <span class=\"pull-left\"><span class=\"font-thin text-muted\">Hoje</span> <small class=\"text-primary\">{{CurrentDate | date: \\'dd/MM/yyyy\\'}}</small> <small class=\"text-muted\">às</small> <small class=\"text-primary\">{{CurrentDate | date: \\'hh:mm\\'}}</small></span></span></span><div class=\"list-group-item bg-light lter\"><md-datepicker class=\"w-full\" ng-model=\"valorDataDes\" md-placeholder=\"Data\"></md-datepicker></div><div class=\"list-group-item\" style=\"overflow:auto; height:500px;\"><div class=\"row\"><div class=\"list-item col-md-12 no-border-xs\"><a href class=\"text-muted pull-right text-lg\"><i class=\"icon-arrow-right\"></i></a><div class=\"panel-body no-padder\"><div class=\"md-list md-whiteframe-z0 bg-white m-b\"><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para Registro e Validação dos montantes de Cessão de Energia de Reserva para usinas de fonte eólica - 1° quadriênio correspondente ao 2° LER</h3><small class=\"font-thin\">X+5du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle blue-grey\"><span class=\"text-lg\"><i class=\"fa fa-line-chart text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Divulgação dos resultados da liquidação financeira do MCSD - set/16</h3><small class=\"font-thin\">X+2du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para disponibilizar os Relatórios do Processamento da Contabilização - jul/16</h3><small class=\"font-thin\">MS+21du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para divulgar os relatórios de pré-liquidação de penalidades - ago/16</h3><small class=\"font-thin\">MS+22du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para disponibilizar os Relatórios do Processamento da Contabilização - jul/16</h3><small class=\"font-thin\">MS+21du</small></div></div><div class=\"md-list-item\"><div class=\"md-list-item-left img-circle orange\"><span class=\"text-lg\"><i class=\"ion-ios-flame text-white\"></i></span></div><div class=\"md-list-item-content\"><h3 class=\"text-sm\">Data limite para divulgar os relatórios de pré-liquidação de penalidades - ago/16</h3><small class=\"font-thin\">MS+22du</small></div></div></div></div></div></div></div><a href class=\"list-group-item blue-grey-50\"><span class=\"pull-left m-r\"><i class=\"fa fa-close text-danger\" aria-hidden=\"true\"></i></span> <span class=\"clear block m-b-none text-danger\">fechar painel</span></a></div></div></div></li><li><a ng-click=\"startIntro()\" gx-tooltip=\"Tour guiado\" gx-tooltip-placement=\"bottom\" class=\"hvr-underline-from-center\"><i class=\"fa fa-question-circle fa-fw text-white\"></i></a></li><li><a ngsf-toggle-fullscreen gx-tooltip=\"Tela cheia\" gx-tooltip-placement=\"bottom\"><i class=\"fa fa-expand fa-fw text-white\"></i> <i class=\"fa fa-compress fa-fw text-active\"></i></a></li></ul></div>',\n                    transclude: true,\n                    controller: GXCockpitController,\n                    controllerAs: 'controller',\n                    scope: false,\n                    link: function(scope, element, attributes) {\n                        element.addClass('customClass');\n                    }\n                };\n            }\n        ]);\n\n}(window.angular, window.$));\n(function(angular) {\n\n    'use strict';\n\n    var guxToolboxDependencies = [\n        'gux.tooltip',\n        'gux.app',\n        'gux.panel',\n        'gux.form',\n        'gux.formGroup',\n        'gux.fieldset',\n        'gux.formButton',\n        'gux.flatfull',\n        'bw.paging',\n        'gux.cockpit',\n        'gux.sidenav',\n        'ngMaterial',\n        'multiStepForm',\n        'as.sortable',\n        'angular-progress-button-styles'\n    ];\n\n    angular.module('gux.toolbox', guxToolboxDependencies);\n\n}(window.angular));"],"sourceRoot":"/source/"}